<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <StateMachine DisplayName="Main " sap2010:WorkflowViewState.IdRef="StateMachine_4">
    <StateMachine.InitialState>
      <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Read config file and set the environment." DisplayName="Initialize Process" sap2010:WorkflowViewState.IdRef="State_23">
        <State.Entry>
          <TryCatch DisplayName="Catch Initialization Exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_15">
            <TryCatch.Try>
              <Sequence DisplayName="Initialize Process State" sap2010:WorkflowViewState.IdRef="Sequence_56">
                <Assign DisplayName="Initialize systemError" sap2010:WorkflowViewState.IdRef="Assign_43">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Initialize business error" sap2010:WorkflowViewState.IdRef="Assign_73">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[businessRuleException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Assign Current Time to startTime" sap2010:WorkflowViewState.IdRef="Assign_44">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:DateTime">[startTime]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="Info" Message="[String.Format(&quot;Process started : {0}&quot;,startTime.ToString(&quot;MMM ddd d HH:mm yyyy&quot;))]" />
                <If Condition="[config is Nothing]" DisplayName="If First Run - Then Read Config File" sap2010:WorkflowViewState.IdRef="If_14">
                  <If.Then>
                    <Sequence DisplayName="First Run" sap2010:WorkflowViewState.IdRef="Sequence_55">
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings Workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[config]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Allows for optional use of relative or full path in the Config file." DisplayName="Invoke InitExecutionLogTable workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Utilities/InitExecutionLogTable.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_executionLog">[executionLog]</OutArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_executionLogFilePath">[executionLogFilePath]</OutArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <If sap2010:Annotation.AnnotationText="If: queue assigned to process from Orchestrator &#xA;Then: save Job arguments with values to Config, using the argument's name as keyname." Condition="[Not String.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="If OrchestratorQueueName Not Empty" sap2010:WorkflowViewState.IdRef="If_13">
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[config("OrchestratorQueueName")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_8" Text="If the argument has no value, do not overwrite config. This allows the default values to come from the Config.xlsx." />
                        </If.Else>
                      </If>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Ensure logic is added to the KillAllProcess workflow as needed." DisplayName="Invoke KillAllProcesses Workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <scg:Dictionary x:TypeArguments="x:String, Argument" />
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:AddLogFields sap2010:Annotation.AnnotationText="Add log fields for your process ass needed. Mostly used when connected to Orchestrator." DisplayName="Add log fields" sap2010:WorkflowViewState.IdRef="AddLogFields_5">
                        <ui:AddLogFields.Fields>
                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                        </ui:AddLogFields.Fields>
                      </ui:AddLogFields>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign Exception to businessRuleException" sap2010:WorkflowViewState.IdRef="Assign_80">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:BusinessRuleException">[businessRuleException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_25">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Assign Exception to systemError" sap2010:WorkflowViewState.IdRef="Assign_81">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </State.Entry>
        <State.Transitions>
          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_52">
            <Transition.To>
              <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="This is a plugin state used to build a local transaction table. It is intended to replicate some of the Orchestrator functionality, and meant to be deleted when Orchestrator is enabled. If Orchestrator is used, then delete this state and change transactionItem to UiPath.Core.QueueItem type wherever applicable." DisplayName="Set Transaction Table" sap2010:WorkflowViewState.IdRef="State_22">
                <State.Entry>
                  <TryCatch DisplayName="Catch Set Transaction Queue Exceptions" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                    <TryCatch.Try>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_84">
                        <If Condition="[transactionTable is Nothing]" sap2010:WorkflowViewState.IdRef="If_22">
                          <If.Then>
                            <Sequence sap2010:Annotation.AnnotationText="Here is where  the source of input data is processed. This examples works by requesting the user for an Excel spreadsheet containing all the samples to be processed, but it can be changed to any logic that creates a Data Table with input parameters to be processed." DisplayName="Get Transactions from Outside Source" sap2010:WorkflowViewState.IdRef="Sequence_86">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:WorkbookApplication" Name="inputFile" />
                              </Sequence.Variables>
                              <ui:MessageBox ChosenButton="{x:Null}" Buttons="Ok" Caption="Select a file" DisplayName="Prompt User to Select Input File" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="Select the input file file for execution..." TopMost="True" />
                              <ui:SelectFile DisplayName="Select Input File for Execution" Filter="Excel Files (*.xls, *.xlsx)|*.xls;*.xlsx" sap2010:WorkflowViewState.IdRef="SelectFile_1" SelectedFile="[inputFileFullAddress]" />
                              <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Build Transaction Data Table from Excel Input File" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Workbook="[inputFile]" WorkbookPath="[inputFileFullAddress]">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Process Input File" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                      <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[transactionTable]" DisplayName="Read Input File" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[inputFile.GetSheets(0).ToString]" />
                                      <ui:AddDataColumn x:TypeArguments="x:String" Column="{x:Null}" AllowDBNull="True" sap2010:Annotation.AnnotationText="Add a Status column to keep track to the state of each transaction throughout the process." AutoIncrement="False" ColumnName="Status" DataTable="[transactionTable]" DefaultValue="[Nothing]" DisplayName="Add Staus Data Column" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_27" MaxLength="100" Unique="False" />
                                      <ui:ExcelCloseWorkbook DisplayName="Close Input File" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[inputFile]" />
                                      <ui:LogMessage DisplayName="Log Transaction Data Built Message" sap2010:WorkflowViewState.IdRef="LogMessage_62" Level="Info" Message="[String.Format(&quot;Transaction Table Built from: {0}&quot;, inputFileFullAddress)]" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_10" Text="// This is not the first pass of this bot execution. Transaction Table was already set." />
                          </If.Else>
                        </If>
                      </Sequence>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <Assign DisplayName="Assign Exception to systemError" sap2010:WorkflowViewState.IdRef="Assign_48">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                  </TryCatch>
                </State.Entry>
                <State.Transitions>
                  <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_44">
                    <Transition.To>
                      <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Process stops here. Process report summary is built here." DisplayName="End Process" sap2010:WorkflowViewState.IdRef="State_19" IsFinal="True">
                        <State.Entry>
                          <Sequence sap2010:Annotation.AnnotationText="This activity creates a process report table used to add process data to the Execution Log File when not connected to Orchestrator.  The data is appended to the current Execution Log workbook as an additional sheet." DisplayName="Add Process Report to Execution Log" sap2010:WorkflowViewState.IdRef="Sequence_72">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Default="[config(&quot;ExLog_ProcessSheet&quot;).ToString]" Name="processReportSheet" />
                              <Variable x:TypeArguments="sd:DataTable" Name="processReport" />
                              <Variable x:TypeArguments="sd:DataRow" Name="processData" />
                            </Sequence.Variables>
                            <ui:BuildDataTable sap2010:Annotation.AnnotationText="Create a report report table with the required fields for all automations. Columns created here are handled by this RE-Framework template." DataTable="[processReport]" DisplayName="Build Process Report Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_5" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;TotalTransactions&quot; type=&quot;xs:int&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ProcessedTransactions&quot; type=&quot;xs:int&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SuccessfulTransactions&quot; type=&quot;xs:int&quot; /&gt;&#xA;                &lt;xs:element name=&quot;FailedTransactions&quot; type=&quot;xs:int&quot; /&gt;&#xA;                &lt;xs:element name=&quot;UnprocessedTransactions&quot; type=&quot;xs:int&quot; /&gt;&#xA;                &lt;xs:element name=&quot;StartTime&quot; type=&quot;xs:dateTime&quot; /&gt;&#xA;                &lt;xs:element name=&quot;EndTime&quot; type=&quot;xs:dateTime&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                            <Sequence sap2010:Annotation.AnnotationText="Process report data specific to the process invoked by this framework can be captured by adding the pertinent columns here. " DisplayName="Add Process Specific Columns to Process Report Table" sap2010:WorkflowViewState.IdRef="Sequence_78">
                              <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" AllowDBNull="True" sap2010:Annotation.AnnotationText="This activity demonstrates how to add a column to the process report. Delete it or add more as needed." AutoIncrement="False" ColumnName="InputFilePath" DataTable="[processReport]" DefaultValue="[&quot;No Input File Found&quot;]" DisplayName="Add Input Data File Path" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_26" MaxLength="100" Unique="False" />
                            </Sequence>
                            <Sequence sap2010:Annotation.AnnotationText="All data applicable to all automations is captured here. This squence should not be changed when implementing the framweork." DisplayName="Capture General Process Data" sap2010:WorkflowViewState.IdRef="Sequence_79">
                              <Assign DisplayName="Assign new Process Data Row" sap2010:WorkflowViewState.IdRef="Assign_57">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataRow">[processData]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataRow">[processReport.NewRow]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Total Number of Transactions" sap2010:WorkflowViewState.IdRef="Assign_58">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("TotalTransactions")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[transactionTable.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Number of Processed Transactions" sap2010:WorkflowViewState.IdRef="Assign_59">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("ProcessedTransactions")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[transactionNumber - 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Number of Successful Transactions" sap2010:WorkflowViewState.IdRef="Assign_61">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("SuccessfulTransactions")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[successfulSamples]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Number of Failed Transactions" sap2010:WorkflowViewState.IdRef="Assign_62">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("FailedTransactions")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[transactionNumber - successfulSamples - 1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Number of Unprocessed Transactions" sap2010:WorkflowViewState.IdRef="Assign_63">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("UnprocessedTransactions")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[transactionTable.Rows.Count - (transactionNumber - 1)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign Start Time" sap2010:WorkflowViewState.IdRef="Assign_66">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("StartTime")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[startTime]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign End Time" sap2010:WorkflowViewState.IdRef="Assign_65">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("EndTime")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[Now]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <Sequence sap2010:Annotation.AnnotationText="All data for the added columns should be captured here. Update the sequence as needed." DisplayName="Capture Process Specific Data" sap2010:WorkflowViewState.IdRef="Sequence_80">
                              <Assign DisplayName="Assign Input File Path" sap2010:WorkflowViewState.IdRef="Assign_64">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[processData("InputFilePath")]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[inputFileFullAddress]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[processData]" DataTable="[processReport]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_12" />
                            <ui:WriteRange AddHeaders="True" DataTable="[processReport]" DisplayName="Write range" sap2010:WorkflowViewState.IdRef="WriteRange_9" SheetName="[processReportSheet]" StartingCell="A1" WorkbookPath="[executionLogFilePath]" />
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Info" Message="[String.Format(&quot;Process ended : {0}&quot;,Date.Now.ToString(&quot;MMM ddd d HH:mm yyyy&quot;))]" />
                          </Sequence>
                        </State.Entry>
                      </State>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Fatal" Message="[String.Format(&quot;System error at set transaction queue: {0} At Source; {1}&quot;, systemError.Message, systemError.Source)]" />
                    </Transition.Action>
                    <Transition.Condition>[systemError isNot Nothing]</Transition.Condition>
                  </Transition>
                  <Transition DisplayName="Success " sap2010:WorkflowViewState.IdRef="Transition_51" Condition="[systemError is Nothing]">
                    <Transition.To>
                      <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Get next transaction. " DisplayName="Get Transaction Data from Table or Orchestrator Queue" sap2010:WorkflowViewState.IdRef="State_21">
                        <State.Entry>
                          <Sequence DisplayName="Retreive Data" sap2010:WorkflowViewState.IdRef="Sequence_63">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Boolean" Name="shouldStop" />
                            </Sequence.Variables>
                            <ui:ShouldStop sap2010:Annotation.AnnotationText="Only used whe Orchestrator is present. It does not affect the process when not connected to Orchestrator." DisplayName="Check Stop Signal" sap2010:WorkflowViewState.IdRef="ShouldStop_4" Result="[shouldStop]" />
                            <If Condition="[shouldStop]" DisplayName="Should Stop or Get Next" sap2010:WorkflowViewState.IdRef="If_15">
                              <If.Then>
                                <Sequence DisplayName="Orchestrator Stop Request" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                  <ui:LogMessage DisplayName="Log Stop  Message" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                                  <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_49">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="sd:DataRow">[transactionItem]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <TryCatch DisplayName="Try Get Next Transaction Data" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                  <TryCatch.Try>
                                    <Sequence DisplayName="Get Next Trasanction Data" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData Workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_transactionTable">[transactionTable]</InArgument>
                                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_executionLog">[executionLog]</InArgument>
                                          <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_transactionLog">[transactionLog]</OutArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_transactionNumber">[transactionNumber]</InArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[config]</InArgument>
                                          <OutArgument x:TypeArguments="sd:DataRow" x:Key="out_transactionItem">[transactionItem]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_transactionField1">[transactionField1]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_transactionField2">[transactionField2]</OutArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="out_transactionID">[transactionID]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Log Exception Message and End Process" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                          <ui:LogMessage DisplayName="Log Get Transaction Date Error Message" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Fatal" Message="[String.Format(&quot;{0} {1} At Source: {2}&quot;, config(&quot;LogMessage_GetTransactionDataError&quot;), exception.Message, exception.Source)]" />
                                          <Assign DisplayName="End Process" sap2010:WorkflowViewState.IdRef="Assign_51">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="sd:DataRow">[transactionItem]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="sd:DataRow">[Nothing]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                              </If.Else>
                            </If>
                          </Sequence>
                        </State.Entry>
                        <State.Transitions>
                          <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_49">
                            <Transition.To>
                              <State x:Name="__ReferenceID4" sap2010:Annotation.AnnotationText="A transaction either succeeds or fails with a Business Rule Exception or a System Error. Failed transactions because of System Errors are retried a max number of times, as defined in Config.xlsx." DisplayName="Process Transaction Data" sap2010:WorkflowViewState.IdRef="State_20">
                                <State.Entry>
                                  <TryCatch DisplayName="Try to Process Transaction" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                                    <TryCatch.Try>
                                      <Sequence DisplayName="Process  Current Transaction Item " sap2010:WorkflowViewState.IdRef="Sequence_64">
                                        <Assign DisplayName="Assign businessRuleException to Nothing" sap2010:WorkflowViewState.IdRef="Assign_52">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[businessRuleException]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="Assign systemError to Nothing" sap2010:WorkflowViewState.IdRef="Assign_53">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Process Workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Process.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="sd:DataRow" x:Key="in_transactionItem">[transactionItem]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[config]</InArgument>
                                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_transactionLog">[transactionLog]</InOutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                                        <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Assign DisplayName="Set Transaction Status to Rule Exception" sap2010:WorkflowViewState.IdRef="Assign_54">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="ui:BusinessRuleException">[businessRuleException]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </ActivityAction>
                                      </Catch>
                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Assign DisplayName="Set Transaction Status to System Error" sap2010:WorkflowViewState.IdRef="Assign_55">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="s:Exception">[systemError]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                    <TryCatch.Finally>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InOutArgument x:TypeArguments="sd:DataRow" x:Key="io_transactionLog">[transactionLog]</InOutArgument>
                                            <InArgument x:TypeArguments="s:Exception" x:Key="in_systemError">[systemError]</InArgument>
                                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[config]</InArgument>
                                            <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_businessRuleException">[businessRuleException]</InArgument>
                                            <InArgument x:TypeArguments="sd:DataRow" x:Key="in_transactionItem">[transactionItem]</InArgument>
                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="io_retryNumber">[retryNumber]</InOutArgument>
                                            <InOutArgument x:TypeArguments="x:Int32" x:Key="io_transactionNumber">[transactionNumber]</InOutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_transactionField1">[transactionField1]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_transactionField2">[transactionField2]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_transactionID">[transactionID]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[transactionLog("EndTime")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Object">[Now]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="Info" Message="[String.Format(&quot;Process Transaction ended : {0}&quot;,transactionLog(&quot;EndTime&quot;).ToString)]" />
                                      </Sequence>
                                    </TryCatch.Finally>
                                  </TryCatch>
                                </State.Entry>
                                <State.Transitions>
                                  <Transition DisplayName="Success" sap2010:WorkflowViewState.IdRef="Transition_45" To="{x:Reference __ReferenceID0}">
                                    <Transition.Action>
                                      <Sequence DisplayName="Log Succesful Transaction" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke BuildExecutionLog workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Utilities\BuildExecutionLog.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="sd:DataRow" x:Key="in_transactionLog">[transactionLog]</InArgument>
                                            <InArgument x:TypeArguments="x:Int32" x:Key="in_transactionNumber">[transactionNumber]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_executionLogFilePath">[executionLogFilePath]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_transactionsReportSheet">[transactionsReportSheet]</InArgument>
                                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_executionLog">[executionLog]</InOutArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[successfulSamples]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[successfulSamples + 1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </Transition.Action>
                                    <Transition.Condition>[systemError is Nothing and businessRuleException is Nothing]</Transition.Condition>
                                  </Transition>
                                  <Transition DisplayName="Business Rule Exception" sap2010:WorkflowViewState.IdRef="Transition_46" To="{x:Reference __ReferenceID0}">
                                    <Transition.Action>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke BuildExecutionLog workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Utilities\BuildExecutionLog.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_transactionLog">[transactionLog]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_transactionNumber">[transactionNumber]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_executionLogFilePath">[executionLogFilePath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_transactionsReportSheet">[transactionsReportSheet]</InArgument>
                                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_executionLog">[executionLog]</InOutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Transition.Action>
                                    <Transition.Condition>[businessRuleException isNot Nothing]</Transition.Condition>
                                  </Transition>
                                  <Transition DisplayName="Error/Retry" sap2010:WorkflowViewState.IdRef="Transition_47" To="{x:Reference __ReferenceID1}">
                                    <Transition.Action>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_76">
                                        <ui:CommentOut sap2010:Annotation.AnnotationText="The framework will not log failed retried transactions to the Excecution Log File, by default. It will only log succesful and critically failed transactions. Enable this activity to add this information to the Execution Log File for a more detailed and verbosed report." DisplayName="Disable Loging all Transaction Retries" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke BuildExecutionLog workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="Utilities\BuildExecutionLog.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="sd:DataRow" x:Key="in_transactionLog">[transactionLog]</InArgument>
                                                  <InArgument x:TypeArguments="x:Int32" x:Key="in_transactionNumber">[transactionNumber]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_executionLogFilePath">[executionLogFilePath]</InArgument>
                                                  <InArgument x:TypeArguments="x:String" x:Key="in_transactionsReportSheet">[transactionsReportSheet]</InArgument>
                                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_executionLog">[executionLog]</InOutArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                        <ui:LogMessage sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Info" Message="[String.Format(&quot;Retry Transaction {0}. Retry Number: {1}&quot;, transactionNumber, retryNumber)]" />
                                      </Sequence>
                                    </Transition.Action>
                                    <Transition.Condition>[systemError isNot Nothing and retryNumber &gt; 0]</Transition.Condition>
                                  </Transition>
                                  <Transition DisplayName="Error/No Retries" sap2010:WorkflowViewState.IdRef="Transition_48" To="{x:Reference __ReferenceID2}">
                                    <Transition.Action>
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke BuildExecutionLog workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Utilities\BuildExecutionLog.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="sd:DataRow" x:Key="in_transactionLog">[transactionLog]</InArgument>
                                          <InArgument x:TypeArguments="x:Int32" x:Key="in_transactionNumber">[transactionNumber]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_executionLogFilePath">[executionLogFilePath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="in_transactionsReportSheet">[transactionsReportSheet]</InArgument>
                                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_executionLog">[executionLog]</InOutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Transition.Action>
                                    <Transition.Condition>[systemError isNot Nothing]</Transition.Condition>
                                  </Transition>
                                </State.Transitions>
                                <State.Variables>
                                  <Variable x:TypeArguments="x:String" Default="[config(&quot;ExLog_TransactionsSheet&quot;).ToString]" Name="transactionsReportSheet" />
                                </State.Variables>
                              </State>
                            </Transition.To>
                            <Transition.Action>
                              <ui:LogMessage sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[String.Format(&quot;********** {0} {1} **********&quot;, config(&quot;LogMessage_GetTransactionData&quot;), transactionNumber)]" />
                            </Transition.Action>
                            <Transition.Condition>[transactionItem isNot Nothing]</Transition.Condition>
                          </Transition>
                          <Transition DisplayName="No Data" sap2010:WorkflowViewState.IdRef="Transition_50" To="{x:Reference __ReferenceID2}">
                            <Transition.Action>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_69">
                                <If Condition="[systemError is Nothing]" sap2010:WorkflowViewState.IdRef="If_16">
                                  <If.Then>
                                    <ui:LogMessage sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Info" Message="[&quot;Process finished due to no more transaction data.&quot;]" />
                                  </If.Then>
                                  <If.Else>
                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Fatal" Message="[&quot;Process ended due to error getting transactions.&quot;]" />
                                  </If.Else>
                                </If>
                              </Sequence>
                            </Transition.Action>
                            <Transition.Condition>[transactionItem is Nothing]</Transition.Condition>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
            <Transition.Action>
              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_9" Text="Default transition is picked up if there are no errors during initialization." />
            </Transition.Action>
            <Transition.Condition>[(systemError Is Nothing) AND (businessRuleException is NOTHING)]</Transition.Condition>
          </Transition>
          <Transition DisplayName="System Error" sap2010:WorkflowViewState.IdRef="Transition_53" To="{x:Reference __ReferenceID2}">
            <Transition.Action>
              <ui:LogMessage sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Fatal" Message="[String.Format(&quot;System error at initialization: {0}. At Source; {1}&quot;, systemError.Message, systemError.Source)]" />
            </Transition.Action>
            <Transition.Condition>[systemError isNot Nothing]</Transition.Condition>
          </Transition>
          <Transition DisplayName="Business Error" sap2010:WorkflowViewState.IdRef="Transition_54" To="{x:Reference __ReferenceID2}">
            <Transition.Action>
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_61" Level="Error" Message="[String.Format(&quot;Business Rule error at initialization: {0}. At Source; {1}&quot;, businessRuleException.Message, businessRuleException.Source)]" />
            </Transition.Action>
            <Transition.Condition>[businessRuleException isNot Nothing]</Transition.Condition>
          </Transition>
        </State.Transitions>
      </State>
    </StateMachine.InitialState>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="s:Exception" Name="systemError" />
      <Variable x:TypeArguments="s:DateTime" Name="startTime" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="transactionNumber" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="retryNumber" />
      <Variable x:TypeArguments="sd:DataRow" Name="transactionItem" />
      <Variable x:TypeArguments="x:String" Name="transactionField1" />
      <Variable x:TypeArguments="x:String" Name="transactionField2" />
      <Variable x:TypeArguments="x:String" Name="transactionID" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="businessRuleException" />
      <Variable x:TypeArguments="sd:DataRow" Name="transactionLog" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="config" />
      <Variable x:TypeArguments="sd:DataTable" Name="executionLog" />
      <Variable x:TypeArguments="x:String" Name="executionLogFilePath" />
      <Variable x:TypeArguments="sd:DataTable" Default="[Nothing]" Name="transactionTable" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="successfulSamples" />
      <Variable x:TypeArguments="x:String" Name="inputFileFullAddress" />
    </StateMachine.Variables>
    <sads:DebugSymbol.Symbol>d0hDOlxVc2Vyc1xta2ltZXJ5XERvY3VtZW50c1xHU0FcUlBBLU9TUy1tYXN0ZXJcQ2F0YWxvZ0ZyYW1ld29ya1xNYWluLnhhbWz8AVMDnwUSAgEBjwUzjwU2AwHxApAFM5AFNgMB8AKaBTiaBUMDAe8CmwUzmwU2AwHuAscBD/EEFwMBvQJVB4UFDwMB9gGBAhfeAh8DAbUB5wIX7QQfAgF2qwMf1gQnAgECyQET/AEeAwHIAuMCK+MCRgMBxQLhAhfhAvABAwHBAuUCcOUCigEDAb8CVwvCARYDAYQC9gQj9gRkAwGCAvQED/QEngEDAYEC/AQj/AQ+AwH/AfoED/oE4gEDAfsBggUjggVIAwH6AYAFD4AFlwIDAfgBgwIb3AImAwG3AekCG6YDJgMBhwHbBDPbBFIDAYUB2QQf2QT4AQMBgQHqBDPqBE8DAYAB3wQf6AQqAgF41ARQ1ASIAQIBA60DI4QELgIBPp0EO50EeAIBPIkEJ5sEMgIBKqsEO6sEYAIBKaEEJ6kEPwIBHcIEO8IEbQIBGq8EJ8AEMgIBFNAEO9AEVgIBEsYEJ84EPwIBBssBF+kBIgMBzgLxARv4ASQDAckC4QJs4QLtAQMBwgJZD6ABGgMBjwKoAROvARwDAYoCtwETvgEcAwGFAvoEZPoE3wEDAfwBgAV+gAWUAgMB+QGFAkyFAn8DAbgBiQIdiQKhDwMB8wGKAh2MAigDAe0BjQIdzgIoAwHOAc8CHdgCKAMByQHZAh3ZAsEBAwHEAdoCHdoC/gEDAbwB2wId2wL0AQMBugHtAh3tAqECAwGyAe4CHaUDIgMBiAHZBHPZBPUBAwGCAeAEIecEJgIBea8DJ8cDMgIBZeoDJ4IEMgIBSc8DK9YDNAIBRN4DK+UDNAIBP4oEKZIEQQIBMJMEKZoEMgIBK6YEdaYEjgECASelBHKlBIgBAgElpARupASBAQIBI6cEcacEfwIBIaMEbqMEfgIBH6EE4QGhBIMCAgEesAQpvgQ5AgEZvwQpvwTnAQIBFcsEdcsEjgECARDKBHLKBIgBAgEOyQRuyQSBAQIBDMwEccwEfwIBCsgEbsgEfgIBCMYE4QHGBIMCAgEHzAEZ6AEeAwHPAvYBSfYBVAMBzALzAUrzAVcDAcoCWhFhGgMBuQJiEWkaAwG1AmoRcRoDAbECchFy6wEDAa4CcxGfARYDAZACrQFOrQFZAwGNAqoBT6oBZgMBiwK8AUG8AUwDAYgCuQFCuQFPAwGGAokC6QGJAvoBAwH0AYsCH4sC9wMDAe4BjgIflQIoAwHpAZYCH50CKAMB5gGeAh+lAigDAeIBpgIfrQIoAwHeAa4CH7UCKAMB2QG2Ah+9AigDAdYBvgIfxQIoAwHSAcYCH80CKAMBzwHQAh/XAigDAcoB2QJI2QJXAwHHAdkCYtkCcwMBxQHaAtEB2gLVAQMBwwHaAkjaAlkDAcEB2gKtAdoCwwEDAb8B2gLjAdoC+wEDAb0B2wKLAdsC8QEDAbsB7QKQAu0CngIDAbMB7gIr7gI5AwGJAfACIfoCLAMBqwH9AiGjAywDAYsB4AQv4ARJAgF64gQl4gS9AQIBfuUEJeUE1wECAXywAym3AzICAXK4Aym/AzICAW7AAynGA0ECAWbrAyn4A0ECAU/5AymABDICAUyBBCmBBIUCAgFK1ANm1ANxAgFH0QNn0QN+AgFF4wNZ4wNkAgFC4ANa4ANnAgFAjwR3jwSQAQIBOo4EdI4EigECATiNBHCNBIMBAgE2kARzkASBAQIBNIwEcIwEgAECATKKBOMBigSFAgIBMZgEU5gEagIBLpUEVJUEZwIBLL8Efb8E5AECARbMASfMAUYDAdACzgEd4wEoAwHSAuYBHeYBtwEDAdECXz9fSAMBvAJcQFxNAwG6AmdMZ1UDAbgCZE1kZAMBtgJvPm9DAwG0Amw/bEoDAbICcn9y6AEDAa8Ccx9zNAMBkQJ1FZ0BIAMBkwKLAtYCiwL5AgMB8gGLAp0CiwKsAgMB8QGLArcCiwLIAgMB7wGTAkyTAmIDAewBkAJNkAJaAwHqAZsCSpsCZwMB6AGYAkuYAm0DAecBowJKowJhAwHkAaACS6ACcQMB4wGrAkqrAl0DAeABqAJLqAJyAwHfAbMCSrMCdQMB2wGwAkuwAm4DAdoBuwJKuwKBAQMB2AG4Aku4AnMDAdcBwwJKwwJVAwHUAcACS8ACZQMB0wHLAkrLAk8DAdEByAJLyAJjAwHQAdUCStUCYAMBzAHSAkvSAmkDAcsB8QIj8QLAAQMBsAHyAiP5AiwDAawB/wIljQMwAwGWAZUDKZ8DNAMBjAHiBHniBLoBAgF/5QSUAeUE1AECAX21A2S1A20CAXWyA2WyA3wCAXO9A1e9A2ACAXG6A1i6A2UCAW/CA3HCA4IBAgFsxANzxAODAQIBasAD2QHAA+cBAgFpwwOAAcMDiAECAWfyA23yA3oCAWPzA3PzA4YBAgFh9ANx9AOEAQIBX/ADhQHwA5wBAgFd8QNx8QOCAQIBW/UDcfUDhAECAVn2A232A3wCAVftA3PtA4MBAgFV7gNu7gN7AgFT6wPWAesD+wECAVLvA4AB7wOIAQIBUP4DVP4DWQIBTvsDVfsDcAIBTYEElwGBBIICAgFL0gEf0gGNAgMB6wLTAR/TAeUBAwHoAtQBH+IBOgMB0wJ2F3wvAwGoAn0XgwEvAwGgAoQBF5IBHAMBlwKTAReXAS8DAZUCmAEXnAEpAwGUAvEClwHxAr0BAwGxAfcCUPcCWQMBrwH0AlH0AmIDAa0BgAMnjAM/AwGXAZYDK5YDygIDAZEBlwMrngM0AwGNAdIBW9IBagMB7QLSAc4B0gH7AQMB7ALTAcoB0wHiAQMB6QLUAdEB1AHeAQMB5gLUAewB1AGEAgMB5ALaASXfATADAdQCenB6eAMBrAJ2zwF27wEDAasCeVx5dwMBqgJ4WHhoAwGpAn9gf24DAaYCgAFkgAF6AwGkAn2+An3kAgMBowKBAW6BAXYDAaEChAHUAYQBhwIDAZgChgEbjQEkAwGbApABG5AB0AEDAZoCkwG0ApMB1QIDAZYCgwNugwN8AwGpAYUDboUDgQEDAacBigNtigN8AwGlAYQDcIQDgAEDAaMBggNyggOEAQMBoQGHA3GHA4IBAwGfAYgDcYgDhAEDAZ0BgAPiAYADhQIDAZwBhgN+hgOGAQMBmgGJA3GJA4QBAwGYAZYDtQGWA8cCAwGSAZwDWJwDYQMBkAGZA1mZA2oDAY4B2wEn2wH9AQMB4ALcASfcAdQDAwHbAt0BJ90BrQEDAdgC3gEn3gGFAgMB1QKLAUaLAV0DAZ4CiAFHiAFoAwGcAtsBZ9sBewMB4gLbAdcB2wH6AQMB4QLcAc4C3AHZAgMB3wLcAZkC3AGhAgMB3gLcAawC3AHAAgMB3ALdAZ0B3QGqAQMB2QLeAawB3gGCAgMB1gI=</sads:DebugSymbol.Symbol>
  </StateMachine>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="728,60" />
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="728,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="728,60" />
      <sap2010:ViewStateData Id="LogMessage_58" sap:VirtualizedContainerService.HintSize="728,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="581,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_28" sap:VirtualizedContainerService.HintSize="581,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_8" sap:VirtualizedContainerService.HintSize="314,93" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="581,283">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_20" sap:VirtualizedContainerService.HintSize="581,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddLogFields_5" sap:VirtualizedContainerService.HintSize="581,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="603,1006">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="728,1154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="750,1709">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_24" sap:VirtualizedContainerService.HintSize="754,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_25" sap:VirtualizedContainerService.HintSize="754,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="768,2278">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_1" sap:VirtualizedContainerService.HintSize="414,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SelectFile_1" sap:VirtualizedContainerService.HintSize="414,22" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataColumn`1_27" sap:VirtualizedContainerService.HintSize="314,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_62" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="336,547">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="414,656">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="436,1013">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_10" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="775,1161" />
      <sap2010:ViewStateData Id="Sequence_84" sap:VirtualizedContainerService.HintSize="797,1285">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="801,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="815,1724">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_5" sap:VirtualizedContainerService.HintSize="314,116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataColumn`1_26" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_78" sap:VirtualizedContainerService.HintSize="314,233">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_79" sap:VirtualizedContainerService.HintSize="314,138">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_80" sap:VirtualizedContainerService.HintSize="314,241">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_12" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="WriteRange_9" sap:VirtualizedContainerService.HintSize="314,115" />
      <sap2010:ViewStateData Id="LogMessage_59" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_72" sap:VirtualizedContainerService.HintSize="336,1407">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_19" sap:VirtualizedContainerService.HintSize="256,104">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">60,712.5</av:Point>
            <av:Size x:Key="ShapeSize">256,104</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">242</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_45" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_44" sap:VirtualizedContainerService.HintSize="430,796">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">528.5,440.5 528.5,470.5 226.4,470.5 226.4,712.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">50</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ShouldStop_4" sap:VirtualizedContainerService.HintSize="779,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_46" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_60" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_21" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_47" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="404,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="418,905">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="779,1053" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="801,1311">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="336,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_20" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_21" sap:VirtualizedContainerService.HintSize="404,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_60" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="336,442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="418,1362" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_73" sap:VirtualizedContainerService.HintSize="336,311">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_45" sap:VirtualizedContainerService.HintSize="521,2085">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">711,870.5 741,870.5 741,637 682,637</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Transition_46" sap:VirtualizedContainerService.HintSize="430,1579">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">711,870.5 771.5,870.5 771.5,599.5 682,599.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">28</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_27" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_77" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="314,213">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_48" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_76" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_47" sap:VirtualizedContainerService.HintSize="430,1937">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">711,870.5 810.5,870.5 810.5,80 678,80</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">36</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Transition_48" sap:VirtualizedContainerService.HintSize="430,1087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">711,870.5 741,870.5 741,966.5 175.2,966.5 175.2,816.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">36</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_20" sap:VirtualizedContainerService.HintSize="444,1862">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">405,803.5</av:Point>
            <av:Size x:Key="ShapeSize">306,134</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">292</x:Double>
            <x:Double x:Key="StateContainerHeight">26</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_49" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_49" sap:VirtualizedContainerService.HintSize="758,1049">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">542,674.5 542,704.5 542.7,704.5 542.7,803.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_50" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="653,239" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="675,363">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_50" sap:VirtualizedContainerService.HintSize="758,1049">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">542,674.5 542,728.1 316,728.1</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">8</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_21" sap:VirtualizedContainerService.HintSize="280,125">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">402,549.5</av:Point>
            <av:Size x:Key="ShapeSize">280,125</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">266</x:Double>
            <x:Double x:Key="StateContainerHeight">62</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Transition_51" sap:VirtualizedContainerService.HintSize="430,1102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">528.5,440.5 528.5,470.5 528,470.5 528,549.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_22" sap:VirtualizedContainerService.HintSize="271,193">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">393,247.5</av:Point>
            <av:Size x:Key="ShapeSize">271,193</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Double x:Key="StateContainerWidth">257</x:Double>
            <x:Double x:Key="StateContainerHeight">25</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_9" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Transition_52" sap:VirtualizedContainerService.HintSize="436,1087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">529,139 529,169 528.5,169 528.5,247.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_52" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_53" sap:VirtualizedContainerService.HintSize="436,1087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">529,139 529,195.04 162.4,195.04 162.4,712.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">30</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_61" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Transition_54" sap:VirtualizedContainerService.HintSize="436,1087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:PointCollection x:Key="ConnectorLocation">529,139 529,169.04 89.5,169.04 89.5,543.5 124,543.5 124,712.5</av:PointCollection>
            <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
            <x:Int32 x:Key="DestConnectionPointIndex">18</x:Int32>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="State_23" sap:VirtualizedContainerService.HintSize="298,118">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">380,21</av:Point>
            <av:Size x:Key="ShapeSize">298,118</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="StateContainerWidth">284</x:Double>
            <x:Double x:Key="StateContainerHeight">55.200000000000045</x:Double>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="StateMachine_4" sap:VirtualizedContainerService.HintSize="929,1071">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">260,42.5</av:Point>
            <x:Double x:Key="StateContainerWidth">915</x:Double>
            <x:Double x:Key="StateContainerHeight">1034.9155410323285</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">320,80 350,80 350,80.5 380,80.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="969,1191">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>