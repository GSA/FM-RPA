<Activity mc:Ignorable="sap sap2010 sads" x:Class="ProcessTransaction"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sn="clr-namespace:System.Net;assembly=System"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_transactionItem" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="io_transactionLog" Type="InOutArgument(sd:DataRow)" />
    <x:Property Name="in_samUser" Type="InArgument(x:String)" />
    <x:Property Name="in_samSecureString" Type="InArgument(ss:SecureString)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="Process" sap2010:WorkflowViewState.IdRef="Sequence_175">
    <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_2">
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:String" Name="currentDirectory" />
        <Variable x:TypeArguments="x:Boolean" Name="outputDirExists" />
        <Variable x:TypeArguments="s:String[]" Name="filenames" />
        <Variable x:TypeArguments="x:String" Name="returnEmail" />
        <Variable x:TypeArguments="x:TimeSpan" Name="mediumDelaySpan" />
        <Variable x:TypeArguments="x:String" Name="FILEERROR" />
        <Variable x:TypeArguments="x:String" Name="EXCLUSIONERROR" />
        <Variable x:TypeArguments="x:String" Name="CERTERROR" />
        <Variable x:TypeArguments="x:String" Name="baseDirectory" />
        <Variable x:TypeArguments="x:String" Name="emailName" />
        <Variable x:TypeArguments="sd:DataTable" Name="errorTable" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_16">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_190">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[returnEmail]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[in_config("fromEmailAddress").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_15">
              <Assign sap2010:WorkflowViewState.IdRef="Assign_191">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:TimeSpan">[mediumDelaySpan]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.Parse(in_config("MediumTimeSpan").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_14">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_192">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[FILEERROR]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_config("fileError_message").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_193">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[EXCLUSIONERROR]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[in_config("exclusionError_message").ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_194">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[CERTERROR]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[in_config("certificationError_message").ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_195">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[emailName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[in_config("emailName").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_196">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[baseDirectory]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[in_config("shareDrive").ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Trace" Message="config items assigned" />
                                      <FlowStep.Next>
                                        <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                          <Sequence DisplayName="Get current Dir" sap2010:WorkflowViewState.IdRef="Sequence_289">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_189">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[currentDirectory]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[in_transactionItem(0).ToString]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Info" Message="[&quot;Obtained directory: &quot;+currentDirectory]" />
                                            <ui:PathExists DisplayName="output folder exists?" Exists="[outputDirExists]" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                          </Sequence>
                                          <FlowStep.Next>
                                            <FlowDecision x:Name="__ReferenceID9" Condition="[outputDirExists]" DisplayName="Already Processed?" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                              <FlowDecision.False>
                                                <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                                                  <TryCatch DisplayName="Get File Names" sap2010:WorkflowViewState.IdRef="TryCatch_24">
                                                    <TryCatch.Try>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_287">
                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_47" Level="Info" Message="[&quot;looking at &quot;+currentDirectory]" />
                                                        <Assign DisplayName="Retrieve the XML file filenames" sap2010:WorkflowViewState.IdRef="Assign_187">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentDirectory,"Offer*.xml")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </TryCatch.Try>
                                                    <TryCatch.Catches>
                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_24">
                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                          <ActivityAction.Argument>
                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                          </ActivityAction.Argument>
                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_288">
                                                            <Assign DisplayName="Retrieve the XML file filenames" sap2010:WorkflowViewState.IdRef="Assign_188">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="s:String[]">[{""}]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_48" Level="Warn" Message="[&quot;No files found in &quot;+currentDirectory]" />
                                                          </Sequence>
                                                        </ActivityAction>
                                                      </Catch>
                                                    </TryCatch.Catches>
                                                  </TryCatch>
                                                  <FlowStep.Next>
                                                    <FlowDecision x:Name="__ReferenceID7" Condition="[filenames.Count &gt; 0]" DisplayName="find any file names?" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                                      <FlowDecision.True>
                                                        <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                                          <ui:BuildDataTable sap2010:Annotation.AnnotationText="Table of anny issues found while reading the files, searching SAM, etc." DataTable="[errorTable]" DisplayName="Build Error Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DUNS&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Person&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorType&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                                                          <FlowStep.Next>
                                                            <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="To keep from making the variable visible to the entire workflow, the read and write are combined into one sequence" DisplayName="loop through XML files" sap2010:WorkflowViewState.IdRef="ForEach`1_31" Values="[filenames]">
                                                                <ui:ForEach.Body>
                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                    <ActivityAction.Argument>
                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="offerFile" />
                                                                    </ActivityAction.Argument>
                                                                    <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_23">
                                                                      <TryCatch.Variables>
                                                                        <Variable x:TypeArguments="x:Int32" Name="totalFilesChecked" />
                                                                        <Variable x:TypeArguments="x:String" Name="id" />
                                                                        <Variable x:TypeArguments="x:String" Name="DUNSNumber" />
                                                                        <Variable x:TypeArguments="x:String" Name="companyName" />
                                                                      </TryCatch.Variables>
                                                                      <TryCatch.Try>
                                                                        <Sequence DisplayName="Read/Write Sequence" sap2010:WorkflowViewState.IdRef="Sequence_285">
                                                                          <Sequence.Variables>
                                                                            <Variable x:TypeArguments="x:String" Name="subcontractingPlan" />
                                                                            <Variable x:TypeArguments="x:String" Name="basePeriodOptionsValue" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessSize" />
                                                                            <Variable x:TypeArguments="scg:List(x:String)" Name="contractAdmins" />
                                                                            <Variable x:TypeArguments="x:String" Name="refreshNumber" />
                                                                            <Variable x:TypeArguments="x:String" Name="solicitationNumber" />
                                                                            <Variable x:TypeArguments="x:String" Name="tin" />
                                                                            <Variable x:TypeArguments="x:String" Name="NAICSCode" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessType" />
                                                                            <Variable x:TypeArguments="x:String" Name="estimatedContractValue" />
                                                                            <Variable x:TypeArguments="scg:List(x:String)" Name="negotiatorList" />
                                                                            <Variable x:TypeArguments="x:String" Name="pathwayCertInfo" />
                                                                            <Variable x:TypeArguments="x:String" Name="disasterRecoverPurchase" />
                                                                            <Variable x:TypeArguments="x:String" Name="completionDate" />
                                                                            <Variable x:TypeArguments="x:String" Name="completionTime" />
                                                                            <Variable x:TypeArguments="x:Boolean" Default="False" Name="dunsExclusion" />
                                                                            <Variable x:TypeArguments="x:Boolean" Default="False" Name="personExclusion" />
                                                                            <Variable x:TypeArguments="x:String" Name="offerControlNumber" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessStreet" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessSuite" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessCity" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessState" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessZipcode" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessPhone" />
                                                                            <Variable x:TypeArguments="x:String" Name="businessFax" />
                                                                            <Variable x:TypeArguments="x:String" Name="IFFAdministrator" />
                                                                            <Variable x:TypeArguments="x:String" Name="SAMExpirationDate" />
                                                                            <Variable x:TypeArguments="x:String" Name="offerDate" />
                                                                            <Variable x:TypeArguments="x:String" Name="parentCompany" />
                                                                            <Variable x:TypeArguments="x:String" Name="completionMonth" />
                                                                            <Variable x:TypeArguments="x:String" Name="completionDay" />
                                                                            <Variable x:TypeArguments="x:String" Name="completionYear" />
                                                                            <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="sinInfo" />
                                                                            <Variable x:TypeArguments="x:String" Name="coopPurchase" />
                                                                            <Variable x:TypeArguments="ui:GenericValue" Name="memorandumFilepath" />
                                                                            <Variable x:TypeArguments="x:String" Name="pathwayPerson" />
                                                                            <Variable x:TypeArguments="x:String" Name="exceptionsToTermsAndConditions" />
                                                                            <Variable x:TypeArguments="x:String" Name="minOrderLimit" />
                                                                            <Variable x:TypeArguments="x:String" Name="subKplan" />
                                                                            <Variable x:TypeArguments="sd:DataTable" Name="offerErrorTable" />
                                                                            <Variable x:TypeArguments="x:String" Name="fullNameList" />
                                                                            <Variable x:TypeArguments="x:Int32" Name="nameCount" />
                                                                            <Variable x:TypeArguments="scg:List(x:String)" Name="NAICSCodeList" />
                                                                          </Sequence.Variables>
                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="Begin reading in file(s)" />
                                                                          <ui:BuildDataTable sap2010:Annotation.AnnotationText="Table of any issues found while reading the files, searching SAM, etc.&#xA;This table is for each individual offer." DataTable="[offerErrorTable]" DisplayName="Build Error Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DUNS&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Person&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorType&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="// try to read and write the information.&#xA;&#xA;A failure at anypoint should temintate the processing of this file and continue on to the next&#xA;" />
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">[dunsExclusion]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Trace" Message="[&quot;currentDirectory: &quot;+currentDirectory.ToString +&quot;   base legth: &quot;+baseDirectory.Length.ToString+&quot;   current length: &quot;+ currentDirectory.Length.ToString]" />
                                                                          <Assign DisplayName="filename identifier" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:String">[id]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:String">[currentDirectory.ToString.Substring(baseDirectory.Length, currentDirectory.Length - baseDirectory.Length)]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Sequence DisplayName="create output directory" sap2010:WorkflowViewState.IdRef="Sequence_176">
                                                                            <Sequence.Variables>
                                                                              <Variable x:TypeArguments="x:Boolean" Name="outputDirExsits" />
                                                                            </Sequence.Variables>
                                                                            <ui:PathExists DisplayName="Path exists" Exists="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                                            <If Condition="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="If_1">
                                                                              <If.Then>
                                                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="Do nothing" />
                                                                              </If.Then>
                                                                              <If.Else>
                                                                                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[currentDirectory+&quot;/output&quot;]" />
                                                                              </If.Else>
                                                                            </If>
                                                                          </Sequence>
                                                                          <Sequence DisplayName="Read Sequence" sap2010:WorkflowViewState.IdRef="Sequence_248">
                                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_3" Text="// start the review list. First element will be documnet identifier" />
                                                                            <Sequence DisplayName="Gather Info from XML and SAM" sap2010:WorkflowViewState.IdRef="Sequence_247">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="sxl:XDocument" Name="xmlDocumentOutput" />
                                                                                <Variable x:TypeArguments="x:String" Name="tempDate" />
                                                                                <Variable x:TypeArguments="x:String" Name="xmlOutput" />
                                                                                <Variable x:TypeArguments="scg:IEnumerable(sxl:XAttribute)" Name="contractAdminAttrib" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="decimalLocation" />
                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="estCost" />
                                                                                <Variable x:TypeArguments="scg:List(x:String)" Name="negotiatorNameList" />
                                                                                <Variable x:TypeArguments="x:String" Name="tempPWdate" />
                                                                              </Sequence.Variables>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;reading in file &quot;+offerFile.ToString]" />
                                                                              <ui:ReadTextFile Content="[xmlOutput]" DisplayName="Read text file" FileName="[offerFile.ToString]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                                                                              <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_1" XMLDocument="[xmlDocumentOutput]" XMLString="[xmlOutput]" />
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="XML deserialized" />
                                                                              <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="extract offer date" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[xmlDocumentOutput.Elements(&quot;Offers&quot;)]">
                                                                                <ui:ForEach.Body>
                                                                                  <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_177">
                                                                                      <ui:GetXMLNodeAttributes Attributes="[contractAdminAttrib]" DisplayName="Get XML node attributes" ExistingXMLNode="[item]" sap2010:WorkflowViewState.IdRef="GetXMLNodeAttributes_1" />
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[tempDate]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[item.Attribute("offerLastUpdateDate").Value.ToString]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <If Condition="[String.IsNullOrEmpty(tempDate) OR (tempDate.Length = 0)]" sap2010:WorkflowViewState.IdRef="If_57">
                                                                                        <If.Then>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_291">
                                                                                            <Assign DisplayName="offer date 'unknown'" sap2010:WorkflowViewState.IdRef="Assign_197">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[offerDate]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String">UNKNOWN</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Offer Date&quot;}]" DataTable="[errorTable]" DisplayName="Add Completion date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_26" />
                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Offer Date&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add offer date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_27" />
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p:Substring DisplayName="extract offer date" sap2010:WorkflowViewState.IdRef="Substring_1" Input="[tempDate]" Result="[offerDate]" StartIndex="0" Length="10" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </ui:ForEach.Body>
                                                                              </ui:ForEach>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="Got Offer Date" />
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[offerControlNumber]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("ControlID").Value.ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign DisplayName="Solicitation Number" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[solicitationNumber]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("SolicitNumber").Value.ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign DisplayName="Refresh Number" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[refreshNumber]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("SolicitRefresh").Value.ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign DisplayName="DUNS Number" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[DUNSNumber]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("DunsNumber").Value.ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Trace" Message="Got offer Numbers" />
                                                                              <TryCatch DisplayName="Retrieve Completion Date value" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                                                                <TryCatch.Try>
                                                                                  <Sequence DisplayName="parse XML for Date" sap2010:WorkflowViewState.IdRef="Sequence_178">
                                                                                    <Assign DisplayName="Completion Date" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("offerLastUpdateDate").Value.ToString.Substring(0,10)]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Trace" Message="[&quot;completion date: &quot;+completionDate.ToString]" />
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[completionMonth]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[completionDate.Substring(8,2)]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[completionDay]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[completionDate.Substring(5,2)]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[completionYear]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[completionDate.Substring(0,4)]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_179">
                                                                                        <Assign DisplayName="completion date blank" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Date&quot;}]" DataTable="[errorTable]" DisplayName="Add Completion date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Date&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Completion date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                              </TryCatch>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Trace" Message="Got Completion Date" />
                                                                              <TryCatch DisplayName="Retrieve Completion Time value" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                                                                <TryCatch.Try>
                                                                                  <Assign DisplayName="Completion Time" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[completionTime]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("offerLastUpdateDate").Value.ToString.Substring(12,8)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_180">
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[completionTime]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Time&quot;}]" DataTable="[errorTable]" DisplayName="Add Completion time Error" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Time&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Completion time Error" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                              </TryCatch>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Trace" Message="Got Completion Time" />
                                                                              <TryCatch DisplayName="get Company Name" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                                                                <TryCatch.Try>
                                                                                  <Assign DisplayName="Company Name" sap2010:WorkflowViewState.IdRef="Assign_16">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("PathwayCertDetails").Element("companyName").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:NullReferenceException" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                                                    <ActivityAction x:TypeArguments="s:NullReferenceException">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_181">
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_4" Text="// The name will be obtained from the SAM website so no need to add it to the review list" />
                                                                                        <Assign DisplayName="Company Name" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                              </TryCatch>
                                                                              <Sequence DisplayName="Get Company Information" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_5" Text="The bot will use the first Vendor in the Vendor list as the comany address" />
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessStreet]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("CompanyAddress1").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessSuite]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("CompanyAddress2").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessCity]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("City").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessState]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("State").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessZipcode]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("Zip").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessPhone]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Negotiators").Element("NegotiatorInformation").Element("Phone").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessFax]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Negotiators").Element("NegotiatorInformation").Element("Fax").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="Got Comapny Info Time" />
                                                                              <Assign DisplayName="get TIN" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[tin]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("TIN").Value.ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Trace" Message="Got TIN" />
                                                                              <Sequence DisplayName="Get ALL NAICS numbers" sap2010:WorkflowViewState.IdRef="Sequence_184">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                  <Variable x:TypeArguments="x:String" Name="success" />
                                                                                  <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                </Sequence.Variables>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)">[NAICSCodeList]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)()]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlDocumentOutput]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_1" Result="[pathResult]" XPathExpression="//NaicsCode" />
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Trace" Message="Got NASICS code(s)" />
                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="naicsNumber" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_183">
                                                                                        <AddToCollection x:TypeArguments="x:String" Collection="[NAICSCodeList]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="[naicsNumber.Value.ToString]" />
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Trace" Message="Got Offer Data" />
                                                                              <Assign DisplayName="get business &quot;type&quot;" sap2010:WorkflowViewState.IdRef="Assign_27">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[businessType]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("OrganizationType").Value.ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                                                                                <TryCatch.Try>
                                                                                  <Sequence DisplayName="Estimated Sales" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                                                                    <Sequence.Variables>
                                                                                      <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                      <Variable x:TypeArguments="x:Int32" Name="cost" />
                                                                                    </Sequence.Variables>
                                                                                    <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlDocumentOutput]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_2" Result="[pathResult]" XPathExpression="//SinInformation" />
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Int32">[cost]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="salesCost" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence DisplayName="Get Sales numbers" sap2010:WorkflowViewState.IdRef="Sequence_185">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="x:String" Name="tempSales" />
                                                                                            </Sequence.Variables>
                                                                                            <Assign DisplayName="get est. contract cost" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[tempSales]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String">[salesCost.Element("EstimatedSales").Value.ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Trace" Message="[&quot;temp Sales found: &quot;+tempSales.ToString]" />
                                                                                            <If Condition="[tempSales.Contains(&quot;.&quot;)]" DisplayName="remove &quot;cents&quot;" sap2010:WorkflowViewState.IdRef="If_2">
                                                                                              <If.Then>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[decimalLocation]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[tempSales.Length - 3]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Then>
                                                                                              <If.Else>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[decimalLocation]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[tempSales.Length]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Else>
                                                                                            </If>
                                                                                            <If sap2010:Annotation.AnnotationText="This is an edge case if the input amount is something like 1.2&#xA;&#xA;Need investigaation into the business rules on what are valid cost ranges. Should there ever be a value of 1.2 and if so, what does it represent?" Condition="[decimalLocation&lt; 0]" sap2010:WorkflowViewState.IdRef="If_3">
                                                                                              <If.Then>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[decimalLocation]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[tempSales.IndexOf(".")]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Then>
                                                                                            </If>
                                                                                            <Assign DisplayName="get est. contract cost" sap2010:WorkflowViewState.IdRef="Assign_33">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:Int32">[cost]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(tempSales.Substring(0,decimalLocation)) + cost]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[estimatedContractValue]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[(cost * 5).ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign DisplayName="get options cost" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[basePeriodOptionsValue]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[(cost * 20 ).ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Error Getting Sales Number" sap2010:WorkflowViewState.IdRef="Sequence_188">
                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Sales Numbers&quot;}]" DataTable="[errorTable]" DisplayName="Add Sales Number Error" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Sales Amount&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Sales Error" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[estimatedContractValue]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">0</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <Assign DisplayName="get options cost" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[basePeriodOptionsValue]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">0</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:CommentOut DisplayName="should we throw error?" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                                                          <ui:CommentOut.Body>
                                                                                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_187">
                                                                                              <Throw Exception="[new Exception(&quot;Incorrect Sales numbers. &quot;+exception.Message)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                                                                            </Sequence>
                                                                                          </ui:CommentOut.Body>
                                                                                        </ui:CommentOut>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                              </TryCatch>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Trace" Message="Got Sales Data" />
                                                                              <Sequence DisplayName="get SIN Information" sap2010:WorkflowViewState.IdRef="Sequence_192">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="x:String" Name="tempSininfo" />
                                                                                  <Variable x:TypeArguments="x:Boolean" Name="isCoopPurchase" />
                                                                                  <Variable x:TypeArguments="x:Boolean" Name="wasCoopPurchaseListed" />
                                                                                </Sequence.Variables>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[tempSininfo]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">
                                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                                    </InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[coopPurchase]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">NA</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:Boolean">[wasCoopPurchaseListed]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)">[sinInfo]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="get SIN Info" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[xmlDocumentOutput.Element(&quot;Offers&quot;).Elements(&quot;Sins&quot;).Elements(&quot;SinInformation&quot;)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_191">
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[tempSininfo]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[item.Attribute("SinTitle").Value.ToString]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <AddToCollection x:TypeArguments="x:String" Collection="[sinInfo]" DisplayName="Add to list of SIN numbers" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[tempSininfo]" />
                                                                                        <Sequence DisplayName="check if coop purchase exsists" sap2010:WorkflowViewState.IdRef="Sequence_190">
                                                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                                                                                            <TryCatch.Try>
                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_189">
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_43">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[coopPurchase]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[item.Element("SinInformation").Element("CooperativePurchasing").Value.ToString]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Boolean">[wasCoopPurchaseListed]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <If Condition="[coopPurchase = &quot;No&quot; AND isCoopPurchase]" DisplayName="coop purchase logic" sap2010:WorkflowViewState.IdRef="If_4">
                                                                                                  <If.Then>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[isCoopPurchase]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[isCoopPurchase]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </TryCatch.Try>
                                                                                            <TryCatch.Catches>
                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                  <ActivityAction.Argument>
                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                  </ActivityAction.Argument>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:Boolean">[isCoopPurchase]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </ActivityAction>
                                                                                              </Catch>
                                                                                            </TryCatch.Catches>
                                                                                          </TryCatch>
                                                                                        </Sequence>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                                <If Condition="[wasCoopPurchaseListed]" DisplayName="more coop logic" sap2010:WorkflowViewState.IdRef="If_5">
                                                                                  <If.Then>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[coopPurchase]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[isCoopPurchase.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </If.Then>
                                                                                </If>
                                                                              </Sequence>
                                                                              <Sequence DisplayName="SAM Info Grab" sap2010:WorkflowViewState.IdRef="Sequence_204">
                                                                                <Sequence DisplayName="SOAP-HTTP DUNS Sam Core" sap2010:WorkflowViewState.IdRef="Sequence_203">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                    <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                    <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                    <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="tryCount" />
                                                                                    <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)()]" Name="SamNAICSCodeList" />
                                                                                  </Sequence.Variables>
                                                                                  <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_50">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:getEntities&gt;"+System.Environment.NewLine+
"         &lt;authenticationKey&gt;"+System.Environment.NewLine+
"            &lt;userID&gt;"+in_samUser+"&lt;/userID&gt;"+System.Environment.NewLine+
"            &lt;password&gt;"+New System.Net.NetworkCredential(String.Empty, in_samSecureString).Password+"&lt;/password&gt;"+System.Environment.NewLine+
"         &lt;/authenticationKey&gt;"+System.Environment.NewLine+
"         &lt;entitySearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;DUNSNumber&gt;"+DUNSnumber+"&lt;/DUNSNumber&gt;"+System.Environment.NewLine+
"         &lt;/entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;requestedData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"           &lt;coreData&gt;Y&lt;/coreData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;assertions&gt;Y&lt;/assertions&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;repsAndCerts&gt;Y&lt;/repsAndCerts&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;pointsOfContact&gt;Y&lt;/pointsOfContact&gt;"+System.Environment.NewLine+
"         &lt;/requestedData&gt;"+System.Environment.NewLine+
"      &lt;/sam:getEntities&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[tryCount &lt; 3]">
                                                                                    <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                                                                      <TryCatch.Try>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_193">
                                                                                          <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/Entity" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                            <ui:HttpClient.Attachments>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Attachments>
                                                                                            <ui:HttpClient.Cookies>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Cookies>
                                                                                            <ui:HttpClient.Headers>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Headers>
                                                                                            <ui:HttpClient.Parameters>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Parameters>
                                                                                            <ui:HttpClient.UrlSegments>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.UrlSegments>
                                                                                          </ui:HttpClient>
                                                                                          <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_2" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                          <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/SAM_SearchDUNS_&quot;+DUNSnumber+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[dateTime.ToString+System.Environment.NewLine+&#xA;&quot;SAM Search&quot;+System.Environment.NewLine +&#xA;&quot;    company: &quot;+ companyName + System.Environment.NewLine+&#xA;&quot;     DUNS: &quot;+ DUNSNumber+ System.Environment.NewLine + System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="ui:GenericValue">[3]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </TryCatch.Try>
                                                                                      <TryCatch.Catches>
                                                                                        <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                                                                          <ActivityAction x:TypeArguments="sn:WebException">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                            </ActivityAction.Argument>
                                                                                            <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_6">
                                                                                              <If.Then>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[tryCount + 1]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Then>
                                                                                              <If.Else>
                                                                                                <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                                                                              </If.Else>
                                                                                            </If>
                                                                                          </ActivityAction>
                                                                                        </Catch>
                                                                                      </TryCatch.Catches>
                                                                                    </TryCatch>
                                                                                  </DoWhile>
                                                                                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_3" Result="[pathResult]" XPathExpression="//NAICS/code" />
                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_194">
                                                                                          <AddToCollection x:TypeArguments="x:String" Collection="[SamNAICSCodeList]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[item.Value.ToString]" />
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="NAICS check" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[NAICSCodeList]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="x:Object">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_196">
                                                                                          <If Condition="[SamNAICSCodeList.IndexOf(item.ToString) &lt; 0]" sap2010:WorkflowViewState.IdRef="If_7">
                                                                                            <If.Then>
                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_195">
                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot; NAICS not found in SAM results&quot;}]" DataTable="[errorTable]" DisplayName="Add NAICS error" sap2010:WorkflowViewState.IdRef="AddDataRow_7" />
                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot; NAICS not found in SAM results&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add NAICS error" sap2010:WorkflowViewState.IdRef="AddDataRow_8" />
                                                                                              </Sequence>
                                                                                            </If.Then>
                                                                                            <If.Else>
                                                                                              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_6" Text="no-op." />
                                                                                            </If.Else>
                                                                                          </If>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                  <Sequence DisplayName="Expiration Date" sap2010:WorkflowViewState.IdRef="Sequence_198">
                                                                                    <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_4" Result="[pathResult]" XPathExpression="//entityIdentification" />
                                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_7" Text="// There should only ever be one expiration date.&#xA;&#xA;The loop is needed becasue there is no way to extract a single item via xPath" />
                                                                                    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_197">
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[SAMExpirationDate]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String">[item.Element("expirationDate").Value.ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String">[item.Element("legalBusinessName").Value.ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                  </Sequence>
                                                                                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_5" Result="[pathResult]" XPathExpression="//provision" />
                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_8" Text="// The business infomration is contained within the 52.212-3 infomration" />
                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_202">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="test" />
                                                                                          </Sequence.Variables>
                                                                                          <If Condition="[item.Element(&quot;id&quot;).Value.ToString = &quot;FAR 52.212-3&quot;]" DisplayName="Check for FAR 52.212-3" sap2010:WorkflowViewState.IdRef="If_15">
                                                                                            <If.Then>
                                                                                              <Sequence DisplayName="Build correct text for Business" sap2010:WorkflowViewState.IdRef="Sequence_201">
                                                                                                <Assign DisplayName="final option of business size" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[ChrW(9744)+"  Large /"+ChrW(9744)+"  Small /"+ChrW(9744)+"  Woman Owned /"+ChrW(9744)+"  Veteran Owned /"+ChrW(9744)+"  Small Disadvantaged /"+ChrW(9744)+"  8a /"+ChrW(9744)+"  Service-Disabled Veteran Owned /"+ChrW(9744)+"  HUBZone"]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[item.Element(&quot;listOfAnswers&quot;).Elements]">
                                                                                                  <ui:ForEach.Body>
                                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                      <ActivityAction.Argument>
                                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="answerItem" />
                                                                                                      </ActivityAction.Argument>
                                                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_200">
                                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_9" Text="// Not all items will have a business object and business type&#xA;&#xA;No avoid mulitple if checks, just doing a try and if it is there, grab it and get the desired information. Otherwise, catch the exception and ignore it." />
                                                                                                        <TryCatch DisplayName="Try catch businessObject" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                                                                                          <TryCatch.Try>
                                                                                                            <Sequence DisplayName="Business Size" sap2010:WorkflowViewState.IdRef="Sequence_199">
                                                                                                              <Sequence.Variables>
                                                                                                                <Variable x:TypeArguments="x:String" Name="businessObjectValue" />
                                                                                                                <Variable x:TypeArguments="x:String" Name="businessObject" />
                                                                                                              </Sequence.Variables>
                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[businessObject]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String">[answerItem.Element("businessObject").Element("businessType").Value]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[businessObjectValue]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String">[answerItem.Element("businessObject").Element("value").Value]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <If Condition="[businessObject.ToLower = &quot;small business&quot; AND businessObjectValue.ToLower = &quot;true&quot;]" DisplayName="small business?" sap2010:WorkflowViewState.IdRef="If_8">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_59">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Small /","X Small /")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                              </If>
                                                                                                              <If Condition="[businessObject.ToLower = &quot;women-owned small business concern&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="female owned?" sap2010:WorkflowViewState.IdRef="If_9">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Woman Owned"," X  Woman Owned")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                              </If>
                                                                                                              <If Condition="[businessObject.ToLower = &quot;veteran-owned small business&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="Vet owned?" sap2010:WorkflowViewState.IdRef="If_10">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_61">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Veteran Owned"," X  Veteran Owned")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                              </If>
                                                                                                              <If Condition="[businessObject.ToLower = &quot;small disadvantaged business concern&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="disadvantaged?" sap2010:WorkflowViewState.IdRef="If_11">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_62">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Small Disadvantaged"," X  Small Disadvantaged")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                              </If>
                                                                                                              <If Condition="[businessObject.ToLower = &quot;service disabled veteran-owned small business&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="disabled vet owned?" sap2010:WorkflowViewState.IdRef="If_12">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_63">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Service-Disabled Veteran Owned","X  Service-Disabled Veteran Owned")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                              </If>
                                                                                                              <If Condition="[businessObject.ToLower = &quot;hubzone small business concern&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="hubzone?" sap2010:WorkflowViewState.IdRef="If_13">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_64">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  HUBZone","X HUBZone ")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                              </If>
                                                                                                              <If Condition="[test.Contains(&quot;X&quot;)]" DisplayName="if anything checked in small business, then pending" sap2010:WorkflowViewState.IdRef="If_14">
                                                                                                                <If.Then>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_65">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[subcontractingPlan]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String">["X N/A / ☐ Pending Review"]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Then>
                                                                                                                <If.Else>
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[subcontractingPlan]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["☐N/A  / X Pending Review"]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </If.Else>
                                                                                                              </If>
                                                                                                              <Assign DisplayName="store business size" sap2010:WorkflowViewState.IdRef="Assign_67">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[businessSize]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String">[test]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                            </Sequence>
                                                                                                          </TryCatch.Try>
                                                                                                          <TryCatch.Catches>
                                                                                                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                                                                                              <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                <ActivityAction.Argument>
                                                                                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                </ActivityAction.Argument>
                                                                                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_10" Text="// intnetionally left blank" />
                                                                                                              </ActivityAction>
                                                                                                            </Catch>
                                                                                                          </TryCatch.Catches>
                                                                                                        </TryCatch>
                                                                                                      </Sequence>
                                                                                                    </ActivityAction>
                                                                                                  </ui:ForEach.Body>
                                                                                                </ui:ForEach>
                                                                                              </Sequence>
                                                                                            </If.Then>
                                                                                          </If>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                </Sequence>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Trace" Message="Got SIN Data" />
                                                                              <Sequence DisplayName="SOAP-HTTP DUNS Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_209">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                  <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                  <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                  <Variable x:TypeArguments="x:String" Name="success" />
                                                                                  <Variable x:TypeArguments="x:Int32" Name="tryCount" />
                                                                                </Sequence.Variables>
                                                                                <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_68">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_69">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;DUNSNumber&gt;"+DUNSnumber+"&lt;/DUNSNumber&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_70">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_2" Condition="[tryCount &lt; 3]">
                                                                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                                                                    <TryCatch.Try>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_205">
                                                                                        <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                          <ui:HttpClient.Attachments>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                          </ui:HttpClient.Attachments>
                                                                                          <ui:HttpClient.Cookies>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                          </ui:HttpClient.Cookies>
                                                                                          <ui:HttpClient.Headers>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                          </ui:HttpClient.Headers>
                                                                                          <ui:HttpClient.Parameters>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                          </ui:HttpClient.Parameters>
                                                                                          <ui:HttpClient.UrlSegments>
                                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                          </ui:HttpClient.UrlSegments>
                                                                                        </ui:HttpClient>
                                                                                        <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_3" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                        <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchDUNS_&quot;+DUNSnumber+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_2" Text="[dateTime.ToString + System.Environment.NewLine + System.Environment.NewLine+&#xA;&quot;Search: &quot;+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;DUNS #: &quot;+DUNSnumber+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_71">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </Sequence>
                                                                                    </TryCatch.Try>
                                                                                    <TryCatch.Catches>
                                                                                      <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                                                                        <ActivityAction x:TypeArguments="sn:WebException">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                          </ActivityAction.Argument>
                                                                                          <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_16">
                                                                                            <If.Then>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_72">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </If.Then>
                                                                                            <If.Else>
                                                                                              <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                                                                                            </If.Else>
                                                                                          </If>
                                                                                        </ActivityAction>
                                                                                      </Catch>
                                                                                    </TryCatch.Catches>
                                                                                  </TryCatch>
                                                                                </DoWhile>
                                                                                <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                                                                  <TryCatch.Try>
                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_208">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                      </Sequence.Variables>
                                                                                      <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_6" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                      <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_207">
                                                                                              <Sequence.Variables>
                                                                                                <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                              </Sequence.Variables>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_73">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_74">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_17">
                                                                                                <If.Then>
                                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_206">
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_75">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[dunsExclusion]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
                                                                                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_10" />
                                                                                                  </Sequence>
                                                                                                </If.Then>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                    </Sequence>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Error" Message="[&quot;error parsing Duns Exclusion: &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                </TryCatch>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Trace" Message="Got SAM Excl. Data" />
                                                                              <Sequence DisplayName="Get List of Contract Adminstrators" sap2010:WorkflowViewState.IdRef="Sequence_222">
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_76">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)">[contractAdmins]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="extract contract admin info" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[xmlDocumentOutput.Element(&quot;Offers&quot;).Element(&quot;Contacts&quot;).Elements(&quot;ContactInformation&quot;)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Flowchart DisplayName="IFF admin info and check" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                                                                                        <Flowchart.StartNode>
                                                                                          <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                                                                                            <ui:GetXMLNodeAttributes Attributes="[contractAdminAttrib]" DisplayName="Get XML node attributes" ExistingXMLNode="[item]" sap2010:WorkflowViewState.IdRef="GetXMLNodeAttributes_2" />
                                                                                            <FlowStep.Next>
                                                                                              <FlowDecision x:Name="__ReferenceID1" Condition="[item.Attribute(&quot;Category&quot;).Value.ToString.Contains(&quot;Industrial Funding Fee&quot;)]" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                                                                                <FlowDecision.True>
                                                                                                  <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_1">
                                                                                                    <Sequence DisplayName="Get Admin check for Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_215">
                                                                                                      <Sequence.Variables>
                                                                                                        <Variable x:TypeArguments="x:String" Name="person" />
                                                                                                        <Variable x:TypeArguments="x:Int32" Name="tryCount" />
                                                                                                      </Sequence.Variables>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_77">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[IFFAdministrator]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString+", "+item.Element("Title").Value.ToString+", "+item.Element("Phone").Value.ToString+", "+item.Element("Email").Value.ToString]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_78">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                      <AddToCollection x:TypeArguments="x:String" Collection="[contractAdmins]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[IFFAdministrator]" />
                                                                                                      <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_214">
                                                                                                        <Sequence.Variables>
                                                                                                          <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                                          <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                                          <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                                          <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                                        </Sequence.Variables>
                                                                                                        <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_80">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_81">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+person+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <DoWhile DisplayName="try http call" sap2010:WorkflowViewState.IdRef="DoWhile_3" Condition="[tryCount &lt; 3]">
                                                                                                          <TryCatch DisplayName="Try catch for http error" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                                                                            <TryCatch.Try>
                                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_210">
                                                                                                                <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                                                  <ui:HttpClient.Attachments>
                                                                                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                  </ui:HttpClient.Attachments>
                                                                                                                  <ui:HttpClient.Cookies>
                                                                                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                  </ui:HttpClient.Cookies>
                                                                                                                  <ui:HttpClient.Headers>
                                                                                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                  </ui:HttpClient.Headers>
                                                                                                                  <ui:HttpClient.Parameters>
                                                                                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                  </ui:HttpClient.Parameters>
                                                                                                                  <ui:HttpClient.UrlSegments>
                                                                                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                  </ui:HttpClient.UrlSegments>
                                                                                                                </ui:HttpClient>
                                                                                                                <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_4" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                                                <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchName_&quot;+person+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;Person: &quot;+person+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_82">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                              </Sequence>
                                                                                                            </TryCatch.Try>
                                                                                                            <TryCatch.Catches>
                                                                                                              <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                                                                                <ActivityAction x:TypeArguments="sn:WebException">
                                                                                                                  <ActivityAction.Argument>
                                                                                                                    <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                                                  </ActivityAction.Argument>
                                                                                                                  <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_18">
                                                                                                                    <If.Then>
                                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_83">
                                                                                                                        <Assign.To>
                                                                                                                          <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                        </Assign.To>
                                                                                                                        <Assign.Value>
                                                                                                                          <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                                                                                                        </Assign.Value>
                                                                                                                      </Assign>
                                                                                                                    </If.Then>
                                                                                                                    <If.Else>
                                                                                                                      <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_3" />
                                                                                                                    </If.Else>
                                                                                                                  </If>
                                                                                                                </ActivityAction>
                                                                                                              </Catch>
                                                                                                            </TryCatch.Catches>
                                                                                                          </TryCatch>
                                                                                                        </DoWhile>
                                                                                                        <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_11">
                                                                                                          <TryCatch.Try>
                                                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_213">
                                                                                                              <Sequence.Variables>
                                                                                                                <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                                              </Sequence.Variables>
                                                                                                              <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_7" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                                              <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                                                <ui:ForEach.Body>
                                                                                                                  <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                                    <ActivityAction.Argument>
                                                                                                                      <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                                                    </ActivityAction.Argument>
                                                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_212">
                                                                                                                      <Sequence.Variables>
                                                                                                                        <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                                        <Variable x:TypeArguments="x:String" Name="success" />
                                                                                                                      </Sequence.Variables>
                                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_84">
                                                                                                                        <Assign.To>
                                                                                                                          <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                                        </Assign.To>
                                                                                                                        <Assign.Value>
                                                                                                                          <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                                        </Assign.Value>
                                                                                                                      </Assign>
                                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_85">
                                                                                                                        <Assign.To>
                                                                                                                          <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                                        </Assign.To>
                                                                                                                        <Assign.Value>
                                                                                                                          <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                                        </Assign.Value>
                                                                                                                      </Assign>
                                                                                                                      <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_19">
                                                                                                                        <If.Then>
                                                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_211">
                                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_86">
                                                                                                                              <Assign.To>
                                                                                                                                <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                                                                              </Assign.To>
                                                                                                                              <Assign.Value>
                                                                                                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                                              </Assign.Value>
                                                                                                                            </Assign>
                                                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_11" />
                                                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_12" />
                                                                                                                          </Sequence>
                                                                                                                        </If.Then>
                                                                                                                      </If>
                                                                                                                    </Sequence>
                                                                                                                  </ActivityAction>
                                                                                                                </ui:ForEach.Body>
                                                                                                              </ui:ForEach>
                                                                                                            </Sequence>
                                                                                                          </TryCatch.Try>
                                                                                                          <TryCatch.Catches>
                                                                                                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                                                                                                              <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                <ActivityAction.Argument>
                                                                                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                </ActivityAction.Argument>
                                                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Error" Message="[&quot;error parsing Name Exclusion for &quot;+person+&quot; : &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                                              </ActivityAction>
                                                                                                            </Catch>
                                                                                                          </TryCatch.Catches>
                                                                                                        </TryCatch>
                                                                                                      </Sequence>
                                                                                                    </Sequence>
                                                                                                  </FlowStep>
                                                                                                </FlowDecision.True>
                                                                                                <FlowDecision.False>
                                                                                                  <FlowDecision x:Name="__ReferenceID5" Condition="[item.Attribute(&quot;Category&quot;).Value.ToString.Contains(&quot;Contact for Contract&quot;)]" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                                                                                                    <FlowDecision.True>
                                                                                                      <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                                                                                                        <Sequence DisplayName="Get contact for contract and check for Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_221">
                                                                                                          <Sequence.Variables>
                                                                                                            <Variable x:TypeArguments="x:String" Name="person" />
                                                                                                            <Variable x:TypeArguments="x:Int32" Name="tryCount" />
                                                                                                            <Variable x:TypeArguments="x:String" Name="contactPerson" />
                                                                                                          </Sequence.Variables>
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_87">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:String">[contactPerson]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString+", "+item.Element("Title").Value.ToString+", "+item.Element("Phone").Value.ToString+", "+item.Element("Email").Value.ToString]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_88">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <AddToCollection x:TypeArguments="x:String" Collection="[contractAdmins]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[contactPerson]" />
                                                                                                          <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_220">
                                                                                                            <Sequence.Variables>
                                                                                                              <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                                              <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                                              <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                                            </Sequence.Variables>
                                                                                                            <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_4" />
                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                                                                                                              <Assign.To>
                                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                                              </Assign.To>
                                                                                                              <Assign.Value>
                                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                                              </Assign.Value>
                                                                                                            </Assign>
                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                                                                                                              <Assign.To>
                                                                                                                <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                              </Assign.To>
                                                                                                              <Assign.Value>
                                                                                                                <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                                              </Assign.Value>
                                                                                                            </Assign>
                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                                                                                                              <Assign.To>
                                                                                                                <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                                              </Assign.To>
                                                                                                              <Assign.Value>
                                                                                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+person+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                                              </Assign.Value>
                                                                                                            </Assign>
                                                                                                            <DoWhile DisplayName="try http call" sap2010:WorkflowViewState.IdRef="DoWhile_4" Condition="[tryCount &lt; 3]">
                                                                                                              <TryCatch DisplayName="Try catch for http error" sap2010:WorkflowViewState.IdRef="TryCatch_12">
                                                                                                                <TryCatch.Try>
                                                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_216">
                                                                                                                    <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_4" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                                                      <ui:HttpClient.Attachments>
                                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                      </ui:HttpClient.Attachments>
                                                                                                                      <ui:HttpClient.Cookies>
                                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                      </ui:HttpClient.Cookies>
                                                                                                                      <ui:HttpClient.Headers>
                                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                      </ui:HttpClient.Headers>
                                                                                                                      <ui:HttpClient.Parameters>
                                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                      </ui:HttpClient.Parameters>
                                                                                                                      <ui:HttpClient.UrlSegments>
                                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                      </ui:HttpClient.UrlSegments>
                                                                                                                    </ui:HttpClient>
                                                                                                                    <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_5" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                                                    <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchName_&quot;+person+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_4" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;Person: &quot;+person+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </Sequence>
                                                                                                                </TryCatch.Try>
                                                                                                                <TryCatch.Catches>
                                                                                                                  <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_12">
                                                                                                                    <ActivityAction x:TypeArguments="sn:WebException">
                                                                                                                      <ActivityAction.Argument>
                                                                                                                        <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                                                      </ActivityAction.Argument>
                                                                                                                      <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_20">
                                                                                                                        <If.Then>
                                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                                                                                                                            <Assign.To>
                                                                                                                              <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                            </Assign.To>
                                                                                                                            <Assign.Value>
                                                                                                                              <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                                                                                                            </Assign.Value>
                                                                                                                          </Assign>
                                                                                                                        </If.Then>
                                                                                                                        <If.Else>
                                                                                                                          <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_4" />
                                                                                                                        </If.Else>
                                                                                                                      </If>
                                                                                                                    </ActivityAction>
                                                                                                                  </Catch>
                                                                                                                </TryCatch.Catches>
                                                                                                              </TryCatch>
                                                                                                            </DoWhile>
                                                                                                            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_13">
                                                                                                              <TryCatch.Try>
                                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_219">
                                                                                                                  <Sequence.Variables>
                                                                                                                    <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                                                  </Sequence.Variables>
                                                                                                                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_8" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                                                    <ui:ForEach.Body>
                                                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                                        <ActivityAction.Argument>
                                                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                                                        </ActivityAction.Argument>
                                                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_218">
                                                                                                                          <Sequence.Variables>
                                                                                                                            <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                                            <Variable x:TypeArguments="x:String" Name="success" />
                                                                                                                          </Sequence.Variables>
                                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_94">
                                                                                                                            <Assign.To>
                                                                                                                              <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                                            </Assign.To>
                                                                                                                            <Assign.Value>
                                                                                                                              <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                                            </Assign.Value>
                                                                                                                          </Assign>
                                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_95">
                                                                                                                            <Assign.To>
                                                                                                                              <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                                            </Assign.To>
                                                                                                                            <Assign.Value>
                                                                                                                              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                                            </Assign.Value>
                                                                                                                          </Assign>
                                                                                                                          <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_21">
                                                                                                                            <If.Then>
                                                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_217">
                                                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_96">
                                                                                                                                  <Assign.To>
                                                                                                                                    <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                                                                                  </Assign.To>
                                                                                                                                  <Assign.Value>
                                                                                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                                                  </Assign.Value>
                                                                                                                                </Assign>
                                                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_13" />
                                                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_14" />
                                                                                                                              </Sequence>
                                                                                                                            </If.Then>
                                                                                                                          </If>
                                                                                                                        </Sequence>
                                                                                                                      </ActivityAction>
                                                                                                                    </ui:ForEach.Body>
                                                                                                                  </ui:ForEach>
                                                                                                                </Sequence>
                                                                                                              </TryCatch.Try>
                                                                                                              <TryCatch.Catches>
                                                                                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_13">
                                                                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                    <ActivityAction.Argument>
                                                                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                    </ActivityAction.Argument>
                                                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Error" Message="[&quot;error parsing Name Exclusion for &quot;+person+&quot; : &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                                                  </ActivityAction>
                                                                                                                </Catch>
                                                                                                              </TryCatch.Catches>
                                                                                                            </TryCatch>
                                                                                                          </Sequence>
                                                                                                        </Sequence>
                                                                                                      </FlowStep>
                                                                                                    </FlowDecision.True>
                                                                                                    <FlowDecision.False>
                                                                                                      <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                                                                                                        <ui:Comment DisplayName="no-op" sap2010:WorkflowViewState.IdRef="Comment_11" Text="no-op" />
                                                                                                      </FlowStep>
                                                                                                    </FlowDecision.False>
                                                                                                  </FlowDecision>
                                                                                                </FlowDecision.False>
                                                                                              </FlowDecision>
                                                                                            </FlowStep.Next>
                                                                                          </FlowStep>
                                                                                        </Flowchart.StartNode>
                                                                                        <x:Reference>__ReferenceID0</x:Reference>
                                                                                        <x:Reference>__ReferenceID1</x:Reference>
                                                                                        <x:Reference>__ReferenceID2</x:Reference>
                                                                                        <x:Reference>__ReferenceID3</x:Reference>
                                                                                        <x:Reference>__ReferenceID4</x:Reference>
                                                                                        <x:Reference>__ReferenceID5</x:Reference>
                                                                                        <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_5">
                                                                                          <ui:Comment DisplayName="TO DO" sap2010:WorkflowViewState.IdRef="Comment_12" Text="check where iff list is being used.&#xA;&#xA;check if IFF list used.&#xA;&#xA;do we really need a list for contact for contract?" />
                                                                                        </FlowStep>
                                                                                      </Flowchart>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Trace" Message="Got Admin Data" />
                                                                              <Sequence DisplayName="get Negotiator Information" sap2010:WorkflowViewState.IdRef="Sequence_229">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="x:String" Name="negotiatorInfo" />
                                                                                </Sequence.Variables>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_97">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[negotiatorInfo]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">
                                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                                    </InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_98">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)">[negotiatorNameList]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_99">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)">[negotiatorList]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="get Negotiator Info" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[xmlDocumentOutput.Element(&quot;Offers&quot;).Element(&quot;Negotiators&quot;).Elements(&quot;NegotiatorInformation&quot;)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="negotiatorInfo" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_228">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="canSign" />
                                                                                        </Sequence.Variables>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_100">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[canSign]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[negotiatorInfo.Element("Role").Value.ToString]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <If Condition="[canSign.Equals(&quot;Not Authorized to sign&quot;)]" DisplayName="Not authorized to sign?" sap2010:WorkflowViewState.IdRef="If_22">
                                                                                          <If.Then>
                                                                                            <AddToCollection x:TypeArguments="x:String" Collection="[negotiatorList]" DisplayName="Add to list of negotiators" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[negotiatorInfo.Element(&quot;Name&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Title&quot;).Value.ToString+ &quot; (&quot;+ negotiatorInfo.Element(&quot;Email&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Phone&quot;).Value.ToString+&quot;) is authorized to Negotiate on behalf of contractor.&quot;]" />
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <AddToCollection x:TypeArguments="x:String" Collection="[negotiatorList]" DisplayName="Add to list of negotiators" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7" Item="[negotiatorInfo.Element(&quot;Name&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Title&quot;).Value.ToString+ &quot; (&quot;+ negotiatorInfo.Element(&quot;Email&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Phone&quot;).Value.ToString+&quot;) is authorized to Negotiate and Sign on behalf of contractor.&quot;]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <AddToCollection x:TypeArguments="x:String" Collection="[negotiatorNameList]" DisplayName="Add to list of negotiators Names" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8" Item="[negotiatorInfo.Element(&quot;Name&quot;).Value.ToString]" />
                                                                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Trace" Message="Neg. was added to the list" />
                                                                                        <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_227">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                            <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                            <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                            <Variable x:TypeArguments="x:String" Name="person" />
                                                                                            <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                            <Variable x:TypeArguments="ui:GenericValue" Name="tryCount" />
                                                                                          </Sequence.Variables>
                                                                                          <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_5" />
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_101">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_102">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_103">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">[negotiatorInfo.Element("Name").Value.ToString]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_104">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+person+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_5" Condition="[tryCount &lt; 3]">
                                                                                            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_14">
                                                                                              <TryCatch.Try>
                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_223">
                                                                                                  <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                                    <ui:HttpClient.Attachments>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                    </ui:HttpClient.Attachments>
                                                                                                    <ui:HttpClient.Cookies>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                    </ui:HttpClient.Cookies>
                                                                                                    <ui:HttpClient.Headers>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                    </ui:HttpClient.Headers>
                                                                                                    <ui:HttpClient.Parameters>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                    </ui:HttpClient.Parameters>
                                                                                                    <ui:HttpClient.UrlSegments>
                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                    </ui:HttpClient.UrlSegments>
                                                                                                  </ui:HttpClient>
                                                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Trace" Message="[&quot;SOAP request sent. Result: &quot;+soapResult.ToString]" />
                                                                                                  <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_6" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Trace" Message="SOAP result obtained" />
                                                                                                  <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchName_&quot;+person+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_5" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;Person: &quot;+person+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Trace" Message="SAM check written to file" />
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_105">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[3]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </Sequence>
                                                                                              </TryCatch.Try>
                                                                                              <TryCatch.Catches>
                                                                                                <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_14">
                                                                                                  <ActivityAction x:TypeArguments="sn:WebException">
                                                                                                    <ActivityAction.Argument>
                                                                                                      <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                                    </ActivityAction.Argument>
                                                                                                    <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_23">
                                                                                                      <If.Then>
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_106">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="ui:GenericValue">[tryCount + 1]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                      </If.Then>
                                                                                                      <If.Else>
                                                                                                        <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_5" />
                                                                                                      </If.Else>
                                                                                                    </If>
                                                                                                  </ActivityAction>
                                                                                                </Catch>
                                                                                              </TryCatch.Catches>
                                                                                            </TryCatch>
                                                                                          </DoWhile>
                                                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_15">
                                                                                            <TryCatch.Try>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_226">
                                                                                                <Sequence.Variables>
                                                                                                  <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                  <Variable x:TypeArguments="x:String" Name="success" />
                                                                                                  <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                                </Sequence.Variables>
                                                                                                <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_9" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                                  <ui:ForEach.Body>
                                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                      <ActivityAction.Argument>
                                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                                      </ActivityAction.Argument>
                                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_225">
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_107">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_108">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_24">
                                                                                                          <If.Then>
                                                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_224">
                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_109">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_15" />
                                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_16" />
                                                                                                            </Sequence>
                                                                                                          </If.Then>
                                                                                                        </If>
                                                                                                      </Sequence>
                                                                                                    </ActivityAction>
                                                                                                  </ui:ForEach.Body>
                                                                                                </ui:ForEach>
                                                                                              </Sequence>
                                                                                            </TryCatch.Try>
                                                                                            <TryCatch.Catches>
                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_15">
                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                  <ActivityAction.Argument>
                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                  </ActivityAction.Argument>
                                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Error" Message="[&quot;error parsing Person Exclusion: &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                                </ActivityAction>
                                                                                              </Catch>
                                                                                            </TryCatch.Catches>
                                                                                          </TryCatch>
                                                                                        </Sequence>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Trace" Message="Got Neg. Data" />
                                                                              <TryCatch DisplayName="Try get Pathway Cert Details" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                                                                                <TryCatch.Try>
                                                                                  <Sequence DisplayName="Attempt to obtain from XML then PDF" sap2010:WorkflowViewState.IdRef="Sequence_234">
                                                                                    <Assign DisplayName="get Name from XML" sap2010:WorkflowViewState.IdRef="Assign_110">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("PathwayCertDetails").Element("userName").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign DisplayName="get Date from XML" sap2010:WorkflowViewState.IdRef="Assign_111">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[tempPWdate]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("PathwayCertDetails").Element("completionDate").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign DisplayName="format date fro mXML" sap2010:WorkflowViewState.IdRef="Assign_112">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[tempPWdate.Substring(0,10)]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Trace" Message="[&quot;found pathwayCertInfo: &quot;+pathwayCertInfo]" />
                                                                                    <If Condition="[String.IsNullOrEmpty(pathwayPerson)]" DisplayName="did we find a person in the XML?" sap2010:WorkflowViewState.IdRef="If_25">
                                                                                      <If.Then>
                                                                                        <Sequence DisplayName="Certifcate person not found in XML" sap2010:WorkflowViewState.IdRef="Sequence_233">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="certName" />
                                                                                          </Sequence.Variables>
                                                                                          <Assign DisplayName="Retrieve the PDF file filenames" sap2010:WorkflowViewState.IdRef="Assign_113">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentDirectory,"*Pathway*.pdf")]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_13" Text="For now the thought is there is only one certification file per offer. If this changes, then this section and the name check will need to be modified to handle multiple certification names." />
                                                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="This will need to be changed if there is more than one certification file for each offer." DisplayName="Loop through all Cert PDF files" sap2010:WorkflowViewState.IdRef="ForEach`1_16" Values="[filenames]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Open PDF and get information" sap2010:WorkflowViewState.IdRef="Sequence_232">
                                                                                                  <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start process" FileName="[item.ToString]" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
                                                                                                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'AcroRd32.exe'" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="b247e6b1cdd81d9f84f46a26bf057859" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Pathway*' /&gt;">
                                                                                                    <ui:WindowScope.Body>
                                                                                                      <ActivityAction x:TypeArguments="x:Object">
                                                                                                        <ActivityAction.Argument>
                                                                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                                                        </ActivityAction.Argument>
                                                                                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_231">
                                                                                                          <Sequence.Variables>
                                                                                                            <Variable x:TypeArguments="x:String" Name="Document" />
                                                                                                          </Sequence.Variables>
                                                                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_16">
                                                                                                            <TryCatch.Try>
                                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_230">
                                                                                                                <Sequence.Variables>
                                                                                                                  <Variable x:TypeArguments="s:String[]" Name="certStrings" />
                                                                                                                  <Variable x:TypeArguments="x:String" Name="tempText" />
                                                                                                                </Sequence.Variables>
                                                                                                                <ui:GetFullText DisplayName="Get full text of Certification" sap2010:WorkflowViewState.IdRef="GetFullText_1" IgnoreHidden="False">
                                                                                                                  <ui:GetFullText.Target>
                                                                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ae68f56d58ddbc38ceaee21c067788d9" Selector="&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                                  </ui:GetFullText.Target>
                                                                                                                  <ui:GetFullText.Text>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[Document]</OutArgument>
                                                                                                                  </ui:GetFullText.Text>
                                                                                                                </ui:GetFullText>
                                                                                                                <Assign DisplayName="replace line newline(s)" sap2010:WorkflowViewState.IdRef="Assign_114">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[tempText]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[Document.ToString.Replace(vbCr, "@@").Replace(vbLf, "##")]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign DisplayName="split string into tokens" sap2010:WorkflowViewState.IdRef="Assign_115">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="s:String[]">[certStrings]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="s:String[]">[Split(tempText,"@@##")]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign DisplayName="Assign Name Token" sap2010:WorkflowViewState.IdRef="Assign_116">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[certStrings(7)]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign DisplayName="Split and Assign date token" sap2010:WorkflowViewState.IdRef="Assign_117">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[Split(certStrings(16),":")(1)]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Trace" Message="[&quot;1. assigned pathwayCertInfo to &quot;+pathwayCertInfo]" />
                                                                                                              </Sequence>
                                                                                                            </TryCatch.Try>
                                                                                                            <TryCatch.Catches>
                                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_16">
                                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                  <ActivityAction.Argument>
                                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                  </ActivityAction.Argument>
                                                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Error" Message="Issue obtaining Certification information" />
                                                                                                                </ActivityAction>
                                                                                                              </Catch>
                                                                                                            </TryCatch.Catches>
                                                                                                          </TryCatch>
                                                                                                        </Sequence>
                                                                                                      </ActivityAction>
                                                                                                    </ui:WindowScope.Body>
                                                                                                  </ui:WindowScope>
                                                                                                  <ui:CloseApplication DisplayName="Close application 'AcroRd32.exe Pathways'" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                                                                                                    <ui:CloseApplication.Target>
                                                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="09bd9a0423476e7f3cfc305041cb101f" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                    </ui:CloseApplication.Target>
                                                                                                  </ui:CloseApplication>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_118">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[certName]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <ui:Break sap2010:WorkflowViewState.IdRef="Break_1" />
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_119">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">["Completed by "+pathwayPerson+" on "+Date.Parse(pathwayCertInfo).ToString("MMMM dd, yyyy")]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </Sequence>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_240">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="certName" />
                                                                                        </Sequence.Variables>
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_14" Text="If there was any error, try again. If this fails, then log the error and continue." />
                                                                                        <Assign DisplayName="Retrieve the XML file filenames" sap2010:WorkflowViewState.IdRef="Assign_120">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentDirectory,"*Pathway*.pdf")]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_17" Values="[filenames]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:Object">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_238">
                                                                                                <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open Pathway Cert PDF" FileName="[item.ToString]" sap2010:WorkflowViewState.IdRef="StartProcess_2" />
                                                                                                <Assign DisplayName="Assign Cert Name" sap2010:WorkflowViewState.IdRef="Assign_121">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <Assign DisplayName="Assign Cert Date" sap2010:WorkflowViewState.IdRef="Assign_122">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'AcroRd32.exe PathwayToS...'" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="b247e6b1cdd81d9f84f46a26bf057859" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Pathway*' /&gt;">
                                                                                                  <ui:WindowScope.Body>
                                                                                                    <ActivityAction x:TypeArguments="x:Object">
                                                                                                      <ActivityAction.Argument>
                                                                                                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                                                      </ActivityAction.Argument>
                                                                                                      <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_237">
                                                                                                        <Sequence.Variables>
                                                                                                          <Variable x:TypeArguments="x:String" Name="Document" />
                                                                                                        </Sequence.Variables>
                                                                                                        <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                                                                                                          <TryCatch.Try>
                                                                                                            <Sequence DisplayName="Pull name from PDF" sap2010:WorkflowViewState.IdRef="Sequence_235">
                                                                                                              <Sequence.Variables>
                                                                                                                <Variable x:TypeArguments="s:String[]" Name="certStrings" />
                                                                                                                <Variable x:TypeArguments="x:String" Name="tempText" />
                                                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="count" />
                                                                                                              </Sequence.Variables>
                                                                                                              <ui:GetFullText DisplayName="Get full text 'client'" sap2010:WorkflowViewState.IdRef="GetFullText_2" IgnoreHidden="False">
                                                                                                                <ui:GetFullText.Target>
                                                                                                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ae68f56d58ddbc38ceaee21c067788d9" Selector="&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                                </ui:GetFullText.Target>
                                                                                                                <ui:GetFullText.Text>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[Document]</OutArgument>
                                                                                                                </ui:GetFullText.Text>
                                                                                                              </ui:GetFullText>
                                                                                                              <Assign DisplayName="get all text" sap2010:WorkflowViewState.IdRef="Assign_123">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[tempText]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String">[Document.ToString.Replace(vbCr, "@@").Replace(vbLf, "##")]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <Assign DisplayName="split out the name" sap2010:WorkflowViewState.IdRef="Assign_124">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="s:String[]">[certStrings]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="s:String[]">[Split(tempText,"@@##")]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <Assign DisplayName="Assign Cert Name" sap2010:WorkflowViewState.IdRef="Assign_125">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String">[certStrings(7)]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <Assign DisplayName="Assign Cert Date" sap2010:WorkflowViewState.IdRef="Assign_126">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String">[Split(certStrings(16),":")(1)]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Trace" Message="[&quot;2. assigned pathwayCertInfo: &quot;+pathwayCertInfo]" />
                                                                                                            </Sequence>
                                                                                                          </TryCatch.Try>
                                                                                                          <TryCatch.Catches>
                                                                                                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                                                                                                              <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                <ActivityAction.Argument>
                                                                                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                </ActivityAction.Argument>
                                                                                                                <Sequence DisplayName="Certificate Error" sap2010:WorkflowViewState.IdRef="Sequence_236">
                                                                                                                  <Assign DisplayName="Clear Cert Name" sap2010:WorkflowViewState.IdRef="Assign_127">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                  <Assign DisplayName="Clear Cert Date" sap2010:WorkflowViewState.IdRef="Assign_128">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Error" Message="[&quot;Error obtaining Pathway Certification: &quot;+exception.Message]" />
                                                                                                                </Sequence>
                                                                                                              </ActivityAction>
                                                                                                            </Catch>
                                                                                                          </TryCatch.Catches>
                                                                                                        </TryCatch>
                                                                                                      </Sequence>
                                                                                                    </ActivityAction>
                                                                                                  </ui:WindowScope.Body>
                                                                                                </ui:WindowScope>
                                                                                                <ui:CloseApplication DisplayName="Close application 'AcroRd32.exe Pathways'" sap2010:WorkflowViewState.IdRef="CloseApplication_2">
                                                                                                  <ui:CloseApplication.Target>
                                                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="09bd9a0423476e7f3cfc305041cb101f" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                  </ui:CloseApplication.Target>
                                                                                                </ui:CloseApplication>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_129">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[certName]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <ui:Break sap2010:WorkflowViewState.IdRef="Break_2" />
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <If Condition="[String.IsNullOrEmpty(pathwayPerson)]" sap2010:WorkflowViewState.IdRef="If_26">
                                                                                          <If.Then>
                                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_239">
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_130">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">No Pathway Certification Available</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_131">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">
                                                                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                                                                  </InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot;Missing or Unable to read Certification&quot;,CERTERROR}]" DataTable="[errorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_17" />
                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot;Missing or Unable to read Certification&quot;,CERTERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_18" />
                                                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Warn" Message="Certificate not found" />
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_132">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String">["Completed by "+pathwayPerson+" on "+Date.Parse(pathwayCertInfo).ToString("MMMM dd, yyyy")]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                              </TryCatch>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Trace" Message="Got Pathway Cert Data" />
                                                                              <Sequence DisplayName="Negotiators/Pathway Info" sap2010:WorkflowViewState.IdRef="Sequence_246">
                                                                                <Sequence DisplayName="check if Pathway Cert Person is Negotiator" sap2010:WorkflowViewState.IdRef="Sequence_245">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="x:Boolean" Name="pathwayCheck" />
                                                                                  </Sequence.Variables>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_133">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">[pathwayCheck]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Compare names for exact match" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[negotiatorNameList]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="x:String">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="x:String" Name="name" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_241">
                                                                                          <If Condition="[name = pathwayPerson]" sap2010:WorkflowViewState.IdRef="If_27">
                                                                                            <If.Then>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_134">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[pathwayCheck]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </If.Then>
                                                                                          </If>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                  <If Condition="[NOT pathwayCheck]" sap2010:WorkflowViewState.IdRef="If_29">
                                                                                    <If.Then>
                                                                                      <Sequence DisplayName="compare name  for middle initial difference" sap2010:WorkflowViewState.IdRef="Sequence_244">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="s:String[]" Name="names" />
                                                                                        </Sequence.Variables>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_135">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="s:String[]">[names]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="s:String[]">[pathwayPerson.Trim.Split()]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_19" Values="[negotiatorNameList]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:String">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:String" Name="newName" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_243">
                                                                                                <Sequence.Variables>
                                                                                                  <Variable x:TypeArguments="s:String[]" Name="nameCheck" />
                                                                                                </Sequence.Variables>
                                                                                                <Assign DisplayName="Split name" sap2010:WorkflowViewState.IdRef="Assign_136">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="s:String[]">[nameCheck]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="s:String[]">[newName.Split()]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <If Condition="[(names(0).Equals(nameCheck(0)) AND (names(names.Length -1).Equals(nameCheck(nameCheck.Length -1))))]" DisplayName="Compare first and Last names" sap2010:WorkflowViewState.IdRef="If_28">
                                                                                                  <If.Then>
                                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_242">
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_137">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:Boolean">[pathwayCheck]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, newName.ToString,&quot;The middle initial does not match/exist in Certificate name&quot;}]" DataTable="[errorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_19" />
                                                                                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, newName.ToString,&quot;The middle initial does not match/exist in Certificate name&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_20" />
                                                                                                      <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                                                                                                    </Sequence>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_15" Text="do nothing at this time" />
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                      </Sequence>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </Sequence>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Trace" Message="Got People Data" />
                                                                              <TryCatch DisplayName="try to get Exceptions to terms" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                                                                                <TryCatch.Try>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_138">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[exceptionsToTermsAndConditions]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("ExceptionsToTermsAndConditions").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_139">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[exceptionsToTermsAndConditions]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">None</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                                <TryCatch.Finally>
                                                                                  <If Condition="[String.IsNullOrEmpty(exceptionsToTermsAndConditions)]" sap2010:WorkflowViewState.IdRef="If_30">
                                                                                    <If.Then>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_140">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[exceptionsToTermsAndConditions]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">None</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </TryCatch.Finally>
                                                                              </TryCatch>
                                                                              <TryCatch DisplayName="Try to find sub K plan information" sap2010:WorkflowViewState.IdRef="TryCatch_20">
                                                                                <TryCatch.Try>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_141">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[subKplan]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("SubContractingPlan").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_20">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_142">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[subKplan]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                                <TryCatch.Finally>
                                                                                  <If Condition="[String.IsNullOrEmpty(subKplan)]" sap2010:WorkflowViewState.IdRef="If_31">
                                                                                    <If.Then>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_143">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[subKplan]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </TryCatch.Finally>
                                                                              </TryCatch>
                                                                              <TryCatch DisplayName="Try to find disaster recovery" sap2010:WorkflowViewState.IdRef="TryCatch_21">
                                                                                <TryCatch.Try>
                                                                                  <Assign DisplayName="get disaster info" sap2010:WorkflowViewState.IdRef="Assign_144">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[disasterRecoverPurchase]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("DisasterRecoveryPurchasingProgram").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_21">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_145">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[disasterRecoverPurchase]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">No</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                                <TryCatch.Finally>
                                                                                  <If Condition="[String.IsNullOrEmpty(disasterRecoverPurchase)]" sap2010:WorkflowViewState.IdRef="If_32">
                                                                                    <If.Then>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_146">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[disasterRecoverPurchase]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">No</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </TryCatch.Finally>
                                                                              </TryCatch>
                                                                              <TryCatch DisplayName="Try to find min order" sap2010:WorkflowViewState.IdRef="TryCatch_22">
                                                                                <TryCatch.Try>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_147">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("MinOrderLimit").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </TryCatch.Try>
                                                                                <TryCatch.Catches>
                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_22">
                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_148">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">Not Listed</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </ActivityAction>
                                                                                  </Catch>
                                                                                </TryCatch.Catches>
                                                                                <TryCatch.Finally>
                                                                                  <If Condition="[String.IsNullOrEmpty(minOrderLimit)]" sap2010:WorkflowViewState.IdRef="If_33">
                                                                                    <If.Then>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_149">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">Not Listed</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </TryCatch.Finally>
                                                                              </TryCatch>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Trace" Message="[&quot;completed reading in offer: &quot;+offerFile.ToString]" />
                                                                            </Sequence>
                                                                          </Sequence>
                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="Completed reading in all file(s)" />
                                                                          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="store information in Excel file" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[baseDirectory+&quot;offer-letter-records.xlsx&quot;]">
                                                                            <ui:ExcelApplicationScope.Body>
                                                                              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                                                <ActivityAction.Argument>
                                                                                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                                                </ActivityAction.Argument>
                                                                                <Sequence DisplayName="Store all info in Excel" sap2010:WorkflowViewState.IdRef="Sequence_259">
                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Info" Message="Begin Excel file addition" />
                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_16" Text="// This section is a work in progress. It needs to be vetted by the customer for completion." />
                                                                                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_258">
                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_257">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="x:String" Name="scopeOfContract" />
                                                                                        <Variable x:TypeArguments="x:Int32" Default="1" Name="baseRowNumber" />
                                                                                      </Sequence.Variables>
                                                                                      <ui:ExcelWriteCell Cell="[&quot;A&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Solicitation number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Sheet1" Text="[solicitationNumber]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;B&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store refrech number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Sheet1" Text="[refreshNumber]" />
                                                                                      <Sequence DisplayName="Store Contract Negotiators" sap2010:WorkflowViewState.IdRef="Sequence_250">
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_150">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[negotiatorList]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:String">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_249">
                                                                                                <If Condition="[nameCount = 1]" sap2010:WorkflowViewState.IdRef="If_34">
                                                                                                  <If.Then>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_151">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_152">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[fullNameList +":"+item]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_153">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Int32">[nameCount + 1]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;C&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Negotiators(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Sheet1" Text="[fullNameList]" />
                                                                                      </Sequence>
                                                                                      <ui:ExcelWriteCell Cell="[&quot;D&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store DUNS" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Sheet1" Text="[DUNSNumber]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;E&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Completion Date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Sheet1" Text="[completionDate]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;F&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Completion Time" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Sheet1" Text="[completionTime]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;G&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company Name" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Sheet1" Text="[companyName]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;H&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company Street" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Sheet1" Text="[businessStreet]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;I&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Comapny Suite" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Sheet1" Text="[businessSuite]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;J&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company City" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Sheet1" Text="[businessCity]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;K&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company State" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Sheet1" Text="[businessState]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;L&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company zip" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Sheet1" Text="[businessZipcode]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;M&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company phone" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Sheet1" Text="[businessPhone]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;N&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company Fax" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Sheet1" Text="[businessFax]" />
                                                                                      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_17" Text="// @TODO: This is a dupe, what should be here or just remove it?" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;O&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store DUNS (again?)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="Sheet1" Text="[DUNSNumber]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;P&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store TIN" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="Sheet1" Text="[tin]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;Q&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Parent Company" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="Sheet1" Text="[parentCompany]" />
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_154">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_21" Values="[NAICSCodeList]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_251">
                                                                                              <If Condition="[String.IsNullOrEmpty(NAICSCode)]" sap2010:WorkflowViewState.IdRef="If_35">
                                                                                                <If.Then>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_155">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_156">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[NAICSCode+", "+item.ToString]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                      <ui:ExcelWriteCell Cell="[&quot;R&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store NAISC" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="Sheet1" Text="[NAICSCode]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;S&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Business &quot;size&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="Sheet1" Text="[businessSize]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;T&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store business &quot;type&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="Sheet1" Text="[businessType]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;U&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Contract Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="Sheet1" Text="[Convert.ToDouble(estimatedContractValue).ToString(&quot;#,##0.00&quot;)]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;V&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Options Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="Sheet1" Text="[basePeriodOptionsValue]" />
                                                                                      <Sequence DisplayName="Store Contract Admins" sap2010:WorkflowViewState.IdRef="Sequence_253">
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_157">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_158">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_22" Values="[contractAdmins]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:String">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_252">
                                                                                                <If Condition="[nameCount = 1]" sap2010:WorkflowViewState.IdRef="If_36">
                                                                                                  <If.Then>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_159">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_160">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[fullNameList +":"+item]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_161">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Int32">[nameCount + 1]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;W&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Administrator(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="Sheet1" Text="[fullNameList]" />
                                                                                      </Sequence>
                                                                                      <Sequence DisplayName="Store Negotiators" sap2010:WorkflowViewState.IdRef="Sequence_255">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:Int32" Name="adminCount" />
                                                                                          <Variable x:TypeArguments="x:Int32" Name="negotitorCount" />
                                                                                          <Variable x:TypeArguments="x:String" Name="negotitor" />
                                                                                        </Sequence.Variables>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_162">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:Int32">[negotitorCount]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_23" Values="[negotiatorList]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:String">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_254">
                                                                                                <If Condition="[negotitorCount = 1]" sap2010:WorkflowViewState.IdRef="If_37">
                                                                                                  <If.Then>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_163">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[negotitor]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_164">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[negotitor]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[negotitor +":"+item]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_165">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Int32">[negotitorCount]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Int32">[negotitorCount + 1]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;X&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store IFF admin" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="Sheet1" Text="[negotitor]" />
                                                                                      </Sequence>
                                                                                      <ui:ExcelWriteCell Cell="[&quot;Y&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store SAM exp. date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="Sheet1" Text="[SAMExpirationDate]" />
                                                                                      <ui:ExcelWriteCell Cell="[&quot;Z&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store scope" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="Sheet1" Text="[scopeOfContract]" />
                                                                                      <Sequence DisplayName="Store SIN info" sap2010:WorkflowViewState.IdRef="Sequence_256">
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_18" Text="// @TODO: need to make sure all SINs get stored" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;AA&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store SIN(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="Sheet1" Text="TBD" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;AB&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store SIN description" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_28" SheetName="Sheet1" Text="TBD" />
                                                                                      </Sequence>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_166">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Int32">[baseRowNumber]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Int32">[baseRowNumber + 1]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Hotkey close for excel" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="f4" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                                                                                        <ui:SendHotkey.Target>
                                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="502f34ef30dd1903b0376ced0d2dbc6e" Selector="&lt;wnd app='excel.exe' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                        </ui:SendHotkey.Target>
                                                                                      </ui:SendHotkey>
                                                                                    </Sequence>
                                                                                  </Sequence>
                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Info" Message="Completed Excel update" />
                                                                                </Sequence>
                                                                              </ActivityAction>
                                                                            </ui:ExcelApplicationScope.Body>
                                                                          </ui:ExcelApplicationScope>
                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Info" Message="Begin updating Pre-Neg Word template" />
                                                                          <Sequence DisplayName="Replace the placeholders in the Pre-Negotiation Memorandum template with the values extracted from the XML file and the SAM.gov website" sap2010:WorkflowViewState.IdRef="Sequence_274">
                                                                            <Sequence.Variables>
                                                                              <Variable x:TypeArguments="x:Boolean" Name="outputDirExsits" />
                                                                              <Variable x:TypeArguments="x:String" Name="preNegMemorandumFilename" />
                                                                            </Sequence.Variables>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_167">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:String">[preNegMemorandumFilename]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:String">[id + "-Pre-Neg.docx"]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <ui:PathExists DisplayName="Path exists" Exists="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                                            <If Condition="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="If_38">
                                                                              <If.Then>
                                                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_19" Text="Do nothing" />
                                                                              </If.Then>
                                                                              <If.Else>
                                                                                <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[currentDirectory+&quot;/output&quot;]" />
                                                                              </If.Else>
                                                                            </If>
                                                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Trace" Message="[&quot;copy to &quot;+currentDirectory+&quot;\output\&quot; + preNegMemorandumFilename]" />
                                                                            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[currentDirectory+&quot;\output\&quot; + preNegMemorandumFilename]" DisplayName="Copy file" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="False" Path="[baseDirectory+&quot;template\Pre-Negotiation-Memorandum.docx&quot;]" />
                                                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Trace" Message="copy success" />
                                                                            <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_6" />
                                                                            <Assign DisplayName="Initialize filepath for Pre-Negotiation Memorandum to populate with extracted values" sap2010:WorkflowViewState.IdRef="Assign_168">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[memorandumFilepath]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="ui:GenericValue">[currentDirectory+"\output\" + preNegMemorandumFilename]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="[memorandumFilepath]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_1">
                                                                              <p1:WordApplicationScope.Body>
                                                                                <ActivityAction x:TypeArguments="ui:WordDocument">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                                                  </ActivityAction.Argument>
                                                                                  <Sequence DisplayName="replace text in word doc" sap2010:WorkflowViewState.IdRef="Sequence_273">
                                                                                    <Sequence.Variables>
                                                                                      <Variable x:TypeArguments="x:String" Name="scopeOfContract">
                                                                                        <Variable.Default>
                                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                                        </Variable.Default>
                                                                                      </Variable>
                                                                                      <Variable x:TypeArguments="x:Int32" Name="estCost" />
                                                                                      <Variable x:TypeArguments="x:Int32" Name="decimalLocation" />
                                                                                    </Sequence.Variables>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_1" Replace="[solicitationNumber]" Search="%[solicitation_number]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_2" Replace="[refreshNumber]" Search="%[refresh_number]" />
                                                                                    <If Condition="[offerDate.ToLower.Equals(&quot;uknown&quot;)]" sap2010:WorkflowViewState.IdRef="If_58">
                                                                                      <If.Then>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_57" Replace="[offerDate]" Search="%[offer_date]" />
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_3" Replace="[Date.Parse(offerDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[offer_date]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <Sequence DisplayName="replace business info" sap2010:WorkflowViewState.IdRef="Sequence_261">
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_4" Replace="[companyName]" Search="%[company_name]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_5" Replace="[businessStreet]" Search="%[business_street]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_6" Replace="[businessCity]" Search="%[business_city]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_7" Replace="[businessState]" Search="%[business_state]" />
                                                                                      <If Condition="[String.IsNullOrEmpty(businessSuite)]" DisplayName="Suite check" sap2010:WorkflowViewState.IdRef="If_39">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_8" Search="%[business_Suite]">
                                                                                            <p1:WordReplaceText.Replace>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </p1:WordReplaceText.Replace>
                                                                                          </p1:WordReplaceText>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_9" Replace="[businessSuite]" Search="%[business_Suite]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_10" Replace="[businessZipcode]" Search="%[business_zipcode]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="[businessPhone]" Search="%[business_phone]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="[businessFax]" Search="%[business_fax]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="[DUNSNumber]" Search="%[duns_number]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_14" Replace="[tin]" Search="%[tin]" />
                                                                                      <If Condition="[String.IsNullOrEmpty(businessSize)]" DisplayName="check business size" sap2010:WorkflowViewState.IdRef="If_40">
                                                                                        <If.Then>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_260">
                                                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_20" Text="// Add to review list for this document" />
                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Business Size&quot;}]" DataTable="[errorTable]" DisplayName="Add business size Error" sap2010:WorkflowViewState.IdRef="AddDataRow_21" />
                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Business Size&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add business size Error" sap2010:WorkflowViewState.IdRef="AddDataRow_22" />
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_15" Replace="[businessSize]" Search="%[business_type]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                    <If Condition="[String.IsNullOrEmpty(parentCompany)]" DisplayName="parent comapny check" sap2010:WorkflowViewState.IdRef="If_41">
                                                                                      <If.Then>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_16" Search="%[parent_company]">
                                                                                          <p1:WordReplaceText.Replace>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </p1:WordReplaceText.Replace>
                                                                                        </p1:WordReplaceText>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_17" Replace="[parentCompany]" Search="%[parent_company]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_169">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">
                                                                                          <Literal x:TypeArguments="x:String" Value="" />
                                                                                        </InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_24" Values="[NAICSCodeList]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="x:Object">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_262">
                                                                                            <If Condition="[String.IsNullOrEmpty(NAICSCode)]" sap2010:WorkflowViewState.IdRef="If_42">
                                                                                              <If.Then>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_170">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Then>
                                                                                              <If.Else>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_171">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[NAICSCode+", "+item.ToString]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Else>
                                                                                            </If>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_18" Replace="[NAICSCode]" Search="%[naics_code]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_19" Replace="[Convert.ToDouble(estimatedContractValue).ToString(&quot;#,##0.00&quot;)]" Search="%[estimated_contract_value]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_20" Replace="[Convert.ToDouble(basePeriodOptionsValue).ToString(&quot;#,##0.00&quot;)]" Search="%[base_period_options_value]" />
                                                                                    <Sequence DisplayName="replace contract admin" sap2010:WorkflowViewState.IdRef="Sequence_264">
                                                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep Admin for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_25" Values="[contractAdmins]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="admin replace" sap2010:WorkflowViewState.IdRef="Sequence_263">
                                                                                              <Sequence.Variables>
                                                                                                <Variable x:TypeArguments="x:String" Name="person" />
                                                                                              </Sequence.Variables>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_172">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[item.ToString+Environment.NewLine +"[admin_contract_contact]"]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check string length" sap2010:WorkflowViewState.IdRef="If_43">
                                                                                                <If.Then>
                                                                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[admin_contract_contact]</InArgument>
                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                                                  </ui:InvokeWorkflowFile>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_21" Replace="[person]" Search="%[admin_contract_contact]" />
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_21" Text="// remove the last replacement characters" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_22" Search="%[admin_contract_contact]">
                                                                                        <p1:WordReplaceText.Replace>
                                                                                          <InArgument x:TypeArguments="x:String">
                                                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                                                          </InArgument>
                                                                                        </p1:WordReplaceText.Replace>
                                                                                      </p1:WordReplaceText>
                                                                                    </Sequence>
                                                                                    <Sequence DisplayName="replace negotiator" sap2010:WorkflowViewState.IdRef="Sequence_266">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="x:String" Name="person" />
                                                                                      </Sequence.Variables>
                                                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep Negotiators for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_26" Values="[negotiatorList]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="negaotiator replace" sap2010:WorkflowViewState.IdRef="Sequence_265">
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_173">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[person + Environment.NewLine + item.ToString+Environment.NewLine]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                      <If Condition="[person.ToString.Length &gt;= 255]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_44">
                                                                                        <If.Then>
                                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                                              <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">[negotiator_administrators], [negotiator_title], authorized to Negotiate on behalf of contractor.</InArgument>
                                                                                              <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                              <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                                          </ui:InvokeWorkflowFile>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_23" Replace="[person]" Search="[negotiator_administrators], [negotiator_title], authorized to Negotiate on behalf of contractor." />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_24" Replace="[IFFAdministrator]" Search="%[iff_administrators]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_25" Replace="[scopeOfContract]" Search="%[scope_of_contract]" />
                                                                                    <If Condition="[String.IsNullOrEmpty(SAMExpirationDate)]" DisplayName="check expire date" sap2010:WorkflowViewState.IdRef="If_45">
                                                                                      <If.Then>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_267">
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_22" Text="// Add to review list for this document" />
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;SAM Expiration Date&quot;}]" DataTable="[errorTable]" DisplayName="Add Sam date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;SAM Expiration Date&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Sam date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_24" />
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_26" Replace="[Date.Parse(SAMExpirationDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[expiration_date]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_174">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[completionMonth+"/"+completionDay + "/" + completionYear]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_27" Replace="[Date.Parse(completionDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[completion_date]" />
                                                                                    <Sequence DisplayName="replace SIN info" sap2010:WorkflowViewState.IdRef="Sequence_270">
                                                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep negostiator for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_27" Values="[sinInfo]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_269">
                                                                                              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_23" Text="TO DO:&#xA;&#xA;remove comment code" />
                                                                                              <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                                                                                <ui:CommentOut.Body>
                                                                                                  <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_268">
                                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_28" Replace="[item.ToString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                  </Sequence>
                                                                                                </ui:CommentOut.Body>
                                                                                              </ui:CommentOut>
                                                                                              <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_46">
                                                                                                <If.Then>
                                                                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[Sin_info]</InArgument>
                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[item.ToString+Environment.NewLine +"[SIN_info]"]</InArgument>
                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                                                  </ui:InvokeWorkflowFile>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_29" Replace="[item.toString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_24" Text="// remove the last replacement characters" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_30" Search="%[Sin_info]">
                                                                                        <p1:WordReplaceText.Replace>
                                                                                          <InArgument x:TypeArguments="x:String">
                                                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                                                          </InArgument>
                                                                                        </p1:WordReplaceText.Replace>
                                                                                      </p1:WordReplaceText>
                                                                                    </Sequence>
                                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Trace" Message="[&quot;pathwayCertInfo: &quot;+pathwayCertInfo]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_31" Replace="[pathwayCertInfo]" Search="%[Pathway_completed_by_date]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_32" Replace="[subcontractingPlan]" Search="%[subcontracting_plan]" />
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_175">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Int32">[decimalLocation]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Int32">[estimatedContractValue.Length]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_25" Text="Should the estCost be the cost from the XML or the 20 year cost (i.e. cost from XML*4)?" />
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_176">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Int32">[estCost]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(estimatedContractValue.Substring(0,decimalLocation))]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <If Condition="[estCost &gt; 10000000]" DisplayName="EEO check" sap2010:WorkflowViewState.IdRef="If_47">
                                                                                      <If.Then>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_33" Replace="☐ N/A  X Required" Search="%[eeo_clr]" />
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_34" Replace="X N/A ☐ Required" Search="%[eeo_clr]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <If Condition="[disasterRecoverPurchase = &quot;Yes&quot;]" DisplayName="If recovery purchase" sap2010:WorkflowViewState.IdRef="If_48">
                                                                                      <If.Then>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_35" Replace="X Yes   ☐ No" Search="%[recovery_purchase]" />
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_36" Replace="☐ Yes   X No" Search="%[recovery_purchase]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <Sequence DisplayName="check cooperative purchase" sap2010:WorkflowViewState.IdRef="Sequence_271">
                                                                                      <If Condition="[coopPurchase = &quot;True&quot;]" DisplayName="If  cooperative purchase yes" sap2010:WorkflowViewState.IdRef="If_49">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_37" Replace="☐ N/A  X Yes   ☐ No" Search="%[cooperative_purchase]" />
                                                                                        </If.Then>
                                                                                      </If>
                                                                                      <If Condition="[coopPurchase = &quot;False&quot;]" DisplayName="If  cooperative purchase no" sap2010:WorkflowViewState.IdRef="If_50">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_38" Replace="☐ N/A ☐ Yes   X No" Search="%[cooperative_purchase]" />
                                                                                        </If.Then>
                                                                                      </If>
                                                                                      <If Condition="[coopPurchase = &quot;NA&quot;]" DisplayName="If  cooperative purchase NA" sap2010:WorkflowViewState.IdRef="If_51">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_39" Replace="X N/A ☐ Yes  ☐ No" Search="%[cooperative_purchase]" />
                                                                                        </If.Then>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_40" Replace="[Now.ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[exclusion_check_date]" />
                                                                                    <If Condition="[personExclusion OR dunsExclusion]" sap2010:WorkflowViewState.IdRef="If_52">
                                                                                      <If.Then>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_41" Replace="X does ☐ does not" Search="%[on_excluded_list]" />
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_42" Replace="☐ does X does not" Search="%[on_excluded_list]" />
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_43" Replace="[exceptionsToTermsAndConditions]" Search="%[exceptionsTerms_value]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_44" Replace="[subKplan]" Search="%[SubKContractingPlan]" />
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_45" Replace="[disasterRecoverPurchase]" Search="%[diasasterRecovery_value]" />
                                                                                    <If Condition="[minOrderLimit.Equals(&quot;Not Listed&quot;)]" DisplayName="add $ ?" sap2010:WorkflowViewState.IdRef="If_53">
                                                                                      <If.Then>
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_26" Text="// no-op" />
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_177">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">["$"+Convert.ToDouble(minOrderLimit).ToString("#,##0.00")]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_46" Replace="[minOrderLimit]" Search="%[minimum_limit_value]" />
                                                                                    <Sequence DisplayName="write error table to end of Word Doc" sap2010:WorkflowViewState.IdRef="Sequence_272">
                                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="end" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="True">
                                                                                        <ui:SendHotkey.Target>
                                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                                        </ui:SendHotkey.Target>
                                                                                      </ui:SendHotkey>
                                                                                      <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayMS="2000" DisplayName="Send Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="nb" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="False">
                                                                                        <ui:SendHotkey.Target>
                                                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                                        </ui:SendHotkey.Target>
                                                                                      </ui:SendHotkey>
                                                                                      <p1:WordInsertDataTable Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" Text="{x:Null}" DataTable="[offerErrorTable]" DisplayName="Insert DataTable" sap2010:WorkflowViewState.IdRef="WordInsertDataTable_1" Position="End" />
                                                                                    </Sequence>
                                                                                  </Sequence>
                                                                                </ActivityAction>
                                                                              </p1:WordApplicationScope.Body>
                                                                            </p1:WordApplicationScope>
                                                                          </Sequence>
                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_43" Level="Info" Message="Completed updating Pre-Neg Word template" />
                                                                          <Sequence DisplayName="Output Price-Neg" sap2010:WorkflowViewState.IdRef="Sequence_284">
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_44" Level="Info" Message="Begin updating Price-Neg Word template" />
                                                                            <Sequence DisplayName="Replace the placeholders in the Pre-Negotiation Memorandum template with the values extracted from the XML file and the SAM.gov website" sap2010:WorkflowViewState.IdRef="Sequence_283">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="x:String" Name="priceNegMemorandumFilename" />
                                                                                <Variable x:TypeArguments="x:Boolean" Name="outputDirExsits" />
                                                                              </Sequence.Variables>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_178">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[priceNegMemorandumFilename]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[id + "-Price-Neg.docx"]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:PathExists DisplayName="Path exists" Exists="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[currentDirectory+&quot;\output\&quot; + priceNegMemorandumFilename]" DisplayName="Copy file" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="False" Path="[baseDirectory+&quot;template\PriceNegTemplate.docx&quot;]" />
                                                                              <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                                                              <Assign DisplayName="Initialize filepath for Pre-Negotiation Memorandum to populate with extracted values" sap2010:WorkflowViewState.IdRef="Assign_179">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[memorandumFilepath]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[currentDirectory+"\output\" + priceNegMemorandumFilename]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="[memorandumFilepath]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2">
                                                                                <p1:WordApplicationScope.Body>
                                                                                  <ActivityAction x:TypeArguments="ui:WordDocument">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_282">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="x:String" Name="contract">
                                                                                          <Variable.Default>
                                                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                                                          </Variable.Default>
                                                                                        </Variable>
                                                                                      </Sequence.Variables>
                                                                                      <Sequence DisplayName="replace text in word doc" sap2010:WorkflowViewState.IdRef="Sequence_281">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="scopeOfContract">
                                                                                            <Variable.Default>
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </Variable.Default>
                                                                                          </Variable>
                                                                                          <Variable x:TypeArguments="x:Int32" Name="estCost" />
                                                                                          <Variable x:TypeArguments="x:Int32" Name="decimalLocation" />
                                                                                        </Sequence.Variables>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_47" Replace="[solicitationNumber]" Search="%[solicitation_number]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_48" Replace="[refreshNumber]" Search="%[refresh_number]" />
                                                                                        <If Condition="[offerDate.ToLower.Equals(&quot;uknown&quot;)]" sap2010:WorkflowViewState.IdRef="If_59">
                                                                                          <If.Then>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_58" Replace="[offerDate]" Search="%[offer_date]" />
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_59" Replace="[Date.Parse(offerDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[offer_date]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_50" Replace="[companyName]" Search="%[company_name]" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_180">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_28" Values="[NAICSCodeList]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:Object">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_275">
                                                                                                <If Condition="[String.IsNullOrEmpty(NAICSCode)]" sap2010:WorkflowViewState.IdRef="If_54">
                                                                                                  <If.Then>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_181">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_182">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[NAICSCode+", "+item.ToString]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_51" Replace="[NAICSCode]" Search="%[naics_code]" />
                                                                                        <Sequence DisplayName="replace negotiator" sap2010:WorkflowViewState.IdRef="Sequence_277">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="person" />
                                                                                          </Sequence.Variables>
                                                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep Negotiators for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_29" Values="[negotiatorList]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="negaotiator replace" sap2010:WorkflowViewState.IdRef="Sequence_276">
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_183">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[person + Environment.NewLine + item.ToString+Environment.NewLine]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <If Condition="[person.ToString.Length &gt;= 255]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_55">
                                                                                            <If.Then>
                                                                                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                <ui:InvokeWorkflowFile.Arguments>
                                                                                                  <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">[negotiator_administrators], [negotiator_title], authorized to Negotiate and Sign on behalf of contractor.</InArgument>
                                                                                                  <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                                  <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                </ui:InvokeWorkflowFile.Arguments>
                                                                                              </ui:InvokeWorkflowFile>
                                                                                            </If.Then>
                                                                                            <If.Else>
                                                                                              <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_52" Replace="[person]" Search="[negotiator_administrators], [negotiator_title], authorized to Negotiate and Sign on behalf of contractor." />
                                                                                            </If.Else>
                                                                                          </If>
                                                                                        </Sequence>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_184">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[completionMonth+"/"+completionDay + "/" + completionYear]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_53" Replace="[Date.Parse(completionDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[completion_date]" />
                                                                                        <Sequence DisplayName="replace SIN info" sap2010:WorkflowViewState.IdRef="Sequence_280">
                                                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep negostiator for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_30" Values="[sinInfo]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_279">
                                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_27" Text="TO DO:&#xA;&#xA;remove comment code" />
                                                                                                  <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                                                                                    <ui:CommentOut.Body>
                                                                                                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_278">
                                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_54" Replace="[item.ToString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                      </Sequence>
                                                                                                    </ui:CommentOut.Body>
                                                                                                  </ui:CommentOut>
                                                                                                  <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_56">
                                                                                                    <If.Then>
                                                                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                        <ui:InvokeWorkflowFile.Arguments>
                                                                                                          <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[Sin_info]</InArgument>
                                                                                                          <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[item.ToString+Environment.NewLine +"[SIN_info]"]</InArgument>
                                                                                                          <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                        </ui:InvokeWorkflowFile.Arguments>
                                                                                                      </ui:InvokeWorkflowFile>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_55" Replace="[item.toString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_28" Text="// remove the last replacement characters" />
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_56" Search="%[Sin_info]">
                                                                                            <p1:WordReplaceText.Replace>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </p1:WordReplaceText.Replace>
                                                                                          </p1:WordReplaceText>
                                                                                        </Sequence>
                                                                                      </Sequence>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </p1:WordApplicationScope.Body>
                                                                              </p1:WordApplicationScope>
                                                                            </Sequence>
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Info" Message="Completed updating Price-Neg Word template" />
                                                                          </Sequence>
                                                                          <ui:WriteRange AddHeaders="True" DataTable="[offerErrorTable]" DisplayName="Write Exception/errors to file" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[currentDirectory+&quot;/output/&quot;+id+&quot;.xlsx&quot;]">
                                                                            <ui:WriteRange.StartingCell>
                                                                              <InArgument x:TypeArguments="x:String">
                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                              </InArgument>
                                                                            </ui:WriteRange.StartingCell>
                                                                          </ui:WriteRange>
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_185">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">[totalFilesChecked]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">[totalFilesChecked + 1]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </TryCatch.Try>
                                                                      <TryCatch.Catches>
                                                                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_23">
                                                                          <ActivityAction x:TypeArguments="s:Exception">
                                                                            <ActivityAction.Argument>
                                                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                            </ActivityAction.Argument>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_286">
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_186">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Int32">[totalFilesChecked]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Int32">[totalFilesChecked + 1]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Error" Message="[&quot;Read/Write of file &quot;+id+&quot; failed.    &quot;+exception.Message]" />
                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, exception.Message, FILEERROR}]" DataTable="[errorTable]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                                                                            </Sequence>
                                                                          </ActivityAction>
                                                                        </Catch>
                                                                      </TryCatch.Catches>
                                                                    </TryCatch>
                                                                  </ActivityAction>
                                                                </ui:ForEach.Body>
                                                              </ui:ForEach>
                                                            </FlowStep>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowDecision.True>
                                                    </FlowDecision>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowDecision.False>
                                            </FlowDecision>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID13</x:Reference>
      <x:Reference>__ReferenceID14</x:Reference>
      <x:Reference>__ReferenceID15</x:Reference>
      <x:Reference>__ReferenceID16</x:Reference>
      <x:Reference>__ReferenceID17</x:Reference>
      <x:Reference>__ReferenceID18</x:Reference>
      <x:Reference>__ReferenceID19</x:Reference>
    </Flowchart>
    <sads:DebugSymbol.Symbol></sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_190" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_191" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_192" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_193" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_194" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_195" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_196" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_189" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_49" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_4" sap:VirtualizedContainerService.HintSize="314,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_289" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_47" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_187" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_287" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_188" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_48" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_288" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_24" sap:VirtualizedContainerService.HintSize="404,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_24" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_2" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="777,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="777,116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="777,132" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="777,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="777,60" />
      <sap2010:ViewStateData Id="LogMessage_53" sap:VirtualizedContainerService.HintSize="777,91" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="777,60" />
      <sap2010:ViewStateData Id="PathExists_1" sap:VirtualizedContainerService.HintSize="539,89" />
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="539,208" />
      <sap2010:ViewStateData Id="Sequence_176" sap:VirtualizedContainerService.HintSize="777,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_3" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="969,59" />
      <sap2010:ViewStateData Id="DeserializeXml_1" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="GetXMLNodeAttributes_1" sap:VirtualizedContainerService.HintSize="489,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="489,60" />
      <sap2010:ViewStateData Id="Assign_197" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_26" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_27" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_291" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Substring_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_57" sap:VirtualizedContainerService.HintSize="489,456" />
      <sap2010:ViewStateData Id="Sequence_177" sap:VirtualizedContainerService.HintSize="511,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="527,914">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_52" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_178" sap:VirtualizedContainerService.HintSize="336,615">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_179" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="969,1302">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_180" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="969,747">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_4" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_181" sap:VirtualizedContainerService.HintSize="336,298">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_3" sap:VirtualizedContainerService.HintSize="404,367">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_3" sap:VirtualizedContainerService.HintSize="969,737">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_5" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_182" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_1" sap:VirtualizedContainerService.HintSize="314,89" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_183" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="314,280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_184" sap:VirtualizedContainerService.HintSize="969,764">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_2" sap:VirtualizedContainerService.HintSize="547,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_185" sap:VirtualizedContainerService.HintSize="531,911">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="547,1045">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Sequence_186" sap:VirtualizedContainerService.HintSize="569,1598">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_5" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_187" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_188" sap:VirtualizedContainerService.HintSize="264,499">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_4" sap:VirtualizedContainerService.HintSize="404,568">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_4" sap:VirtualizedContainerService.HintSize="969,938" />
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="440,22" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="242,51" />
      <sap2010:ViewStateData Id="Sequence_189" sap:VirtualizedContainerService.HintSize="264,375">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_5" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_5" sap:VirtualizedContainerService.HintSize="418,706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_190" sap:VirtualizedContainerService.HintSize="440,830">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_191" sap:VirtualizedContainerService.HintSize="462,1116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_4" sap:VirtualizedContainerService.HintSize="478,1250">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_192" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="772,22" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="772,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="772,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="772,64" />
      <sap2010:ViewStateData Id="HttpClient_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_193" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_6" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_6" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_1" sap:VirtualizedContainerService.HintSize="772,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_3" sap:VirtualizedContainerService.HintSize="772,89" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_194" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="772,280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddDataRow_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_195" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_6" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="561,356" />
      <sap2010:ViewStateData Id="Sequence_196" sap:VirtualizedContainerService.HintSize="583,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="772,614">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_4" sap:VirtualizedContainerService.HintSize="314,89" />
      <sap2010:ViewStateData Id="Comment_7" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_197" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="314,418">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_198" sap:VirtualizedContainerService.HintSize="772,843">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_5" sap:VirtualizedContainerService.HintSize="772,89" />
      <sap2010:ViewStateData Id="Comment_8" sap:VirtualizedContainerService.HintSize="772,74" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="587,60" />
      <sap2010:ViewStateData Id="Comment_9" sap:VirtualizedContainerService.HintSize="549,170" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_65" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_199" sap:VirtualizedContainerService.HintSize="531,2120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_10" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="Catch`1_7" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_7" sap:VirtualizedContainerService.HintSize="549,2451" />
      <sap2010:ViewStateData Id="Sequence_200" sap:VirtualizedContainerService.HintSize="571,2785">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="587,2919" />
      <sap2010:ViewStateData Id="Sequence_201" sap:VirtualizedContainerService.HintSize="609,3143">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="734,3291">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_202" sap:VirtualizedContainerService.HintSize="756,3415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_9" sap:VirtualizedContainerService.HintSize="772,3549">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_203" sap:VirtualizedContainerService.HintSize="794,7530">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_204" sap:VirtualizedContainerService.HintSize="969,7654">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_14" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Delay_2" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="Assign_70" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="HttpClient_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_71" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_205" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_72" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_16" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_8" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_8" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_2" sap:VirtualizedContainerService.HintSize="542,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_6" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_74" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_75" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_9" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_10" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_206" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_17" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_207" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_10" sap:VirtualizedContainerService.HintSize="502,914" />
      <sap2010:ViewStateData Id="Sequence_208" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_9" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="542,1637">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_209" sap:VirtualizedContainerService.HintSize="969,3389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_76" sap:VirtualizedContainerService.HintSize="947,60" />
      <sap2010:ViewStateData Id="GetXMLNodeAttributes_2" sap:VirtualizedContainerService.HintSize="314,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="564,22" />
      <sap2010:ViewStateData Id="Delay_3" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_80" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="HttpClient_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_4" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_210" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_18" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_10" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_3" sap:VirtualizedContainerService.HintSize="542,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_7" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_84" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_85" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_86" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_11" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_12" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_211" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_19" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_212" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="502,914" />
      <sap2010:ViewStateData Id="Sequence_213" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_11" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_11" sap:VirtualizedContainerService.HintSize="542,1637" />
      <sap2010:ViewStateData Id="Sequence_214" sap:VirtualizedContainerService.HintSize="564,3389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_215" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,414.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_87" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="564,22" />
      <sap2010:ViewStateData Id="Delay_4" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="HttpClient_4" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_5" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_216" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_20" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_12" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_12" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_4" sap:VirtualizedContainerService.HintSize="542,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_8" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_95" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_96" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_13" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_14" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_217" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_21" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_218" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="502,914" />
      <sap2010:ViewStateData Id="Sequence_219" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_13" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_13" sap:VirtualizedContainerService.HintSize="542,1637" />
      <sap2010:ViewStateData Id="Sequence_220" sap:VirtualizedContainerService.HintSize="564,3389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_221" sap:VirtualizedContainerService.HintSize="586,3775">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274,577</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_11" sap:VirtualizedContainerService.HintSize="314,55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">533,512.5</av:Point>
            <av:Size x:Key="ShapeSize">314,55</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">425,376.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">425,420 374,420 374,577</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">495,420 690,420 690,512.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">295,276.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">295,320 220,320 220,414.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">365,320 460,320 460,376.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">173,160</av:Point>
            <av:Size x:Key="ShapeSize">314,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,220 330,276.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_12" sap:VirtualizedContainerService.HintSize="314,151">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">603,202.235</av:Point>
            <av:Size x:Key="ShapeSize">314,151</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="931,664">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">300,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,77.5 330,160</av:PointCollection>
            <x:Double x:Key="Width">917</x:Double>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="Height">628</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="947,798">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_222" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_97" sap:VirtualizedContainerService.HintSize="602,60" />
      <sap2010:ViewStateData Id="Assign_98" sap:VirtualizedContainerService.HintSize="602,60" />
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="602,60" />
      <sap2010:ViewStateData Id="Assign_100" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_22" sap:VirtualizedContainerService.HintSize="564,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_8" sap:VirtualizedContainerService.HintSize="564,22" />
      <sap2010:ViewStateData Id="LogMessage_21" sap:VirtualizedContainerService.HintSize="564,91" />
      <sap2010:ViewStateData Id="Delay_5" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_101" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_102" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_103" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_104" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="HttpClient_5" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_22" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="DeserializeXml_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_23" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="WriteTextFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_223" sap:VirtualizedContainerService.HintSize="336,866">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_106" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_23" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_14" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_14" sap:VirtualizedContainerService.HintSize="487,1453">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_5" sap:VirtualizedContainerService.HintSize="542,1615">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_9" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_107" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_108" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_109" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_15" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_16" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_224" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_225" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_14" sap:VirtualizedContainerService.HintSize="502,914">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_226" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_15" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_15" sap:VirtualizedContainerService.HintSize="542,1637" />
      <sap2010:ViewStateData Id="Sequence_227" sap:VirtualizedContainerService.HintSize="564,3882">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_228" sap:VirtualizedContainerService.HintSize="586,4547">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_15" sap:VirtualizedContainerService.HintSize="602,4681">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_229" sap:VirtualizedContainerService.HintSize="969,5105">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_26" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_110" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_111" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_112" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="603,91" />
      <sap2010:ViewStateData Id="Assign_113" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Comment_13" sap:VirtualizedContainerService.HintSize="314,131" />
      <sap2010:ViewStateData Id="StartProcess_1" sap:VirtualizedContainerService.HintSize="454,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetFullText_1" sap:VirtualizedContainerService.HintSize="314,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_114" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_115" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_116" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_230" sap:VirtualizedContainerService.HintSize="336,761">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_16" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_16" sap:VirtualizedContainerService.HintSize="418,1231">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_231" sap:VirtualizedContainerService.HintSize="440,1355">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_1" sap:VirtualizedContainerService.HintSize="454,1501">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CloseApplication_1" sap:VirtualizedContainerService.HintSize="454,106" />
      <sap2010:ViewStateData Id="Assign_118" sap:VirtualizedContainerService.HintSize="454,60" />
      <sap2010:ViewStateData Id="Break_1" sap:VirtualizedContainerService.HintSize="454,22" />
      <sap2010:ViewStateData Id="Sequence_232" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_16" sap:VirtualizedContainerService.HintSize="314,236">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_233" sap:VirtualizedContainerService.HintSize="336,631">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_119" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_25" sap:VirtualizedContainerService.HintSize="603,779">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_234" sap:VirtualizedContainerService.HintSize="625,1334">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_14" sap:VirtualizedContainerService.HintSize="603,74" />
      <sap2010:ViewStateData Id="Assign_120" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="StartProcess_2" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_121" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_122" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetFullText_2" sap:VirtualizedContainerService.HintSize="314,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_123" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_124" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_125" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_126" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_235" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_127" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_128" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_236" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_17" sap:VirtualizedContainerService.HintSize="404,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="418,490">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_237" sap:VirtualizedContainerService.HintSize="440,1315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_2" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CloseApplication_2" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_129" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Break_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_238" sap:VirtualizedContainerService.HintSize="336,810">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_17" sap:VirtualizedContainerService.HintSize="603,944">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_130" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_131" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="AddDataRow_17" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddDataRow_18" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_239" sap:VirtualizedContainerService.HintSize="336,539">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_132" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_26" sap:VirtualizedContainerService.HintSize="603,687">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_240" sap:VirtualizedContainerService.HintSize="625,2009">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="631,2078">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="645,3722">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_133" sap:VirtualizedContainerService.HintSize="788,60" />
      <sap2010:ViewStateData Id="Assign_134" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_27" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_241" sap:VirtualizedContainerService.HintSize="486,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_18" sap:VirtualizedContainerService.HintSize="788,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_135" sap:VirtualizedContainerService.HintSize="641,60" />
      <sap2010:ViewStateData Id="Assign_136" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_137" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_19" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_20" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_242" sap:VirtualizedContainerService.HintSize="264,370">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_15" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="If_28" sap:VirtualizedContainerService.HintSize="603,518">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_243" sap:VirtualizedContainerService.HintSize="625,742">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_19" sap:VirtualizedContainerService.HintSize="641,876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_244" sap:VirtualizedContainerService.HintSize="663,1100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_29" sap:VirtualizedContainerService.HintSize="788,1248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_245" sap:VirtualizedContainerService.HintSize="810,1978">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_246" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_34" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_138" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_139" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="468,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_140" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_30" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_141" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_142" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_20" sap:VirtualizedContainerService.HintSize="468,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_143" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_31" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_20" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_144" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_145" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_21" sap:VirtualizedContainerService.HintSize="468,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_146" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_32" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_21" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_147" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_148" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_22" sap:VirtualizedContainerService.HintSize="468,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_149" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_33" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_22" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Sequence_247" sap:VirtualizedContainerService.HintSize="991,29510">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_248" sap:VirtualizedContainerService.HintSize="777,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="777,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="613,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_16" sap:VirtualizedContainerService.HintSize="613,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Assign_150" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_151" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_152" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_34" sap:VirtualizedContainerService.HintSize="509,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_153" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_249" sap:VirtualizedContainerService.HintSize="531,431">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_20" sap:VirtualizedContainerService.HintSize="547,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_3" sap:VirtualizedContainerService.HintSize="547,87" />
      <sap2010:ViewStateData Id="Sequence_250" sap:VirtualizedContainerService.HintSize="569,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_4" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_5" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_6" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_7" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_8" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_9" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_10" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_11" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_12" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_13" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_14" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Comment_17" sap:VirtualizedContainerService.HintSize="569,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_15" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_16" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_17" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Assign_154" sap:VirtualizedContainerService.HintSize="569,60" />
      <sap2010:ViewStateData Id="Assign_155" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_156" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_35" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_251" sap:VirtualizedContainerService.HintSize="531,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_21" sap:VirtualizedContainerService.HintSize="569,464" />
      <sap2010:ViewStateData Id="ExcelWriteCell_18" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_19" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_20" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_21" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_22" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Assign_157" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_158" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_159" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_160" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_36" sap:VirtualizedContainerService.HintSize="509,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_161" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_252" sap:VirtualizedContainerService.HintSize="531,431">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_22" sap:VirtualizedContainerService.HintSize="547,564" />
      <sap2010:ViewStateData Id="ExcelWriteCell_23" sap:VirtualizedContainerService.HintSize="547,87" />
      <sap2010:ViewStateData Id="Sequence_253" sap:VirtualizedContainerService.HintSize="569,1015">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_162" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_163" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_164" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_37" sap:VirtualizedContainerService.HintSize="509,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_165" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_254" sap:VirtualizedContainerService.HintSize="531,431">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_23" sap:VirtualizedContainerService.HintSize="547,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_24" sap:VirtualizedContainerService.HintSize="547,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_255" sap:VirtualizedContainerService.HintSize="569,915">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_25" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_26" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Comment_18" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_27" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_256" sap:VirtualizedContainerService.HintSize="569,452">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_166" sap:VirtualizedContainerService.HintSize="569,60" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="569,154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_257" sap:VirtualizedContainerService.HintSize="591,6610">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_258" sap:VirtualizedContainerService.HintSize="613,6734">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="613,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_259" sap:VirtualizedContainerService.HintSize="635,7234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="777,7343">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_39" sap:VirtualizedContainerService.HintSize="777,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_167" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="PathExists_2" sap:VirtualizedContainerService.HintSize="711,89" />
      <sap2010:ViewStateData Id="Comment_19" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_38" sap:VirtualizedContainerService.HintSize="711,208" />
      <sap2010:ViewStateData Id="LogMessage_40" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="CopyFile_1" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="LogMessage_41" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Delay_6" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="Assign_168" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="WordReplaceText_1" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_2" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_57" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_58" sap:VirtualizedContainerService.HintSize="675,207" />
      <sap2010:ViewStateData Id="WordReplaceText_4" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_5" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_6" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_7" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_8" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_39" sap:VirtualizedContainerService.HintSize="653,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_10" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_11" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_12" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_13" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="WordReplaceText_14" sap:VirtualizedContainerService.HintSize="653,59" />
      <sap2010:ViewStateData Id="Comment_20" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="AddDataRow_21" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddDataRow_22" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_260" sap:VirtualizedContainerService.HintSize="336,303">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_15" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="If_40" sap:VirtualizedContainerService.HintSize="653,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_261" sap:VirtualizedContainerService.HintSize="675,1712">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_16" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_17" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_41" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_169" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_170" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_171" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_42" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_262" sap:VirtualizedContainerService.HintSize="531,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_24" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_18" sap:VirtualizedContainerService.HintSize="675,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_19" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_20" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Assign_172" sap:VirtualizedContainerService.HintSize="653,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_21" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="653,235" />
      <sap2010:ViewStateData Id="Sequence_263" sap:VirtualizedContainerService.HintSize="675,459">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_25" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_21" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="WordReplaceText_22" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_264" sap:VirtualizedContainerService.HintSize="675,369">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_173" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_265" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_26" sap:VirtualizedContainerService.HintSize="287,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_23" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_44" sap:VirtualizedContainerService.HintSize="287,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_266" sap:VirtualizedContainerService.HintSize="675,532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_24" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_25" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_22" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="AddDataRow_23" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddDataRow_24" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_267" sap:VirtualizedContainerService.HintSize="336,303">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_26" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_45" sap:VirtualizedContainerService.HintSize="675,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_174" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WordReplaceText_27" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_23" sap:VirtualizedContainerService.HintSize="653,94" />
      <sap2010:ViewStateData Id="WordReplaceText_28" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_268" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="653,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_29" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_46" sap:VirtualizedContainerService.HintSize="653,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_269" sap:VirtualizedContainerService.HintSize="675,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_27" sap:VirtualizedContainerService.HintSize="691,717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_24" sap:VirtualizedContainerService.HintSize="691,55" />
      <sap2010:ViewStateData Id="WordReplaceText_30" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="Sequence_270" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_42" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="WordReplaceText_31" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_32" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Assign_175" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Comment_25" sap:VirtualizedContainerService.HintSize="675,74" />
      <sap2010:ViewStateData Id="Assign_176" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WordReplaceText_33" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_34" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_47" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_35" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_36" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_48" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_37" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_49" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_38" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_50" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_39" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_51" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_271" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_40" sap:VirtualizedContainerService.HintSize="675,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_41" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_42" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_52" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_43" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_44" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_45" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_26" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="Assign_177" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_53" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_46" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="SendHotkey_3" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="WordInsertDataTable_1" sap:VirtualizedContainerService.HintSize="314,66" />
      <sap2010:ViewStateData Id="Sequence_272" sap:VirtualizedContainerService.HintSize="675,502">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_273" sap:VirtualizedContainerService.HintSize="697,6954">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_1" sap:VirtualizedContainerService.HintSize="711,7063">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_274" sap:VirtualizedContainerService.HintSize="777,8150">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_43" sap:VirtualizedContainerService.HintSize="777,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_44" sap:VirtualizedContainerService.HintSize="755,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_178" sap:VirtualizedContainerService.HintSize="733,60" />
      <sap2010:ViewStateData Id="PathExists_3" sap:VirtualizedContainerService.HintSize="733,89" />
      <sap2010:ViewStateData Id="CopyFile_2" sap:VirtualizedContainerService.HintSize="733,22" />
      <sap2010:ViewStateData Id="Delay_7" sap:VirtualizedContainerService.HintSize="733,22" />
      <sap2010:ViewStateData Id="Assign_179" sap:VirtualizedContainerService.HintSize="733,60" />
      <sap2010:ViewStateData Id="WordReplaceText_47" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_48" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_58" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_59" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_59" sap:VirtualizedContainerService.HintSize="675,207" />
      <sap2010:ViewStateData Id="WordReplaceText_50" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Assign_180" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_181" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_182" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_54" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_275" sap:VirtualizedContainerService.HintSize="531,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_28" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_51" sap:VirtualizedContainerService.HintSize="675,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_183" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_276" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_29" sap:VirtualizedContainerService.HintSize="653,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_4" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_52" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_55" sap:VirtualizedContainerService.HintSize="653,234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_277" sap:VirtualizedContainerService.HintSize="675,715">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_184" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WordReplaceText_53" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_27" sap:VirtualizedContainerService.HintSize="653,94" />
      <sap2010:ViewStateData Id="WordReplaceText_54" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_278" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_3" sap:VirtualizedContainerService.HintSize="653,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_55" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_56" sap:VirtualizedContainerService.HintSize="653,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_279" sap:VirtualizedContainerService.HintSize="675,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_30" sap:VirtualizedContainerService.HintSize="691,717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_28" sap:VirtualizedContainerService.HintSize="691,55" />
      <sap2010:ViewStateData Id="WordReplaceText_56" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="Sequence_280" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_281" sap:VirtualizedContainerService.HintSize="697,1963">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_282" sap:VirtualizedContainerService.HintSize="719,2087">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_2" sap:VirtualizedContainerService.HintSize="733,2196">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_283" sap:VirtualizedContainerService.HintSize="755,2773">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_45" sap:VirtualizedContainerService.HintSize="755,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_284" sap:VirtualizedContainerService.HintSize="777,3159">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteRange_1" sap:VirtualizedContainerService.HintSize="777,115" />
      <sap2010:ViewStateData Id="Assign_185" sap:VirtualizedContainerService.HintSize="777,60" />
      <sap2010:ViewStateData Id="Sequence_285" sap:VirtualizedContainerService.HintSize="799,20576">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_186" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_46" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_25" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_286" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_23" sap:VirtualizedContainerService.HintSize="803,446">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_23" sap:VirtualizedContainerService.HintSize="817,21806">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_31" sap:VirtualizedContainerService.HintSize="833,21967">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">690,674.5</av:Point>
            <av:Size x:Key="ShapeSize">200,138</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">460,1210 139,1210 139,830 169,830</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">690,516</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">790,624 790,674.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="111,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">930.641666666667,336.5</av:Point>
            <av:Size x:Key="ShapeSize">111,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">930.641666666667,380 790,380 790,516</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">801.641666666667,1120 831.641666666667,1120 831.641666666667,984.5 180,984.5 180,890 290,890 290,860</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">740,274.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">940,300 986.141666666667,300 986.141666666667,336.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="107,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">495,256.5</av:Point>
            <av:Size x:Key="ShapeSize">107,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">602,300 740,300</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">255,1040 139,1040 139,830 169,830</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">450,164.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">550,215.5 550,245.5 548.5,245.5 548.5,256.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">70,714.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">270,740 370,740 370,190 450,190</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_10">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,640</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,700 170,700 170,714.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,540</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,600 171,640</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,440</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,500 171,540</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_13">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,370</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,430 171,440</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_14">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,300</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,360 171,370</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,230</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,290 171,300</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">50,160</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">171,220 171,230</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="1154,1272">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">1140</x:Double>
            <x:Double x:Key="Height">1235.5</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 171,107.5 171,160</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_175" sap:VirtualizedContainerService.HintSize="1176,1438">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ProcessTransaction_1" sap:VirtualizedContainerService.HintSize="1216,1518">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>