<Activity mc:Ignorable="sap sap2010 sads" x:Class="MainFlowchart" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="MainFlowchart_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sn="clr-namespace:System.Net;assembly=System"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Web.Mail</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="MainFlowchart" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="id" />
      <Variable x:TypeArguments="s:String[]" Name="filenames" />
      <Variable x:TypeArguments="x:String" Name="samUserName" />
      <Variable x:TypeArguments="x:String" Name="samPassword" />
      <Variable x:TypeArguments="x:String" Name="buttonChoice" />
      <Variable x:TypeArguments="ss:SecureString" Name="password" />
      <Variable x:TypeArguments="ss:SecureString" Name="secureWord" />
      <Variable x:TypeArguments="x:Int32" Default="2" Name="baseRowNumber" />
      <Variable x:TypeArguments="x:String" Default="A Certification Error" Name="CERTERROR" />
      <Variable x:TypeArguments="x:String" Default="Exclusion" Name="EXCLUSIONERROR" />
      <Variable x:TypeArguments="x:String" Default="Error reading/writing file(s)" Name="FILEERROR" />
      <Variable x:TypeArguments="sd:DataTable" Name="errorTable" />
      <Variable x:TypeArguments="x:String" Name="DUNSNumber" />
      <Variable x:TypeArguments="x:String" Name="companyName" />
      <Variable x:TypeArguments="s:String[]" Name="directories" />
      <Variable x:TypeArguments="x:String" Default="\\E04BMV-CIFS02.ent.ds.gsa.gov\R02_FSS_Shares$\Files\Shares\TrumanRPA\" Name="baseDirectory" />
      <Variable x:TypeArguments="x:String" Name="currentDirectory" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="currentDirNum" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="totalFilesChecked" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)()]" Name="NAICSCodeList" />
      <Variable x:TypeArguments="x:Boolean" Name="outputDirExists" />
      <Variable x:TypeArguments="x:Boolean" Name="loginError" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)()]" Name="configDictionary" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:00:02" Name="mediumDelaySpan" />
      <Variable x:TypeArguments="x:String" Name="returnEmail" />
      <Variable x:TypeArguments="x:String" Name="emailName" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_2">
        <ui:MessageBox Caption="{x:Null}" Buttons="YesNo" ChosenButton="[buttonChoice]" DisplayName="indication to start the process" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="Begin processing of ORDs?" TopMost="True" />
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID17" Condition="[buttonChoice = &quot;Yes&quot;]" DisplayName="Continue?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID22" sap2010:WorkflowViewState.IdRef="FlowStep_53">
                <Sequence DisplayName="SAM login - password" sap2010:WorkflowViewState.IdRef="Sequence_465">
                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_181" Text="The login and password are beingobtained from the user at this time. Until we can store this information in a secure location (i.e. Orchestrator) while running in a VDI environment, this is the only way to make sure the password is encrypted." />
                  <ui:InputDialog Options="{x:Null}" DisplayName="User Name Input dialog" sap2010:WorkflowViewState.IdRef="InputDialog_10" IsPassword="False" Label="User Name" Title="User Name">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[samUserName]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <ui:InputDialog Options="{x:Null}" DisplayName=" Password Input dialog" sap2010:WorkflowViewState.IdRef="InputDialog_9" IsPassword="True" Label="Password" Title="Password">
                    <ui:InputDialog.Result>
                      <OutArgument x:TypeArguments="x:String">[samPassword]</OutArgument>
                    </ui:InputDialog.Result>
                  </ui:InputDialog>
                  <Sequence DisplayName="encrypt Password" sap2010:WorkflowViewState.IdRef="Sequence_466">
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="secureWord = New System.Security.SecureString&#xA;For Each character As Char In word.ToCharArray&#xA;secureWord.AppendChar(character)&#xA;Next&#xA;secureWord.MakeReadOnly()" DisplayName="Invoke Code" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="word">[samPassword]</InArgument>
                        <OutArgument x:TypeArguments="ss:SecureString" x:Key="secureWord">[secureWord]</OutArgument>
                      </ui:InvokeCode.Arguments>
                    </ui:InvokeCode>
                    <Assign DisplayName="clear variable" sap2010:WorkflowViewState.IdRef="Assign_772">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[samPassword]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[NOTHING]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID27" sap2010:WorkflowViewState.IdRef="FlowStep_89">
                    <Sequence DisplayName="SOAP-HTTP Login check" sap2010:WorkflowViewState.IdRef="Sequence_723">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                        <Variable x:TypeArguments="x:String" Name="soapResult" />
                        <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                        <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                        <Variable x:TypeArguments="x:Object" Name="pathResult" />
                        <Variable x:TypeArguments="ui:GenericValue" Name="tryCount" />
                        <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)()]" Name="SamNAICSCodeList" />
                      </Sequence.Variables>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1418">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1399">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:getEntities&gt;"+System.Environment.NewLine+
"         &lt;authenticationKey&gt;"+System.Environment.NewLine+
"            &lt;userID&gt;"+samUserName+"&lt;/userID&gt;"+System.Environment.NewLine+
"            &lt;password&gt;"+New NetworkCredential(String.Empty, secureWord).Password+"&lt;/password&gt;"+System.Environment.NewLine+
"         &lt;/authenticationKey&gt;"+System.Environment.NewLine+
"         &lt;entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;/entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;requestedData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"           &lt;coreData&gt;Y&lt;/coreData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;assertions&gt;Y&lt;/assertions&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;repsAndCerts&gt;Y&lt;/repsAndCerts&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;pointsOfContact&gt;Y&lt;/pointsOfContact&gt;"+System.Environment.NewLine+
"         &lt;/requestedData&gt;"+System.Environment.NewLine+
"      &lt;/sam:getEntities&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_111">
                        <TryCatch.Try>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_725">
                            <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/Entity" sap2010:WorkflowViewState.IdRef="HttpClient_31" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                              <ui:HttpClient.Attachments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Attachments>
                              <ui:HttpClient.Cookies>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Cookies>
                              <ui:HttpClient.Headers>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Headers>
                              <ui:HttpClient.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Parameters>
                              <ui:HttpClient.UrlSegments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.UrlSegments>
                            </ui:HttpClient>
                            <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_37" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                            <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Check for Errors" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_31" Result="[pathResult]" XPathExpression="//Error" />
                            <If Condition="[Ctype(pathResult, IEnumerable(of Object)).Count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_330">
                              <If.Then>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1419">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                            <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Check transaction Message" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_32" Result="[pathResult]" XPathExpression="//transactionMessage" />
                            <If Condition="[Ctype(pathResult, IEnumerable(of Object)).First.ToString.Contains(&quot;Error&quot;)]" sap2010:WorkflowViewState.IdRef="If_331">
                              <If.Then>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1421">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                            </If>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_113">
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_726">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1420">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Fatal" Message="[&quot;Execution stopping due to SAM login issue. : &quot;+exception.Message]" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowDecision x:Name="__ReferenceID28" Condition="[loginError]" DisplayName="login error?" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
                        <FlowDecision.True>
                          <FlowStep x:Name="__ReferenceID29" sap2010:WorkflowViewState.IdRef="FlowStep_91">
                            <Sequence DisplayName="SAM error, stop" sap2010:WorkflowViewState.IdRef="Sequence_727">
                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="Authentication Error when trying to login to SAM.gov" TopMost="True" />
                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Fatal" Message="Execution stopping due to SAM login issue." />
                            </Sequence>
                          </FlowStep>
                        </FlowDecision.True>
                        <FlowDecision.False>
                          <FlowStep x:Name="__ReferenceID30" sap2010:WorkflowViewState.IdRef="FlowStep_95">
                            <Sequence sap2010:Annotation.AnnotationText="This is a temporary solution until this process is moved fully over to either the Re-Framerk or some variation of the Re-Framework.&#xA;&#xA;This will prepare teh process for use with Orchstrator&#xA;" DisplayName="Set up config data" sap2010:WorkflowViewState.IdRef="Sequence_768">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Default="config.xlsx" Name="configFile" />
                                <Variable x:TypeArguments="s:String[]" Default="[{&quot;Settings&quot;,&quot;Constants&quot;,&quot;Assets&quot;}]" Name="configSheets" />
                              </Sequence.Variables>
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="InitAllSettings.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[configFile]</InArgument>
                                  <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[configSheets]</InArgument>
                                  <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[configDictionary]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1454">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[baseDirectory]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[configDictionary("shareDrive").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1455">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[CERTERROR]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[configDictionary("certificationError_message").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1456">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[EXCLUSIONERROR]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[configDictionary("exclusionError_message").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1457">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[FILEERROR]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[configDictionary("fileError_message").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1460">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:TimeSpan">[mediumDelaySpan]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.Parse(configDictionary("MediumTimeSpan").ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1461">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[returnEmail]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[configDictionary("fromEmailAddress").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1462">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[emailName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[configDictionary("emailName").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID20" sap2010:WorkflowViewState.IdRef="FlowStep_36">
                                <ui:BuildDataTable sap2010:Annotation.AnnotationText="Table of anny issues found while reading the files, searching SAM, etc." DataTable="[errorTable]" DisplayName="Build Error Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DUNS&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Person&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorType&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID25" sap2010:WorkflowViewState.IdRef="FlowStep_71">
                                    <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="create the excel sheet and add the heaaders to it." DisplayName="create excel headers" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" Visible="False" WorkbookPath="[baseDirectory + &quot;offer-letter-records.xlsx&quot;]">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Store all info in Excel" sap2010:WorkflowViewState.IdRef="Sequence_518">
                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_190" Text="// This section is a work in progress. It needs to be vetted by the customer for completion." />
                                            <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_517">
                                              <Sequence DisplayName="write Headers" sap2010:WorkflowViewState.IdRef="Sequence_516">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:String" Name="scopeOfContract" />
                                                </Sequence.Variables>
                                                <ui:ExcelWriteCell Cell="A1" DisplayName="Store Solicitation number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_197" SheetName="Sheet1" Text="Solicitation Number" />
                                                <ui:ExcelWriteCell Cell="B1" DisplayName="Store refrech number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_198" SheetName="Sheet1" Text="Solicitation Refresh" />
                                                <ui:ExcelWriteCell Cell="C1" DisplayName="Store refrech number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_199" SheetName="Sheet1" Text="Negotiators" />
                                                <ui:ExcelWriteCell Cell="D1" DisplayName="Store DUNS" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_200" SheetName="Sheet1" Text="DUNS" />
                                                <ui:ExcelWriteCell Cell="E1" DisplayName="Store Completion Date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_201" SheetName="Sheet1" Text="Completion Date" />
                                                <ui:ExcelWriteCell Cell="F1" DisplayName="Store Completion Time" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_202" SheetName="Sheet1" Text="Completion Time" />
                                                <ui:ExcelWriteCell Cell="G1" DisplayName="Store Company Name" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_203" SheetName="Sheet1" Text="Company Name" />
                                                <ui:ExcelWriteCell Cell="H1" DisplayName="Store Company Street" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_204" SheetName="Sheet1" Text="Compnay Address" />
                                                <ui:ExcelWriteCell Cell="I1" DisplayName="Store Comapny Suite" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_205" SheetName="Sheet1" Text="Company Suite" />
                                                <ui:ExcelWriteCell Cell="J1" DisplayName="Store Company City" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_206" SheetName="Sheet1" Text="Company City" />
                                                <ui:ExcelWriteCell Cell="K1" DisplayName="Store Company State" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_207" SheetName="Sheet1" Text="Company State" />
                                                <ui:ExcelWriteCell Cell="L1" DisplayName="Store Company zip" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_208" SheetName="Sheet1" Text="Company Zip" />
                                                <ui:ExcelWriteCell Cell="M1" DisplayName="Store Company phone" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_209" SheetName="Sheet1" Text="Company Phone" />
                                                <ui:ExcelWriteCell Cell="N1" DisplayName="Store Company Fax" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_210" SheetName="Sheet1" Text="Compnay Fax" />
                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_191" Text="// @TODO: This is a dupe, what should be here or just remove it?" />
                                                <ui:ExcelWriteCell Cell="O1" DisplayName="Store DUNS (again?)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_211" SheetName="Sheet1" Text="DUNS" />
                                                <ui:ExcelWriteCell Cell="P1" DisplayName="Store TIN" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_212" SheetName="Sheet1" Text="TIN" />
                                                <ui:ExcelWriteCell Cell="Q1" DisplayName="Store Parent Company" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_213" SheetName="Sheet1" Text="Parent Company" />
                                                <ui:ExcelWriteCell Cell="R1" DisplayName="Store NAISC" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_214" SheetName="Sheet1" Text="NAICS" />
                                                <ui:ExcelWriteCell Cell="S1" DisplayName="Store Business &quot;size&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_215" SheetName="Sheet1" Text="Business Size" />
                                                <ui:ExcelWriteCell Cell="T1" DisplayName="Store business &quot;type&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_216" SheetName="Sheet1" Text="Business Type" />
                                                <ui:ExcelWriteCell Cell="U1" DisplayName="Store Contract Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_217" SheetName="Sheet1" Text="Estimated Contract Value" />
                                                <ui:ExcelWriteCell Cell="V1" DisplayName="Store Options Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_218" SheetName="Sheet1" Text="Options Value" />
                                                <ui:ExcelWriteCell Cell="W1" DisplayName="Store Administrator(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_219" SheetName="Sheet1" Text="Contract Admins" />
                                                <ui:ExcelWriteCell Cell="X1" DisplayName="Store IFF admin" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_220" SheetName="Sheet1" Text="IFF Admins" />
                                                <ui:ExcelWriteCell Cell="Y1" DisplayName="Store SAM exp. date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_221" SheetName="Sheet1" Text="SAM Expiration Date" />
                                                <ui:ExcelWriteCell Cell="Z1" DisplayName="Store scope" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_222" SheetName="Sheet1" Text="Contract Scope" />
                                                <ui:ExcelWriteCell Cell="AA1" DisplayName="Store SIN(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_223" SheetName="Sheet1" Text="SIN" />
                                                <ui:ExcelWriteCell Cell="AB1" DisplayName="Store SIN description" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_224" SheetName="Sheet1" Text="SIN Description" />
                                              </Sequence>
                                            </Sequence>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                    </ui:ExcelApplicationScope>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID24" sap2010:WorkflowViewState.IdRef="FlowStep_68">
                                        <Assign DisplayName="get all directories" sap2010:WorkflowViewState.IdRef="Assign_1068">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:String[]">[directories]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:String[]">[Directory.GetDirectories(baseDirectory)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <FlowStep.Next>
                                          <FlowDecision x:Name="__ReferenceID0" Condition="[currentDirNum &lt; directories.Length]" DisplayName="more directories?" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                                            <FlowDecision.True>
                                              <FlowStep x:Name="__ReferenceID23" sap2010:WorkflowViewState.IdRef="FlowStep_67">
                                                <Sequence DisplayName="Get current Dir" sap2010:WorkflowViewState.IdRef="Sequence_512">
                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1066">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[currentDirectory]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">[directories(currentDirNum)]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Obtained directory: &quot;+currentDirectory]" />
                                                  <ui:PathExists DisplayName="output folder exists?" Exists="[outputDirExists]" sap2010:WorkflowViewState.IdRef="PathExists_7" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                </Sequence>
                                                <FlowStep.Next>
                                                  <FlowDecision x:Name="__ReferenceID26" Condition="[outputDirExists]" DisplayName="Already Processed?" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
                                                    <FlowDecision.True>
                                                      <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_88">
                                                        <Assign DisplayName="Next Directory" sap2010:WorkflowViewState.IdRef="Assign_1383">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[currentDirNum]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[currentDirNum + 1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <FlowStep.Next>
                                                          <x:Reference>__ReferenceID0</x:Reference>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowDecision.True>
                                                    <FlowDecision.False>
                                                      <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                                                        <TryCatch DisplayName="Get File Names" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                                                          <TryCatch.Try>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_710">
                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;looking at &quot;+currentDirectory]" />
                                                              <Assign DisplayName="Retrieve the XML file filenames" sap2010:WorkflowViewState.IdRef="Assign_123">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentDirectory,"Offer*.xml")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </TryCatch.Try>
                                                          <TryCatch.Catches>
                                                            <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                                                              <ActivityAction x:TypeArguments="s:Exception">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_709">
                                                                  <Assign DisplayName="Retrieve the XML file filenames" sap2010:WorkflowViewState.IdRef="Assign_1069">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="s:String[]">[{""}]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Warn" Message="[&quot;No files found in &quot;+currentDirectory]" />
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </Catch>
                                                          </TryCatch.Catches>
                                                        </TryCatch>
                                                        <FlowStep.Next>
                                                          <FlowDecision x:Name="__ReferenceID31" Condition="[filenames.Count &gt; 0]" DisplayName="find any file names?" sap2010:WorkflowViewState.IdRef="FlowDecision_11">
                                                            <FlowDecision.True>
                                                              <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_28">
                                                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="To keep from making the variable visible to the entire workflow, the read and write are combined into one sequence" DisplayName="loop through XML files" sap2010:WorkflowViewState.IdRef="ForEach`1_82" Values="[filenames]">
                                                                  <ui:ForEach.Body>
                                                                    <ActivityAction x:TypeArguments="x:Object">
                                                                      <ActivityAction.Argument>
                                                                        <DelegateInArgument x:TypeArguments="x:Object" Name="offerFile" />
                                                                      </ActivityAction.Argument>
                                                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_84">
                                                                        <TryCatch.Try>
                                                                          <Sequence DisplayName="Read/Write Sequence" sap2010:WorkflowViewState.IdRef="Sequence_413">
                                                                            <Sequence.Variables>
                                                                              <Variable x:TypeArguments="x:String" Name="subcontractingPlan" />
                                                                              <Variable x:TypeArguments="x:String" Name="basePeriodOptionsValue" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessSize" />
                                                                              <Variable x:TypeArguments="scg:List(x:String)" Name="contractAdmins" />
                                                                              <Variable x:TypeArguments="x:String" Name="refreshNumber" />
                                                                              <Variable x:TypeArguments="x:String" Name="solicitationNumber" />
                                                                              <Variable x:TypeArguments="x:String" Name="tin" />
                                                                              <Variable x:TypeArguments="x:String" Name="NAICSCode" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessType" />
                                                                              <Variable x:TypeArguments="x:String" Name="estimatedContractValue" />
                                                                              <Variable x:TypeArguments="scg:List(x:String)" Name="negotiatorList" />
                                                                              <Variable x:TypeArguments="x:String" Name="pathwayCertInfo" />
                                                                              <Variable x:TypeArguments="x:String" Name="disasterRecoverPurchase" />
                                                                              <Variable x:TypeArguments="x:String" Name="completionDate" />
                                                                              <Variable x:TypeArguments="x:String" Name="completionTime" />
                                                                              <Variable x:TypeArguments="x:Boolean" Default="False" Name="dunsExclusion" />
                                                                              <Variable x:TypeArguments="x:Boolean" Default="False" Name="personExclusion" />
                                                                              <Variable x:TypeArguments="x:String" Name="offerControlNumber" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessStreet" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessSuite" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessCity" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessState" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessZipcode" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessPhone" />
                                                                              <Variable x:TypeArguments="x:String" Name="businessFax" />
                                                                              <Variable x:TypeArguments="x:String" Name="IFFAdministrator" />
                                                                              <Variable x:TypeArguments="x:String" Name="SAMExpirationDate" />
                                                                              <Variable x:TypeArguments="x:String" Name="offerDate" />
                                                                              <Variable x:TypeArguments="x:String" Name="parentCompany" />
                                                                              <Variable x:TypeArguments="x:String" Name="completionMonth" />
                                                                              <Variable x:TypeArguments="x:String" Name="completionDay" />
                                                                              <Variable x:TypeArguments="x:String" Name="completionYear" />
                                                                              <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="sinInfo" />
                                                                              <Variable x:TypeArguments="x:String" Name="coopPurchase" />
                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="memorandumFilepath" />
                                                                              <Variable x:TypeArguments="x:String" Name="pathwayPerson" />
                                                                              <Variable x:TypeArguments="x:String" Name="exceptionsToTermsAndConditions" />
                                                                              <Variable x:TypeArguments="x:String" Name="minOrderLimit" />
                                                                              <Variable x:TypeArguments="x:String" Name="subKplan" />
                                                                              <Variable x:TypeArguments="sd:DataTable" Name="offerErrorTable" />
                                                                              <Variable x:TypeArguments="x:String" Name="fullNameList" />
                                                                              <Variable x:TypeArguments="x:Int32" Name="nameCount" />
                                                                            </Sequence.Variables>
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="Begin reading in file(s)" />
                                                                            <ui:BuildDataTable sap2010:Annotation.AnnotationText="Table of any issues found while reading the files, searching SAM, etc.&#xA;This table is for each individual offer." DataTable="[offerErrorTable]" DisplayName="Build Error Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DUNS&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Person&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorType&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_104" Text="// try to read and write the information.&#xA;&#xA;A failure at anypoint should temintate the processing of this file and continue on to the next&#xA;" />
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_795">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Boolean">[dunsExclusion]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_796">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <Assign DisplayName="filename identifier" sap2010:WorkflowViewState.IdRef="Assign_1388">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:String">[id]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:String">[currentDirectory.ToString.Substring(baseDirectory.Length, currentDirectory.Length - baseDirectory.Length)]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <Sequence DisplayName="create output directory" sap2010:WorkflowViewState.IdRef="Sequence_519">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="x:Boolean" Name="outputDirExsits" />
                                                                              </Sequence.Variables>
                                                                              <ui:PathExists DisplayName="Path exists" Exists="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                                              <If Condition="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="If_274">
                                                                                <If.Then>
                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_192" Text="Do nothing" />
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[currentDirectory+&quot;/output&quot;]" />
                                                                                </If.Else>
                                                                              </If>
                                                                            </Sequence>
                                                                            <Sequence DisplayName="Read Sequence" sap2010:WorkflowViewState.IdRef="Sequence_393">
                                                                              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_105" Text="// start the review list. First element will be documnet identifier" />
                                                                              <Sequence DisplayName="Gather Info from XML and SAM" sap2010:WorkflowViewState.IdRef="Sequence_392">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="sxl:XDocument" Name="xmlDocumentOutput" />
                                                                                  <Variable x:TypeArguments="x:String" Name="tempDate" />
                                                                                  <Variable x:TypeArguments="x:String" Name="xmlOutput" />
                                                                                  <Variable x:TypeArguments="scg:IEnumerable(sxl:XAttribute)" Name="contractAdminAttrib" />
                                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="decimalLocation" />
                                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="estCost" />
                                                                                  <Variable x:TypeArguments="scg:List(x:String)" Name="negotiatorNameList" />
                                                                                  <Variable x:TypeArguments="x:String" Name="tempPWdate" />
                                                                                </Sequence.Variables>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_42" Level="Trace" Message="[&quot;reading in file &quot;+offerFile.ToString]" />
                                                                                <ui:ReadTextFile Content="[xmlOutput]" DisplayName="Read text file" FileName="[offerFile.ToString]" sap2010:WorkflowViewState.IdRef="ReadTextFile_7" />
                                                                                <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_28" XMLDocument="[xmlDocumentOutput]" XMLString="[xmlOutput]" />
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_49" Level="Trace" Message="XML deserialized" />
                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="extract offer date" sap2010:WorkflowViewState.IdRef="ForEach`1_70" Values="[xmlDocumentOutput.Elements(&quot;Offers&quot;)]">
                                                                                  <ui:ForEach.Body>
                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_354">
                                                                                        <ui:GetXMLNodeAttributes Attributes="[contractAdminAttrib]" DisplayName="Get XML node attributes" ExistingXMLNode="[item]" sap2010:WorkflowViewState.IdRef="GetXMLNodeAttributes_19" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_597">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[tempDate]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[item.Attribute("offerLastUpdateDate").Value.ToString]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <p:Substring DisplayName="extract offer date" sap2010:WorkflowViewState.IdRef="Substring_7" Input="[tempDate]" Result="[offerDate]" StartIndex="0" Length="10" />
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </ui:ForEach.Body>
                                                                                </ui:ForEach>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Trace" Message="Got Offer Date" />
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_598">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[offerControlNumber]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("ControlID").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign DisplayName="Solicitation Number" sap2010:WorkflowViewState.IdRef="Assign_599">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[solicitationNumber]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("SolicitNumber").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign DisplayName="Refresh Number" sap2010:WorkflowViewState.IdRef="Assign_600">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[refreshNumber]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("SolicitRefresh").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <Assign DisplayName="DUNS Number" sap2010:WorkflowViewState.IdRef="Assign_601">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[DUNSNumber]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("DunsNumber").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Trace" Message="Got offer Numbers" />
                                                                                <TryCatch DisplayName="Retrieve Completion Date value" sap2010:WorkflowViewState.IdRef="TryCatch_72">
                                                                                  <TryCatch.Try>
                                                                                    <Sequence DisplayName="parse XML for Date" sap2010:WorkflowViewState.IdRef="Sequence_355">
                                                                                      <Assign DisplayName="Completion Date" sap2010:WorkflowViewState.IdRef="Assign_602">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("offerLastUpdateDate").Value.ToString.Substring(0,10)]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_603">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[completionMonth]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[completionDate.Substring(8,2)]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_604">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[completionDay]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[completionDate.Substring(5,2)]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_605">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[completionYear]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[completionDate.Substring(0,4)]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </Sequence>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_73">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_356">
                                                                                          <Assign DisplayName="completion date blank" sap2010:WorkflowViewState.IdRef="Assign_606">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Date&quot;}]" DataTable="[errorTable]" DisplayName="Add Completion date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_15" />
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Date&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Completion date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_20" />
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                </TryCatch>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_53" Level="Trace" Message="Got Completion Date" />
                                                                                <TryCatch DisplayName="Retrieve Completion Time value" sap2010:WorkflowViewState.IdRef="TryCatch_73">
                                                                                  <TryCatch.Try>
                                                                                    <Assign DisplayName="Completion Time" sap2010:WorkflowViewState.IdRef="Assign_607">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[completionTime]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Attribute("offerLastUpdateDate").Value.ToString.Substring(12,8)]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_74">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_357">
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_608">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[completionTime]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Time&quot;}]" DataTable="[errorTable]" DisplayName="Add Completion time Error" sap2010:WorkflowViewState.IdRef="AddDataRow_16" />
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Completion Time&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Completion time Error" sap2010:WorkflowViewState.IdRef="AddDataRow_21" />
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                </TryCatch>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_54" Level="Trace" Message="Got Completion Time" />
                                                                                <TryCatch DisplayName="get Company Name" sap2010:WorkflowViewState.IdRef="TryCatch_74">
                                                                                  <TryCatch.Try>
                                                                                    <Assign DisplayName="Company Name" sap2010:WorkflowViewState.IdRef="Assign_693">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("PathwayCertDetails").Element("companyName").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:NullReferenceException" sap2010:WorkflowViewState.IdRef="Catch`1_75">
                                                                                      <ActivityAction x:TypeArguments="s:NullReferenceException">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:NullReferenceException" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_359">
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_106" Text="// The name will be obtained from the SAM website so no need to add it to the review list" />
                                                                                          <Assign DisplayName="Company Name" sap2010:WorkflowViewState.IdRef="Assign_610">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                </TryCatch>
                                                                                <Sequence DisplayName="Get Company Information" sap2010:WorkflowViewState.IdRef="Sequence_360">
                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_204" Text="The bot will use the first Vendor in the Vendor list as the comany address" />
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_611">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessStreet]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("CompanyAddress1").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_612">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessSuite]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("CompanyAddress2").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_613">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessCity]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("City").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_614">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessState]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("State").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_615">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessZipcode]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("Zip").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_616">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessPhone]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Negotiators").Element("NegotiatorInformation").Element("Phone").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_617">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[businessFax]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Negotiators").Element("NegotiatorInformation").Element("Fax").Value.ToString]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_55" Level="Trace" Message="Got Comapny Info Time" />
                                                                                <Assign DisplayName="get TIN" sap2010:WorkflowViewState.IdRef="Assign_618">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[tin]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("TIN").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_70" Level="Trace" Message="Got TIN" />
                                                                                <Sequence DisplayName="Get ALL NAICS numbers" sap2010:WorkflowViewState.IdRef="Sequence_574">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                    <Variable x:TypeArguments="x:String" Name="success" />
                                                                                    <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                  </Sequence.Variables>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1293">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[NAICSCodeList]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)()]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlDocumentOutput]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_29" Result="[pathResult]" XPathExpression="//NaicsCode" />
                                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_71" Level="Trace" Message="Got NASICS code(s)" />
                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_106" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="naicsNumber" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_573">
                                                                                          <AddToCollection x:TypeArguments="x:String" Collection="[NAICSCodeList]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_97" Item="[naicsNumber.Value.ToString]" />
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_56" Level="Trace" Message="Got Offer Data" />
                                                                                <Assign DisplayName="get business &quot;type&quot;" sap2010:WorkflowViewState.IdRef="Assign_620">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[businessType]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Vendors").Element("VendorInformation").Element("OrganizationType").Value.ToString]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_114">
                                                                                  <TryCatch.Try>
                                                                                    <Sequence DisplayName="Estimated Sales" sap2010:WorkflowViewState.IdRef="Sequence_571">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                        <Variable x:TypeArguments="x:Int32" Name="cost" />
                                                                                      </Sequence.Variables>
                                                                                      <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlDocumentOutput]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_28" Result="[pathResult]" XPathExpression="//SinInformation" />
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1274">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Int32">[cost]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_105" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="sxl:XElement" Name="salesCost" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="Get Sales numbers" sap2010:WorkflowViewState.IdRef="Sequence_570">
                                                                                              <Sequence.Variables>
                                                                                                <Variable x:TypeArguments="x:String" Name="tempSales" />
                                                                                              </Sequence.Variables>
                                                                                              <Assign DisplayName="get est. contract cost" sap2010:WorkflowViewState.IdRef="Assign_1275">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[tempSales]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[salesCost.Element("EstimatedSales").Value.ToString]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_69" Level="Trace" Message="[&quot;temp Sales found: &quot;+tempSales.ToString]" />
                                                                                              <If Condition="[tempSales.Contains(&quot;.&quot;)]" DisplayName="remove &quot;cents&quot;" sap2010:WorkflowViewState.IdRef="If_299">
                                                                                                <If.Then>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1276">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[decimalLocation]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[tempSales.Length - 3]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1277">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[decimalLocation]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[tempSales.Length]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Else>
                                                                                              </If>
                                                                                              <If sap2010:Annotation.AnnotationText="This is an edge case if the input amount is something like 1.2&#xA;&#xA;Need investigaation into the business rules on what are valid cost ranges. Should there ever be a value of 1.2 and if so, what does it represent?" Condition="[decimalLocation&lt; 0]" sap2010:WorkflowViewState.IdRef="If_338">
                                                                                                <If.Then>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1426">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[decimalLocation]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[tempSales.IndexOf(".")]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Then>
                                                                                              </If>
                                                                                              <Assign DisplayName="get est. contract cost" sap2010:WorkflowViewState.IdRef="Assign_1278">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Int32">[cost]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(tempSales.Substring(0,decimalLocation)) + cost]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1279">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[estimatedContractValue]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[(cost * 5).ToString]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign DisplayName="get options cost" sap2010:WorkflowViewState.IdRef="Assign_1280">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[basePeriodOptionsValue]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[(cost * 20 ).ToString]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </Sequence>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_116">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence DisplayName="Error Getting Sales Number" sap2010:WorkflowViewState.IdRef="Sequence_770">
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Sales Numbers&quot;}]" DataTable="[errorTable]" DisplayName="Add Sales Number Error" sap2010:WorkflowViewState.IdRef="AddDataRow_37" />
                                                                                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Sales Amount&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Sales Error" sap2010:WorkflowViewState.IdRef="AddDataRow_38" />
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1458">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[estimatedContractValue]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">0</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign DisplayName="get options cost" sap2010:WorkflowViewState.IdRef="Assign_1459">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[basePeriodOptionsValue]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">0</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:CommentOut DisplayName="should we throw error?" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                                                                            <ui:CommentOut.Body>
                                                                                              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_771">
                                                                                                <Throw Exception="[new Exception(&quot;Incorrect Sales numbers. &quot;+exception.Message)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                                                                              </Sequence>
                                                                                            </ui:CommentOut.Body>
                                                                                          </ui:CommentOut>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                </TryCatch>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_57" Level="Trace" Message="Got Sales Data" />
                                                                                <Sequence DisplayName="get SIN Information" sap2010:WorkflowViewState.IdRef="Sequence_364">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="x:String" Name="tempSininfo" />
                                                                                    <Variable x:TypeArguments="x:Boolean" Name="isCoopPurchase" />
                                                                                    <Variable x:TypeArguments="x:Boolean" Name="wasCoopPurchaseListed" />
                                                                                  </Sequence.Variables>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_623">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[tempSininfo]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">
                                                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                                                      </InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_625">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[coopPurchase]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">NA</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_626">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">[wasCoopPurchaseListed]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1396">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[sinInfo]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of String)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="get SIN Info" sap2010:WorkflowViewState.IdRef="ForEach`1_71" Values="[xmlDocumentOutput.Element(&quot;Offers&quot;).Elements(&quot;Sins&quot;).Elements(&quot;SinInformation&quot;)]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_363">
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_627">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[tempSininfo]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">[item.Attribute("SinTitle").Value.ToString]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <AddToCollection x:TypeArguments="x:String" Collection="[sinInfo]" DisplayName="Add to list of SIN numbers" sap2010:WorkflowViewState.IdRef="AddToCollection`1_74" Item="[tempSininfo]" />
                                                                                          <Sequence DisplayName="check if coop purchase exsists" sap2010:WorkflowViewState.IdRef="Sequence_362">
                                                                                            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_75">
                                                                                              <TryCatch.Try>
                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_361">
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_628">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[coopPurchase]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[item.Element("SinInformation").Element("CooperativePurchasing").Value.ToString]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_629">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:Boolean">[wasCoopPurchaseListed]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <If Condition="[coopPurchase = &quot;No&quot; AND isCoopPurchase]" DisplayName="coop purchase logic" sap2010:WorkflowViewState.IdRef="If_142">
                                                                                                    <If.Then>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_630">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:Boolean">[isCoopPurchase]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_631">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:Boolean">[isCoopPurchase]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                </Sequence>
                                                                                              </TryCatch.Try>
                                                                                              <TryCatch.Catches>
                                                                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_76">
                                                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                                                    <ActivityAction.Argument>
                                                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                    </ActivityAction.Argument>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_632">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:Boolean">[isCoopPurchase]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </ActivityAction>
                                                                                                </Catch>
                                                                                              </TryCatch.Catches>
                                                                                            </TryCatch>
                                                                                          </Sequence>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                  <If Condition="[wasCoopPurchaseListed]" DisplayName="more coop logic" sap2010:WorkflowViewState.IdRef="If_143">
                                                                                    <If.Then>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_633">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[coopPurchase]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[isCoopPurchase.ToString]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                  </If>
                                                                                </Sequence>
                                                                                <Sequence DisplayName="SAM Info Grab" sap2010:WorkflowViewState.IdRef="Sequence_373">
                                                                                  <Sequence DisplayName="SOAP-HTTP DUNS Sam Core" sap2010:WorkflowViewState.IdRef="Sequence_372">
                                                                                    <Sequence.Variables>
                                                                                      <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                      <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                      <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                      <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                      <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                      <Variable x:TypeArguments="ui:GenericValue" Name="tryCount" />
                                                                                      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)()]" Name="SamNAICSCodeList" />
                                                                                    </Sequence.Variables>
                                                                                    <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_8" />
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_634">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_635">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_636">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:getEntities&gt;"+System.Environment.NewLine+
"         &lt;authenticationKey&gt;"+System.Environment.NewLine+
"            &lt;userID&gt;"+samUserName+"&lt;/userID&gt;"+System.Environment.NewLine+
"            &lt;password&gt;"+New NetworkCredential(String.Empty, secureWord).Password+"&lt;/password&gt;"+System.Environment.NewLine+
"         &lt;/authenticationKey&gt;"+System.Environment.NewLine+
"         &lt;entitySearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;DUNSNumber&gt;"+DUNSnumber+"&lt;/DUNSNumber&gt;"+System.Environment.NewLine+
"         &lt;/entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;requestedData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"           &lt;coreData&gt;Y&lt;/coreData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;assertions&gt;Y&lt;/assertions&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;repsAndCerts&gt;Y&lt;/repsAndCerts&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;pointsOfContact&gt;Y&lt;/pointsOfContact&gt;"+System.Environment.NewLine+
"         &lt;/requestedData&gt;"+System.Environment.NewLine+
"      &lt;/sam:getEntities&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_14" Condition="[tryCount &lt; 3]">
                                                                                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_76">
                                                                                        <TryCatch.Try>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_365">
                                                                                            <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/Entity" sap2010:WorkflowViewState.IdRef="HttpClient_23" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                              <ui:HttpClient.Attachments>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                              </ui:HttpClient.Attachments>
                                                                                              <ui:HttpClient.Cookies>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                              </ui:HttpClient.Cookies>
                                                                                              <ui:HttpClient.Headers>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                              </ui:HttpClient.Headers>
                                                                                              <ui:HttpClient.Parameters>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                              </ui:HttpClient.Parameters>
                                                                                              <ui:HttpClient.UrlSegments>
                                                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                              </ui:HttpClient.UrlSegments>
                                                                                            </ui:HttpClient>
                                                                                            <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_29" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                            <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/SAM_SearchDUNS_&quot;+DUNSnumber+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_23" Text="[dateTime.ToString+System.Environment.NewLine+&#xA;&quot;SAM Search&quot;+System.Environment.NewLine +&#xA;&quot;    company: &quot;+ companyName + System.Environment.NewLine+&#xA;&quot;     DUNS: &quot;+ DUNSNumber+ System.Environment.NewLine + System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_637">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[3]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                          </Sequence>
                                                                                        </TryCatch.Try>
                                                                                        <TryCatch.Catches>
                                                                                          <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_77">
                                                                                            <ActivityAction x:TypeArguments="sn:WebException">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                              </ActivityAction.Argument>
                                                                                              <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_144">
                                                                                                <If.Then>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_638">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[tryCount + 1]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_18" />
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </ActivityAction>
                                                                                          </Catch>
                                                                                        </TryCatch.Catches>
                                                                                      </TryCatch>
                                                                                    </DoWhile>
                                                                                    <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_30" Result="[pathResult]" XPathExpression="//NAICS/code" />
                                                                                    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_111" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_581">
                                                                                            <AddToCollection x:TypeArguments="x:String" Collection="[SamNAICSCodeList]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_98" Item="[item.Value.ToString]" />
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="NAICS check" sap2010:WorkflowViewState.IdRef="ForEach`1_112" Values="[NAICSCodeList]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="x:Object">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_582">
                                                                                            <If Condition="[SamNAICSCodeList.IndexOf(item.ToString) &lt; 0]" sap2010:WorkflowViewState.IdRef="If_303">
                                                                                              <If.Then>
                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_583">
                                                                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot; NAICS not found in SAM results&quot;}]" DataTable="[errorTable]" DisplayName="Add NAICS error" sap2010:WorkflowViewState.IdRef="AddDataRow_9" />
                                                                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot; NAICS not found in SAM results&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add NAICS error" sap2010:WorkflowViewState.IdRef="AddDataRow_22" />
                                                                                                </Sequence>
                                                                                              </If.Then>
                                                                                              <If.Else>
                                                                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_197" Text="no-op." />
                                                                                              </If.Else>
                                                                                            </If>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                    <Sequence DisplayName="Expiration Date" sap2010:WorkflowViewState.IdRef="Sequence_367">
                                                                                      <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_18" Result="[pathResult]" XPathExpression="//entityIdentification" />
                                                                                      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_107" Text="// There should only ever be one expiration date.&#xA;&#xA;The loop is needed becasue there is no way to extract a single item via xPath" />
                                                                                      <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_72" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_366">
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_639">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[SAMExpirationDate]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[item.Element("expirationDate").Value.ToString]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_640">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[companyName]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">[item.Element("legalBusinessName").Value.ToString]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                    </Sequence>
                                                                                    <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_19" Result="[pathResult]" XPathExpression="//provision" />
                                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_108" Text="// The business infomration is contained within the 52.212-3 infomration" />
                                                                                    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_74" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_371">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="x:String" Name="test" />
                                                                                            </Sequence.Variables>
                                                                                            <If Condition="[item.Element(&quot;id&quot;).Value.ToString = &quot;FAR 52.212-3&quot;]" DisplayName="Check for FAR 52.212-3" sap2010:WorkflowViewState.IdRef="If_152">
                                                                                              <If.Then>
                                                                                                <Sequence DisplayName="Build correct text for Business" sap2010:WorkflowViewState.IdRef="Sequence_370">
                                                                                                  <Assign DisplayName="final option of business size" sap2010:WorkflowViewState.IdRef="Assign_641">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">[ChrW(9744)+"  Large /"+ChrW(9744)+"  Small /"+ChrW(9744)+"  Woman Owned /"+ChrW(9744)+"  Veteran Owned /"+ChrW(9744)+"  Small Disadvantaged /"+ChrW(9744)+"  8a /"+ChrW(9744)+"  Service-Disabled Veteran Owned /"+ChrW(9744)+"  HUBZone"]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_73" Values="[item.Element(&quot;listOfAnswers&quot;).Elements]">
                                                                                                    <ui:ForEach.Body>
                                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                        <ActivityAction.Argument>
                                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="answerItem" />
                                                                                                        </ActivityAction.Argument>
                                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_369">
                                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_109" Text="// Not all items will have a business object and business type&#xA;&#xA;No avoid mulitple if checks, just doing a try and if it is there, grab it and get the desired information. Otherwise, catch the exception and ignore it." />
                                                                                                          <TryCatch DisplayName="Try catch businessObject" sap2010:WorkflowViewState.IdRef="TryCatch_77">
                                                                                                            <TryCatch.Try>
                                                                                                              <Sequence DisplayName="Business Size" sap2010:WorkflowViewState.IdRef="Sequence_368">
                                                                                                                <Sequence.Variables>
                                                                                                                  <Variable x:TypeArguments="x:String" Name="businessObjectValue" />
                                                                                                                  <Variable x:TypeArguments="x:String" Name="businessObject" />
                                                                                                                </Sequence.Variables>
                                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_642">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[businessObject]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[answerItem.Element("businessObject").Element("businessType").Value]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_643">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[businessObjectValue]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[answerItem.Element("businessObject").Element("value").Value]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <If Condition="[businessObject.ToLower = &quot;small business&quot; AND businessObjectValue.ToLower = &quot;true&quot;]" DisplayName="small business?" sap2010:WorkflowViewState.IdRef="If_145">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_644">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Small /","X Small /")]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                </If>
                                                                                                                <If Condition="[businessObject.ToLower = &quot;women-owned small business concern&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="female owned?" sap2010:WorkflowViewState.IdRef="If_146">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_645">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Woman Owned"," X  Woman Owned")]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                </If>
                                                                                                                <If Condition="[businessObject.ToLower = &quot;veteran-owned small business&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="Vet owned?" sap2010:WorkflowViewState.IdRef="If_147">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_646">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Veteran Owned"," X  Veteran Owned")]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                </If>
                                                                                                                <If Condition="[businessObject.ToLower = &quot;small disadvantaged business concern&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="disadvantaged?" sap2010:WorkflowViewState.IdRef="If_148">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_647">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Small Disadvantaged"," X  Small Disadvantaged")]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                </If>
                                                                                                                <If Condition="[businessObject.ToLower = &quot;service disabled veteran-owned small business&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="disabled vet owned?" sap2010:WorkflowViewState.IdRef="If_149">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_648">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  Service-Disabled Veteran Owned","X  Service-Disabled Veteran Owned")]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                </If>
                                                                                                                <If Condition="[businessObject.ToLower = &quot;hubzone small business concern&quot; AND businessObjectValue.ToLower = &quot;yes&quot;]" DisplayName="hubzone?" sap2010:WorkflowViewState.IdRef="If_150">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_649">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[test]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[test.Replace("☐  HUBZone","X HUBZone ")]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                </If>
                                                                                                                <If Condition="[test.Contains(&quot;X&quot;)]" DisplayName="if anything checked in small business, then pending" sap2010:WorkflowViewState.IdRef="If_151">
                                                                                                                  <If.Then>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_650">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[subcontractingPlan]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String">["X N/A / ☐ Pending Review"]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Then>
                                                                                                                  <If.Else>
                                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_651">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[subcontractingPlan]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["☐N/A  / X Pending Review"]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                  </If.Else>
                                                                                                                </If>
                                                                                                                <Assign DisplayName="store business size" sap2010:WorkflowViewState.IdRef="Assign_652">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[businessSize]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[test]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                              </Sequence>
                                                                                                            </TryCatch.Try>
                                                                                                            <TryCatch.Catches>
                                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_78">
                                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                  <ActivityAction.Argument>
                                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                  </ActivityAction.Argument>
                                                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_110" Text="// intnetionally left blank" />
                                                                                                                </ActivityAction>
                                                                                                              </Catch>
                                                                                                            </TryCatch.Catches>
                                                                                                          </TryCatch>
                                                                                                        </Sequence>
                                                                                                      </ActivityAction>
                                                                                                    </ui:ForEach.Body>
                                                                                                  </ui:ForEach>
                                                                                                </Sequence>
                                                                                              </If.Then>
                                                                                            </If>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                  </Sequence>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_58" Level="Trace" Message="Got SIN Data" />
                                                                                <Sequence DisplayName="SOAP-HTTP DUNS Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_377">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                    <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                    <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                    <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                    <Variable x:TypeArguments="x:String" Name="success" />
                                                                                    <Variable x:TypeArguments="x:Int32" Name="tryCount" />
                                                                                  </Sequence.Variables>
                                                                                  <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_9" />
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_653">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_654">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;DUNSNumber&gt;"+DUNSnumber+"&lt;/DUNSNumber&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_655">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_15" Condition="[tryCount &lt; 3]">
                                                                                    <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_78">
                                                                                      <TryCatch.Try>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_374">
                                                                                          <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_24" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                            <ui:HttpClient.Attachments>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Attachments>
                                                                                            <ui:HttpClient.Cookies>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Cookies>
                                                                                            <ui:HttpClient.Headers>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Headers>
                                                                                            <ui:HttpClient.Parameters>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.Parameters>
                                                                                            <ui:HttpClient.UrlSegments>
                                                                                              <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                            </ui:HttpClient.UrlSegments>
                                                                                          </ui:HttpClient>
                                                                                          <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_30" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                          <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchDUNS_&quot;+DUNSnumber+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_24" Text="[dateTime.ToString + System.Environment.NewLine + System.Environment.NewLine+&#xA;&quot;Search: &quot;+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;DUNS #: &quot;+DUNSnumber+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_656">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </TryCatch.Try>
                                                                                      <TryCatch.Catches>
                                                                                        <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_79">
                                                                                          <ActivityAction x:TypeArguments="sn:WebException">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                            </ActivityAction.Argument>
                                                                                            <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_153">
                                                                                              <If.Then>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_657">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Then>
                                                                                              <If.Else>
                                                                                                <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_19" />
                                                                                              </If.Else>
                                                                                            </If>
                                                                                          </ActivityAction>
                                                                                        </Catch>
                                                                                      </TryCatch.Catches>
                                                                                    </TryCatch>
                                                                                  </DoWhile>
                                                                                  <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_79">
                                                                                    <TryCatch.Try>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_376">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                        </Sequence.Variables>
                                                                                        <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_20" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                        <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_75" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_375">
                                                                                                <Sequence.Variables>
                                                                                                  <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                </Sequence.Variables>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_658">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_659">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_154">
                                                                                                  <If.Then>
                                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_440">
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_792">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:Boolean">[dunsExclusion]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                                                                                                      <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_23" />
                                                                                                    </Sequence>
                                                                                                  </If.Then>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                      </Sequence>
                                                                                    </TryCatch.Try>
                                                                                    <TryCatch.Catches>
                                                                                      <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_80">
                                                                                        <ActivityAction x:TypeArguments="s:Exception">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                          </ActivityAction.Argument>
                                                                                          <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Error" Message="[&quot;error parsing Duns Exclusion: &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                        </ActivityAction>
                                                                                      </Catch>
                                                                                    </TryCatch.Catches>
                                                                                  </TryCatch>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_59" Level="Trace" Message="Got SAM Excl. Data" />
                                                                                <Sequence DisplayName="Get List of Contract Adminstrators" sap2010:WorkflowViewState.IdRef="Sequence_384">
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_660">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[contractAdmins]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="extract contract admin info" sap2010:WorkflowViewState.IdRef="ForEach`1_77" Values="[xmlDocumentOutput.Element(&quot;Offers&quot;).Element(&quot;Contacts&quot;).Elements(&quot;ContactInformation&quot;)]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Flowchart DisplayName="IFF admin info and check" sap2010:WorkflowViewState.IdRef="Flowchart_2">
                                                                                          <Flowchart.StartNode>
                                                                                            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_37">
                                                                                              <ui:GetXMLNodeAttributes Attributes="[contractAdminAttrib]" DisplayName="Get XML node attributes" ExistingXMLNode="[item]" sap2010:WorkflowViewState.IdRef="GetXMLNodeAttributes_21" />
                                                                                              <FlowStep.Next>
                                                                                                <FlowDecision x:Name="__ReferenceID2" Condition="[item.Attribute(&quot;Category&quot;).Value.ToString.Contains(&quot;Industrial Funding Fee&quot;)]" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                                                                                  <FlowDecision.True>
                                                                                                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_39">
                                                                                                      <Sequence DisplayName="Get Admin check for Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_438">
                                                                                                        <Sequence.Variables>
                                                                                                          <Variable x:TypeArguments="x:String" Name="person" />
                                                                                                          <Variable x:TypeArguments="x:Int32" Name="tryCount" />
                                                                                                        </Sequence.Variables>
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_721">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:String">[IFFAdministrator]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString+", "+item.Element("Title").Value.ToString+", "+item.Element("Phone").Value.ToString+", "+item.Element("Email").Value.ToString]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_722">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString]</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <AddToCollection x:TypeArguments="x:String" Collection="[contractAdmins]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_88" Item="[IFFAdministrator]" />
                                                                                                        <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_437">
                                                                                                          <Sequence.Variables>
                                                                                                            <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                                            <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                                            <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                                            <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                                          </Sequence.Variables>
                                                                                                          <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_10" />
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_723">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_724">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_725">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+person+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <DoWhile DisplayName="try http call" sap2010:WorkflowViewState.IdRef="DoWhile_19" Condition="[tryCount &lt; 3]">
                                                                                                            <TryCatch DisplayName="Try catch for http error" sap2010:WorkflowViewState.IdRef="TryCatch_87">
                                                                                                              <TryCatch.Try>
                                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_434">
                                                                                                                  <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_28" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                                                    <ui:HttpClient.Attachments>
                                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                    </ui:HttpClient.Attachments>
                                                                                                                    <ui:HttpClient.Cookies>
                                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                    </ui:HttpClient.Cookies>
                                                                                                                    <ui:HttpClient.Headers>
                                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                    </ui:HttpClient.Headers>
                                                                                                                    <ui:HttpClient.Parameters>
                                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                    </ui:HttpClient.Parameters>
                                                                                                                    <ui:HttpClient.UrlSegments>
                                                                                                                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                    </ui:HttpClient.UrlSegments>
                                                                                                                  </ui:HttpClient>
                                                                                                                  <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_34" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                                                  <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchName_&quot;+person+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_28" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;Person: &quot;+person+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_726">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                </Sequence>
                                                                                                              </TryCatch.Try>
                                                                                                              <TryCatch.Catches>
                                                                                                                <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_88">
                                                                                                                  <ActivityAction x:TypeArguments="sn:WebException">
                                                                                                                    <ActivityAction.Argument>
                                                                                                                      <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                                                    </ActivityAction.Argument>
                                                                                                                    <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_180">
                                                                                                                      <If.Then>
                                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_727">
                                                                                                                          <Assign.To>
                                                                                                                            <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                          </Assign.To>
                                                                                                                          <Assign.Value>
                                                                                                                            <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                                                                                                          </Assign.Value>
                                                                                                                        </Assign>
                                                                                                                      </If.Then>
                                                                                                                      <If.Else>
                                                                                                                        <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_23" />
                                                                                                                      </If.Else>
                                                                                                                    </If>
                                                                                                                  </ActivityAction>
                                                                                                                </Catch>
                                                                                                              </TryCatch.Catches>
                                                                                                            </TryCatch>
                                                                                                          </DoWhile>
                                                                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_88">
                                                                                                            <TryCatch.Try>
                                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_436">
                                                                                                                <Sequence.Variables>
                                                                                                                  <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                                                </Sequence.Variables>
                                                                                                                <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_23" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                                                <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_89" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                                                  <ui:ForEach.Body>
                                                                                                                    <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                                      <ActivityAction.Argument>
                                                                                                                        <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                                                      </ActivityAction.Argument>
                                                                                                                      <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_435">
                                                                                                                        <Sequence.Variables>
                                                                                                                          <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                                          <Variable x:TypeArguments="x:String" Name="success" />
                                                                                                                        </Sequence.Variables>
                                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_728">
                                                                                                                          <Assign.To>
                                                                                                                            <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                                          </Assign.To>
                                                                                                                          <Assign.Value>
                                                                                                                            <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                                          </Assign.Value>
                                                                                                                        </Assign>
                                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_729">
                                                                                                                          <Assign.To>
                                                                                                                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                                          </Assign.To>
                                                                                                                          <Assign.Value>
                                                                                                                            <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                                          </Assign.Value>
                                                                                                                        </Assign>
                                                                                                                        <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_181">
                                                                                                                          <If.Then>
                                                                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_439">
                                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_793">
                                                                                                                                <Assign.To>
                                                                                                                                  <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                                                                                </Assign.To>
                                                                                                                                <Assign.Value>
                                                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                                                </Assign.Value>
                                                                                                                              </Assign>
                                                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_5" />
                                                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_24" />
                                                                                                                            </Sequence>
                                                                                                                          </If.Then>
                                                                                                                        </If>
                                                                                                                      </Sequence>
                                                                                                                    </ActivityAction>
                                                                                                                  </ui:ForEach.Body>
                                                                                                                </ui:ForEach>
                                                                                                              </Sequence>
                                                                                                            </TryCatch.Try>
                                                                                                            <TryCatch.Catches>
                                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_89">
                                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                  <ActivityAction.Argument>
                                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                  </ActivityAction.Argument>
                                                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Error" Message="[&quot;error parsing Name Exclusion for &quot;+person+&quot; : &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                                                </ActivityAction>
                                                                                                              </Catch>
                                                                                                            </TryCatch.Catches>
                                                                                                          </TryCatch>
                                                                                                        </Sequence>
                                                                                                      </Sequence>
                                                                                                    </FlowStep>
                                                                                                  </FlowDecision.True>
                                                                                                  <FlowDecision.False>
                                                                                                    <FlowDecision x:Name="__ReferenceID6" Condition="[item.Attribute(&quot;Category&quot;).Value.ToString.Contains(&quot;Contact for Contract&quot;)]" sap2010:WorkflowViewState.IdRef="FlowDecision_10">
                                                                                                      <FlowDecision.True>
                                                                                                        <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_93">
                                                                                                          <Sequence DisplayName="Get contact for contract and check for Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_738">
                                                                                                            <Sequence.Variables>
                                                                                                              <Variable x:TypeArguments="x:String" Name="person" />
                                                                                                              <Variable x:TypeArguments="x:Int32" Name="tryCount" />
                                                                                                              <Variable x:TypeArguments="x:String" Name="contactPerson" />
                                                                                                            </Sequence.Variables>
                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1427">
                                                                                                              <Assign.To>
                                                                                                                <OutArgument x:TypeArguments="x:String">[contactPerson]</OutArgument>
                                                                                                              </Assign.To>
                                                                                                              <Assign.Value>
                                                                                                                <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString+", "+item.Element("Title").Value.ToString+", "+item.Element("Phone").Value.ToString+", "+item.Element("Email").Value.ToString]</InArgument>
                                                                                                              </Assign.Value>
                                                                                                            </Assign>
                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1428">
                                                                                                              <Assign.To>
                                                                                                                <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                              </Assign.To>
                                                                                                              <Assign.Value>
                                                                                                                <InArgument x:TypeArguments="x:String">[item.Element("Name").Value.ToString]</InArgument>
                                                                                                              </Assign.Value>
                                                                                                            </Assign>
                                                                                                            <AddToCollection x:TypeArguments="x:String" Collection="[contractAdmins]" DisplayName="Add to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_101" Item="[contactPerson]" />
                                                                                                            <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_737">
                                                                                                              <Sequence.Variables>
                                                                                                                <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                                                <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                                                <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                                                <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                                              </Sequence.Variables>
                                                                                                              <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_11" />
                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1429">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1430">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1431">
                                                                                                                <Assign.To>
                                                                                                                  <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                                                </Assign.To>
                                                                                                                <Assign.Value>
                                                                                                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+person+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                                                </Assign.Value>
                                                                                                              </Assign>
                                                                                                              <DoWhile DisplayName="try http call" sap2010:WorkflowViewState.IdRef="DoWhile_20" Condition="[tryCount &lt; 3]">
                                                                                                                <TryCatch DisplayName="Try catch for http error" sap2010:WorkflowViewState.IdRef="TryCatch_112">
                                                                                                                  <TryCatch.Try>
                                                                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_733">
                                                                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_32" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                                                        <ui:HttpClient.Attachments>
                                                                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                        </ui:HttpClient.Attachments>
                                                                                                                        <ui:HttpClient.Cookies>
                                                                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                        </ui:HttpClient.Cookies>
                                                                                                                        <ui:HttpClient.Headers>
                                                                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                        </ui:HttpClient.Headers>
                                                                                                                        <ui:HttpClient.Parameters>
                                                                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                        </ui:HttpClient.Parameters>
                                                                                                                        <ui:HttpClient.UrlSegments>
                                                                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                                        </ui:HttpClient.UrlSegments>
                                                                                                                      </ui:HttpClient>
                                                                                                                      <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_38" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                                                      <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchName_&quot;+person+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_29" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;Person: &quot;+person+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1432">
                                                                                                                        <Assign.To>
                                                                                                                          <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                        </Assign.To>
                                                                                                                        <Assign.Value>
                                                                                                                          <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                                                        </Assign.Value>
                                                                                                                      </Assign>
                                                                                                                    </Sequence>
                                                                                                                  </TryCatch.Try>
                                                                                                                  <TryCatch.Catches>
                                                                                                                    <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_114">
                                                                                                                      <ActivityAction x:TypeArguments="sn:WebException">
                                                                                                                        <ActivityAction.Argument>
                                                                                                                          <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                                                        </ActivityAction.Argument>
                                                                                                                        <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_340">
                                                                                                                          <If.Then>
                                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1433">
                                                                                                                              <Assign.To>
                                                                                                                                <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                                                                                                              </Assign.To>
                                                                                                                              <Assign.Value>
                                                                                                                                <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                                                                                                              </Assign.Value>
                                                                                                                            </Assign>
                                                                                                                          </If.Then>
                                                                                                                          <If.Else>
                                                                                                                            <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_24" />
                                                                                                                          </If.Else>
                                                                                                                        </If>
                                                                                                                      </ActivityAction>
                                                                                                                    </Catch>
                                                                                                                  </TryCatch.Catches>
                                                                                                                </TryCatch>
                                                                                                              </DoWhile>
                                                                                                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_113">
                                                                                                                <TryCatch.Try>
                                                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_736">
                                                                                                                    <Sequence.Variables>
                                                                                                                      <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                                                    </Sequence.Variables>
                                                                                                                    <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_33" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                                                    <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_123" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                                                      <ui:ForEach.Body>
                                                                                                                        <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                                          <ActivityAction.Argument>
                                                                                                                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                                                          </ActivityAction.Argument>
                                                                                                                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_735">
                                                                                                                            <Sequence.Variables>
                                                                                                                              <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                                              <Variable x:TypeArguments="x:String" Name="success" />
                                                                                                                            </Sequence.Variables>
                                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1434">
                                                                                                                              <Assign.To>
                                                                                                                                <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                                              </Assign.To>
                                                                                                                              <Assign.Value>
                                                                                                                                <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                                              </Assign.Value>
                                                                                                                            </Assign>
                                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1435">
                                                                                                                              <Assign.To>
                                                                                                                                <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                                              </Assign.To>
                                                                                                                              <Assign.Value>
                                                                                                                                <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                                              </Assign.Value>
                                                                                                                            </Assign>
                                                                                                                            <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_341">
                                                                                                                              <If.Then>
                                                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_734">
                                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1436">
                                                                                                                                    <Assign.To>
                                                                                                                                      <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                                                                                    </Assign.To>
                                                                                                                                    <Assign.Value>
                                                                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                                                    </Assign.Value>
                                                                                                                                  </Assign>
                                                                                                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_31" />
                                                                                                                                  <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_32" />
                                                                                                                                </Sequence>
                                                                                                                              </If.Then>
                                                                                                                            </If>
                                                                                                                          </Sequence>
                                                                                                                        </ActivityAction>
                                                                                                                      </ui:ForEach.Body>
                                                                                                                    </ui:ForEach>
                                                                                                                  </Sequence>
                                                                                                                </TryCatch.Try>
                                                                                                                <TryCatch.Catches>
                                                                                                                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_115">
                                                                                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                      <ActivityAction.Argument>
                                                                                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                      </ActivityAction.Argument>
                                                                                                                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_39" Level="Error" Message="[&quot;error parsing Name Exclusion for &quot;+person+&quot; : &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                                                    </ActivityAction>
                                                                                                                  </Catch>
                                                                                                                </TryCatch.Catches>
                                                                                                              </TryCatch>
                                                                                                            </Sequence>
                                                                                                          </Sequence>
                                                                                                        </FlowStep>
                                                                                                      </FlowDecision.True>
                                                                                                      <FlowDecision.False>
                                                                                                        <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_40">
                                                                                                          <ui:Comment DisplayName="no-op" sap2010:WorkflowViewState.IdRef="Comment_127" Text="no-op" />
                                                                                                        </FlowStep>
                                                                                                      </FlowDecision.False>
                                                                                                    </FlowDecision>
                                                                                                  </FlowDecision.False>
                                                                                                </FlowDecision>
                                                                                              </FlowStep.Next>
                                                                                            </FlowStep>
                                                                                          </Flowchart.StartNode>
                                                                                          <x:Reference>__ReferenceID1</x:Reference>
                                                                                          <x:Reference>__ReferenceID2</x:Reference>
                                                                                          <x:Reference>__ReferenceID3</x:Reference>
                                                                                          <x:Reference>__ReferenceID4</x:Reference>
                                                                                          <x:Reference>__ReferenceID5</x:Reference>
                                                                                          <x:Reference>__ReferenceID6</x:Reference>
                                                                                          <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_94">
                                                                                            <ui:Comment DisplayName="TO DO" sap2010:WorkflowViewState.IdRef="Comment_207" Text="check where iff list is being used.&#xA;&#xA;check if IFF list used.&#xA;&#xA;do we really need a list for contact for contract?" />
                                                                                          </FlowStep>
                                                                                        </Flowchart>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_61" Level="Trace" Message="Got Admin Data" />
                                                                                <Sequence DisplayName="get Negotiator Information" sap2010:WorkflowViewState.IdRef="Sequence_388">
                                                                                  <Sequence.Variables>
                                                                                    <Variable x:TypeArguments="x:String" Name="negotiatorInfo" />
                                                                                  </Sequence.Variables>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_670">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:String">[negotiatorInfo]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:String">
                                                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                                                      </InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_732">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[negotiatorNameList]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_671">
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="scg:List(x:String)">[negotiatorList]</OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)]</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="get Negotiator Info" sap2010:WorkflowViewState.IdRef="ForEach`1_78" Values="[xmlDocumentOutput.Element(&quot;Offers&quot;).Element(&quot;Negotiators&quot;).Elements(&quot;NegotiatorInformation&quot;)]">
                                                                                    <ui:ForEach.Body>
                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="negotiatorInfo" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_387">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="canSign" />
                                                                                          </Sequence.Variables>
                                                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_64" Level="Trace" Message="[&quot;found: &quot;+negotiatorInfo.ToString]" />
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1394">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[canSign]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">[negotiatorInfo.Element("Role").Value.ToString]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <If Condition="[canSign.Equals(&quot;Not Authorized to sign&quot;)]" DisplayName="Not authorized to sign?" sap2010:WorkflowViewState.IdRef="If_318">
                                                                                            <If.Then>
                                                                                              <AddToCollection x:TypeArguments="x:String" Collection="[negotiatorList]" DisplayName="Add to list of negotiators" sap2010:WorkflowViewState.IdRef="AddToCollection`1_99" Item="[negotiatorInfo.Element(&quot;Name&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Title&quot;).Value.ToString+ &quot; (&quot;+ negotiatorInfo.Element(&quot;Email&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Phone&quot;).Value.ToString+&quot;) is authorized to Negotiate on behalf of contractor.&quot;]" />
                                                                                            </If.Then>
                                                                                            <If.Else>
                                                                                              <AddToCollection x:TypeArguments="x:String" Collection="[negotiatorList]" DisplayName="Add to list of negotiators" sap2010:WorkflowViewState.IdRef="AddToCollection`1_100" Item="[negotiatorInfo.Element(&quot;Name&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Title&quot;).Value.ToString+ &quot; (&quot;+ negotiatorInfo.Element(&quot;Email&quot;).Value.ToString+&quot;, &quot;+negotiatorInfo.Element(&quot;Phone&quot;).Value.ToString+&quot;) is authorized to Negotiate and Sign on behalf of contractor.&quot;]" />
                                                                                            </If.Else>
                                                                                          </If>
                                                                                          <AddToCollection x:TypeArguments="x:String" Collection="[negotiatorNameList]" DisplayName="Add to list of negotiators Names" sap2010:WorkflowViewState.IdRef="AddToCollection`1_91" Item="[negotiatorInfo.Element(&quot;Name&quot;).Value.ToString]" />
                                                                                          <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_65" Level="Trace" Message="Neg. was added to the list" />
                                                                                          <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_386">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
                                                                                              <Variable x:TypeArguments="x:String" Name="soapResult" />
                                                                                              <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
                                                                                              <Variable x:TypeArguments="x:String" Name="person" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="dateTime" />
                                                                                              <Variable x:TypeArguments="ui:GenericValue" Name="tryCount" />
                                                                                            </Sequence.Variables>
                                                                                            <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="[mediumDelaySpan]" sap2010:WorkflowViewState.IdRef="Delay_12" />
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_672">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[dateTime]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[Now]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_673">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="ui:GenericValue">[1]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_674">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String">[negotiatorInfo.Element("Name").Value.ToString]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_675">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+person+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_17" Condition="[tryCount &lt; 3]">
                                                                                              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_82">
                                                                                                <TryCatch.Try>
                                                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_385">
                                                                                                    <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_26" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                                                                                                      <ui:HttpClient.Attachments>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                      </ui:HttpClient.Attachments>
                                                                                                      <ui:HttpClient.Cookies>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                      </ui:HttpClient.Cookies>
                                                                                                      <ui:HttpClient.Headers>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                      </ui:HttpClient.Headers>
                                                                                                      <ui:HttpClient.Parameters>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                      </ui:HttpClient.Parameters>
                                                                                                      <ui:HttpClient.UrlSegments>
                                                                                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                                                      </ui:HttpClient.UrlSegments>
                                                                                                    </ui:HttpClient>
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_66" Level="Trace" Message="[&quot;SOAP request sent. Result: &quot;+soapResult.ToString]" />
                                                                                                    <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_32" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_67" Level="Trace" Message="SOAP result obtained" />
                                                                                                    <ui:WriteTextFile DisplayName="Write text file" FileName="[currentDirectory+&quot;/output/ExclusionSearchName_&quot;+person+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_26" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Company Name: &quot;+companyName+System.Environment.NewLine+&#xA;&quot;Person: &quot;+person+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                                                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_68" Level="Trace" Message="SAM check written to file" />
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_676">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="ui:GenericValue">[3]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </Sequence>
                                                                                                </TryCatch.Try>
                                                                                                <TryCatch.Catches>
                                                                                                  <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_83">
                                                                                                    <ActivityAction x:TypeArguments="sn:WebException">
                                                                                                      <ActivityAction.Argument>
                                                                                                        <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                                                                                                      </ActivityAction.Argument>
                                                                                                      <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_158">
                                                                                                        <If.Then>
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_677">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="ui:GenericValue">[tryCount]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="ui:GenericValue">[tryCount + 1]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                        </If.Then>
                                                                                                        <If.Else>
                                                                                                          <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_21" />
                                                                                                        </If.Else>
                                                                                                      </If>
                                                                                                    </ActivityAction>
                                                                                                  </Catch>
                                                                                                </TryCatch.Catches>
                                                                                              </TryCatch>
                                                                                            </DoWhile>
                                                                                            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_89">
                                                                                              <TryCatch.Try>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_442">
                                                                                                  <Sequence.Variables>
                                                                                                    <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                                                    <Variable x:TypeArguments="x:String" Name="success" />
                                                                                                    <Variable x:TypeArguments="x:Object" Name="pathResult" />
                                                                                                  </Sequence.Variables>
                                                                                                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Execute XPath" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_24" Result="[pathResult]" XPathExpression="//transactionInformation" />
                                                                                                  <ui:ForEach x:TypeArguments="sxl:XElement" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_93" Values="[Ctype(pathResult, IEnumerable(of Object))]">
                                                                                                    <ui:ForEach.Body>
                                                                                                      <ActivityAction x:TypeArguments="sxl:XElement">
                                                                                                        <ActivityAction.Argument>
                                                                                                          <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                                                                                                        </ActivityAction.Argument>
                                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_453">
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_730">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:String">[success]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:String">[item.Element("successful").Value]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_731">
                                                                                                            <Assign.To>
                                                                                                              <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                                                            </Assign.To>
                                                                                                            <Assign.Value>
                                                                                                              <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(item.Element("count").Value)]</InArgument>
                                                                                                            </Assign.Value>
                                                                                                          </Assign>
                                                                                                          <If Condition="[success = &quot;true&quot; AND count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_182">
                                                                                                            <If.Then>
                                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_441">
                                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_794">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:Boolean">[personExclusion]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[errorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_6" />
                                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName,DUNSNumber, person,EXCLUSIONERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Exclusion Error" sap2010:WorkflowViewState.IdRef="AddDataRow_25" />
                                                                                                              </Sequence>
                                                                                                            </If.Then>
                                                                                                          </If>
                                                                                                        </Sequence>
                                                                                                      </ActivityAction>
                                                                                                    </ui:ForEach.Body>
                                                                                                  </ui:ForEach>
                                                                                                </Sequence>
                                                                                              </TryCatch.Try>
                                                                                              <TryCatch.Catches>
                                                                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_90">
                                                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                                                    <ActivityAction.Argument>
                                                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                    </ActivityAction.Argument>
                                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Error" Message="[&quot;error parsing Person Exclusion: &quot;+System.Environment.NewLine +exception.Message.ToString]" />
                                                                                                  </ActivityAction>
                                                                                                </Catch>
                                                                                              </TryCatch.Catches>
                                                                                            </TryCatch>
                                                                                          </Sequence>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </ui:ForEach.Body>
                                                                                  </ui:ForEach>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_62" Level="Trace" Message="Got Neg. Data" />
                                                                                <TryCatch DisplayName="Try get Pathway Cert Details" sap2010:WorkflowViewState.IdRef="TryCatch_107">
                                                                                  <TryCatch.Try>
                                                                                    <Sequence DisplayName="Attempt to obtain from XML then PDF" sap2010:WorkflowViewState.IdRef="Sequence_701">
                                                                                      <Assign DisplayName="get Name from XML" sap2010:WorkflowViewState.IdRef="Assign_1365">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("PathwayCertDetails").Element("userName").Value.ToString]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign DisplayName="get Date from XML" sap2010:WorkflowViewState.IdRef="Assign_1366">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[tempPWdate]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("PathwayCertDetails").Element("completionDate").Value.ToString]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <Assign DisplayName="format date fro mXML" sap2010:WorkflowViewState.IdRef="Assign_1367">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[tempPWdate.Substring(0,10)]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_73" Level="Trace" Message="[&quot;found pathwayCertInfo: &quot;+pathwayCertInfo]" />
                                                                                      <If Condition="[String.IsNullOrEmpty(pathwayPerson)]" DisplayName="did we find a person in the XML?" sap2010:WorkflowViewState.IdRef="If_315">
                                                                                        <If.Then>
                                                                                          <Sequence DisplayName="Certifcate person not found in XML" sap2010:WorkflowViewState.IdRef="Sequence_700">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="x:String" Name="certName" />
                                                                                            </Sequence.Variables>
                                                                                            <Assign DisplayName="Retrieve the PDF file filenames" sap2010:WorkflowViewState.IdRef="Assign_1368">
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentDirectory,"*Pathway*.pdf")]</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_202" Text="For now the thought is there is only one certification file per offer. If this changes, then this section and the name check will need to be modified to handle multiple certification names." />
                                                                                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="This will need to be changed if there is more than one certification file for each offer." DisplayName="Loop through all Cert PDF files" sap2010:WorkflowViewState.IdRef="ForEach`1_120" Values="[filenames]">
                                                                                              <ui:ForEach.Body>
                                                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                                                  <ActivityAction.Argument>
                                                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                  </ActivityAction.Argument>
                                                                                                  <Sequence DisplayName="Open PDF and get information" sap2010:WorkflowViewState.IdRef="Sequence_699">
                                                                                                    <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start process" FileName="[item.ToString]" sap2010:WorkflowViewState.IdRef="StartProcess_7" />
                                                                                                    <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'AcroRd32.exe'" sap2010:WorkflowViewState.IdRef="WindowScope_29" InformativeScreenshot="b247e6b1cdd81d9f84f46a26bf057859" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Pathway*' /&gt;">
                                                                                                      <ui:WindowScope.Body>
                                                                                                        <ActivityAction x:TypeArguments="x:Object">
                                                                                                          <ActivityAction.Argument>
                                                                                                            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                                                          </ActivityAction.Argument>
                                                                                                          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_698">
                                                                                                            <Sequence.Variables>
                                                                                                              <Variable x:TypeArguments="x:String" Name="Document" />
                                                                                                            </Sequence.Variables>
                                                                                                            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_105">
                                                                                                              <TryCatch.Try>
                                                                                                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_697">
                                                                                                                  <Sequence.Variables>
                                                                                                                    <Variable x:TypeArguments="s:String[]" Name="certStrings" />
                                                                                                                    <Variable x:TypeArguments="x:String" Name="tempText" />
                                                                                                                  </Sequence.Variables>
                                                                                                                  <ui:GetFullText DisplayName="Get full text of Certification" sap2010:WorkflowViewState.IdRef="GetFullText_11" IgnoreHidden="False">
                                                                                                                    <ui:GetFullText.Target>
                                                                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ae68f56d58ddbc38ceaee21c067788d9" Selector="&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                                    </ui:GetFullText.Target>
                                                                                                                    <ui:GetFullText.Text>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[Document]</OutArgument>
                                                                                                                    </ui:GetFullText.Text>
                                                                                                                  </ui:GetFullText>
                                                                                                                  <Assign DisplayName="replace line newline(s)" sap2010:WorkflowViewState.IdRef="Assign_1369">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[tempText]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String">[Document.ToString.Replace(vbCr, "@@").Replace(vbLf, "##")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                  <Assign DisplayName="split string into tokens" sap2010:WorkflowViewState.IdRef="Assign_1370">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="s:String[]">[certStrings]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="s:String[]">[Split(tempText,"@@##")]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                  <Assign DisplayName="Assign Name Token" sap2010:WorkflowViewState.IdRef="Assign_1371">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String">[certStrings(7)]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                  <Assign DisplayName="Split and Assign date token" sap2010:WorkflowViewState.IdRef="Assign_1372">
                                                                                                                    <Assign.To>
                                                                                                                      <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                                    </Assign.To>
                                                                                                                    <Assign.Value>
                                                                                                                      <InArgument x:TypeArguments="x:String">[Split(certStrings(16),":")(1)]</InArgument>
                                                                                                                    </Assign.Value>
                                                                                                                  </Assign>
                                                                                                                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_74" Level="Trace" Message="[&quot;1. assigned pathwayCertInfo to &quot;+pathwayCertInfo]" />
                                                                                                                </Sequence>
                                                                                                              </TryCatch.Try>
                                                                                                              <TryCatch.Catches>
                                                                                                                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_106">
                                                                                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                    <ActivityAction.Argument>
                                                                                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                    </ActivityAction.Argument>
                                                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Error" Message="Issue obtaining Certification information" />
                                                                                                                  </ActivityAction>
                                                                                                                </Catch>
                                                                                                              </TryCatch.Catches>
                                                                                                            </TryCatch>
                                                                                                          </Sequence>
                                                                                                        </ActivityAction>
                                                                                                      </ui:WindowScope.Body>
                                                                                                    </ui:WindowScope>
                                                                                                    <ui:CloseApplication DisplayName="Close application 'AcroRd32.exe Pathways'" sap2010:WorkflowViewState.IdRef="CloseApplication_6">
                                                                                                      <ui:CloseApplication.Target>
                                                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="09bd9a0423476e7f3cfc305041cb101f" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                      </ui:CloseApplication.Target>
                                                                                                    </ui:CloseApplication>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1373">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[certName]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                    <ui:Break sap2010:WorkflowViewState.IdRef="Break_7" />
                                                                                                  </Sequence>
                                                                                                </ActivityAction>
                                                                                              </ui:ForEach.Body>
                                                                                            </ui:ForEach>
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">["Completed by "+pathwayPerson+" on "+Date.Parse(pathwayCertInfo).ToString("MMMM dd, yyyy")]</InArgument>
                                                                                            </Assign.Value>
                                                                                            <sap2010:WorkflowViewState.IdRef>Assign_1463</sap2010:WorkflowViewState.IdRef>
                                                                                          </Assign>
                                                                                        </If.Else>
                                                                                      </If>
                                                                                    </Sequence>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_108">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_707">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="certName" />
                                                                                          </Sequence.Variables>
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_203" Text="If there was any error, try again. If this fails, then log the error and continue." />
                                                                                          <Assign DisplayName="Retrieve the XML file filenames" sap2010:WorkflowViewState.IdRef="Assign_1374">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="s:String[]">[filenames]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(currentDirectory,"*Pathway*.pdf")]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_121" Values="[filenames]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_705">
                                                                                                  <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Open Pathway Cert PDF" FileName="[item.ToString]" sap2010:WorkflowViewState.IdRef="StartProcess_8" />
                                                                                                  <Assign DisplayName="Assign Cert Name" sap2010:WorkflowViewState.IdRef="Assign_1384">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <Assign DisplayName="Assign Cert Date" sap2010:WorkflowViewState.IdRef="Assign_1385">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'AcroRd32.exe PathwayToS...'" sap2010:WorkflowViewState.IdRef="WindowScope_30" InformativeScreenshot="b247e6b1cdd81d9f84f46a26bf057859" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' title='*Pathway*' /&gt;">
                                                                                                    <ui:WindowScope.Body>
                                                                                                      <ActivityAction x:TypeArguments="x:Object">
                                                                                                        <ActivityAction.Argument>
                                                                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                                                                                        </ActivityAction.Argument>
                                                                                                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_704">
                                                                                                          <Sequence.Variables>
                                                                                                            <Variable x:TypeArguments="x:String" Name="Document" />
                                                                                                          </Sequence.Variables>
                                                                                                          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_106">
                                                                                                            <TryCatch.Try>
                                                                                                              <Sequence DisplayName="Pull name from PDF" sap2010:WorkflowViewState.IdRef="Sequence_702">
                                                                                                                <Sequence.Variables>
                                                                                                                  <Variable x:TypeArguments="s:String[]" Name="certStrings" />
                                                                                                                  <Variable x:TypeArguments="x:String" Name="tempText" />
                                                                                                                  <Variable x:TypeArguments="ui:GenericValue" Name="count" />
                                                                                                                </Sequence.Variables>
                                                                                                                <ui:GetFullText DisplayName="Get full text 'client'" sap2010:WorkflowViewState.IdRef="GetFullText_12" IgnoreHidden="False">
                                                                                                                  <ui:GetFullText.Target>
                                                                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="ae68f56d58ddbc38ceaee21c067788d9" Selector="&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='client' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                                  </ui:GetFullText.Target>
                                                                                                                  <ui:GetFullText.Text>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[Document]</OutArgument>
                                                                                                                  </ui:GetFullText.Text>
                                                                                                                </ui:GetFullText>
                                                                                                                <Assign DisplayName="get all text" sap2010:WorkflowViewState.IdRef="Assign_1375">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[tempText]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[Document.ToString.Replace(vbCr, "@@").Replace(vbLf, "##")]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign DisplayName="split out the name" sap2010:WorkflowViewState.IdRef="Assign_1376">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="s:String[]">[certStrings]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="s:String[]">[Split(tempText,"@@##")]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign DisplayName="Assign Cert Name" sap2010:WorkflowViewState.IdRef="Assign_1377">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[certStrings(7)]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <Assign DisplayName="Assign Cert Date" sap2010:WorkflowViewState.IdRef="Assign_1378">
                                                                                                                  <Assign.To>
                                                                                                                    <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                                  </Assign.To>
                                                                                                                  <Assign.Value>
                                                                                                                    <InArgument x:TypeArguments="x:String">[Split(certStrings(16),":")(1)]</InArgument>
                                                                                                                  </Assign.Value>
                                                                                                                </Assign>
                                                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_75" Level="Trace" Message="[&quot;2. assigned pathwayCertInfo: &quot;+pathwayCertInfo]" />
                                                                                                              </Sequence>
                                                                                                            </TryCatch.Try>
                                                                                                            <TryCatch.Catches>
                                                                                                              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_107">
                                                                                                                <ActivityAction x:TypeArguments="s:Exception">
                                                                                                                  <ActivityAction.Argument>
                                                                                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                                                  </ActivityAction.Argument>
                                                                                                                  <Sequence DisplayName="Certificate Error" sap2010:WorkflowViewState.IdRef="Sequence_703">
                                                                                                                    <Assign DisplayName="Clear Cert Name" sap2010:WorkflowViewState.IdRef="Assign_1386">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[certName]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                    <Assign DisplayName="Clear Cert Date" sap2010:WorkflowViewState.IdRef="Assign_1387">
                                                                                                                      <Assign.To>
                                                                                                                        <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                                      </Assign.To>
                                                                                                                      <Assign.Value>
                                                                                                                        <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                                                      </Assign.Value>
                                                                                                                    </Assign>
                                                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Error" Message="[&quot;Error obtaining Pathway Certification: &quot;+exception.Message]" />
                                                                                                                  </Sequence>
                                                                                                                </ActivityAction>
                                                                                                              </Catch>
                                                                                                            </TryCatch.Catches>
                                                                                                          </TryCatch>
                                                                                                        </Sequence>
                                                                                                      </ActivityAction>
                                                                                                    </ui:WindowScope.Body>
                                                                                                  </ui:WindowScope>
                                                                                                  <ui:CloseApplication DisplayName="Close application 'AcroRd32.exe Pathways'" sap2010:WorkflowViewState.IdRef="CloseApplication_7">
                                                                                                    <ui:CloseApplication.Target>
                                                                                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="09bd9a0423476e7f3cfc305041cb101f" Selector="&lt;wnd app='acrord32.exe' cls='AcrobatSDIWindow' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                                    </ui:CloseApplication.Target>
                                                                                                  </ui:CloseApplication>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1379">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[certName]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <ui:Break sap2010:WorkflowViewState.IdRef="Break_8" />
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <If Condition="[String.IsNullOrEmpty(pathwayPerson)]" sap2010:WorkflowViewState.IdRef="If_316">
                                                                                            <If.Then>
                                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_706">
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1380">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">No Pathway Certification Available</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1381">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[pathwayPerson]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">
                                                                                                      <Literal x:TypeArguments="x:String" Value="" />
                                                                                                    </InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot;Missing or Unable to read Certification&quot;,CERTERROR}]" DataTable="[errorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_14" />
                                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot;Missing or Unable to read Certification&quot;,CERTERROR}]" DataTable="[offerErrorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_30" />
                                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Warn" Message="Certificate not found" />
                                                                                              </Sequence>
                                                                                            </If.Then>
                                                                                            <If.Else>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1425">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:String">[pathwayCertInfo]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:String">["Completed by "+pathwayPerson+" on "+Date.Parse(pathwayCertInfo).ToString("MMMM dd, yyyy")]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </If.Else>
                                                                                          </If>
                                                                                        </Sequence>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                </TryCatch>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_63" Level="Trace" Message="Got Pathway Cert Data" />
                                                                                <Sequence DisplayName="Negotiators/Pathway Info" sap2010:WorkflowViewState.IdRef="Sequence_445">
                                                                                  <Sequence DisplayName="check if Pathway Cert Person is Negotiator" sap2010:WorkflowViewState.IdRef="Sequence_417">
                                                                                    <Sequence.Variables>
                                                                                      <Variable x:TypeArguments="x:Boolean" Name="pathwayCheck" />
                                                                                    </Sequence.Variables>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_695">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Boolean">[pathwayCheck]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Compare names for exact match" sap2010:WorkflowViewState.IdRef="ForEach`1_84" Values="[negotiatorNameList]">
                                                                                      <ui:ForEach.Body>
                                                                                        <ActivityAction x:TypeArguments="x:String">
                                                                                          <ActivityAction.Argument>
                                                                                            <DelegateInArgument x:TypeArguments="x:String" Name="name" />
                                                                                          </ActivityAction.Argument>
                                                                                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_418">
                                                                                            <If Condition="[name = pathwayPerson]" sap2010:WorkflowViewState.IdRef="If_171">
                                                                                              <If.Then>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_696">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:Boolean">[pathwayCheck]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </If.Then>
                                                                                            </If>
                                                                                          </Sequence>
                                                                                        </ActivityAction>
                                                                                      </ui:ForEach.Body>
                                                                                    </ui:ForEach>
                                                                                    <If Condition="[NOT pathwayCheck]" sap2010:WorkflowViewState.IdRef="If_172">
                                                                                      <If.Then>
                                                                                        <Sequence DisplayName="compare name  for middle initial difference" sap2010:WorkflowViewState.IdRef="Sequence_607">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="s:String[]" Name="names" />
                                                                                          </Sequence.Variables>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1307">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="s:String[]">[names]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="s:String[]">[pathwayPerson.Trim.Split()]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_116" Values="[negotiatorNameList]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:String">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="newName" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_606">
                                                                                                  <Sequence.Variables>
                                                                                                    <Variable x:TypeArguments="s:String[]" Name="nameCheck" />
                                                                                                  </Sequence.Variables>
                                                                                                  <Assign DisplayName="Split name" sap2010:WorkflowViewState.IdRef="Assign_1304">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="s:String[]">[nameCheck]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="s:String[]">[newName.Split()]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                  <If Condition="[(names(0).Equals(nameCheck(0)) AND (names(names.Length -1).Equals(nameCheck(nameCheck.Length -1))))]" DisplayName="Compare first and Last names" sap2010:WorkflowViewState.IdRef="If_306">
                                                                                                    <If.Then>
                                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_605">
                                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1305">
                                                                                                          <Assign.To>
                                                                                                            <OutArgument x:TypeArguments="x:Boolean">[pathwayCheck]</OutArgument>
                                                                                                          </Assign.To>
                                                                                                          <Assign.Value>
                                                                                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                          </Assign.Value>
                                                                                                        </Assign>
                                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, newName.ToString,&quot;The middle initial does not match/exist in Certificate name&quot;}]" DataTable="[errorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_13" />
                                                                                                        <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, newName.ToString,&quot;The middle initial does not match/exist in Certificate name&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Cert Error" sap2010:WorkflowViewState.IdRef="AddDataRow_26" />
                                                                                                        <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                                                                                                      </Sequence>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_205" Text="do nothing at this time" />
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                    </If>
                                                                                  </Sequence>
                                                                                </Sequence>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_60" Level="Trace" Message="Got People Data" />
                                                                                <TryCatch DisplayName="try to get Exceptions to terms" sap2010:WorkflowViewState.IdRef="TryCatch_95">
                                                                                  <TryCatch.Try>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1311">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[exceptionsToTermsAndConditions]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("ExceptionsToTermsAndConditions").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_96">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1317">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[exceptionsToTermsAndConditions]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">None</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                  <TryCatch.Finally>
                                                                                    <If Condition="[String.IsNullOrEmpty(exceptionsToTermsAndConditions)]" sap2010:WorkflowViewState.IdRef="If_308">
                                                                                      <If.Then>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1316">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[exceptionsToTermsAndConditions]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">None</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </If.Then>
                                                                                    </If>
                                                                                  </TryCatch.Finally>
                                                                                </TryCatch>
                                                                                <TryCatch DisplayName="Try to find sub K plan information" sap2010:WorkflowViewState.IdRef="TryCatch_96">
                                                                                  <TryCatch.Try>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1315">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[subKplan]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("SubContractingPlan").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_97">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1318">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[subKplan]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                  <TryCatch.Finally>
                                                                                    <If Condition="[String.IsNullOrEmpty(subKplan)]" sap2010:WorkflowViewState.IdRef="If_309">
                                                                                      <If.Then>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1319">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[subKplan]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">N/A</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </If.Then>
                                                                                    </If>
                                                                                  </TryCatch.Finally>
                                                                                </TryCatch>
                                                                                <TryCatch DisplayName="Try to find disaster recovery" sap2010:WorkflowViewState.IdRef="TryCatch_97">
                                                                                  <TryCatch.Try>
                                                                                    <Assign DisplayName="get disaster info" sap2010:WorkflowViewState.IdRef="Assign_1323">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[disasterRecoverPurchase]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("DisasterRecoveryPurchasingProgram").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_98">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1321">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[disasterRecoverPurchase]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                  <TryCatch.Finally>
                                                                                    <If Condition="[String.IsNullOrEmpty(disasterRecoverPurchase)]" sap2010:WorkflowViewState.IdRef="If_310">
                                                                                      <If.Then>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1324">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[disasterRecoverPurchase]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">No</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </If.Then>
                                                                                    </If>
                                                                                  </TryCatch.Finally>
                                                                                </TryCatch>
                                                                                <TryCatch DisplayName="Try to find min order" sap2010:WorkflowViewState.IdRef="TryCatch_98">
                                                                                  <TryCatch.Try>
                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1327">
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:String">[xmlDocumentOutput.Element("Offers").Element("Basics").Element("BasicInformation").Element("MinOrderLimit").Value.ToString]</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </TryCatch.Try>
                                                                                  <TryCatch.Catches>
                                                                                    <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_99">
                                                                                      <ActivityAction x:TypeArguments="s:Exception">
                                                                                        <ActivityAction.Argument>
                                                                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                                        </ActivityAction.Argument>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1328">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">Not Listed</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </ActivityAction>
                                                                                    </Catch>
                                                                                  </TryCatch.Catches>
                                                                                  <TryCatch.Finally>
                                                                                    <If Condition="[String.IsNullOrEmpty(minOrderLimit)]" sap2010:WorkflowViewState.IdRef="If_311">
                                                                                      <If.Then>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1326">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">Not Listed</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                      </If.Then>
                                                                                    </If>
                                                                                  </TryCatch.Finally>
                                                                                </TryCatch>
                                                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_50" Level="Trace" Message="[&quot;completed reading in offer: &quot;+offerFile.ToString]" />
                                                                              </Sequence>
                                                                            </Sequence>
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="Completed reading in all file(s)" />
                                                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="store information in Excel file" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" Visible="False" WorkbookPath="[baseDirectory+&quot;offer-letter-records.xlsx&quot;]">
                                                                              <ui:ExcelApplicationScope.Body>
                                                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                                                  </ActivityAction.Argument>
                                                                                  <Sequence DisplayName="Store all info in Excel" sap2010:WorkflowViewState.IdRef="Sequence_474">
                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="Begin Excel file addition" />
                                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_128" Text="// This section is a work in progress. It needs to be vetted by the customer for completion." />
                                                                                    <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_473">
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_472">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="scopeOfContract" />
                                                                                        </Sequence.Variables>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;A&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Solicitation number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_139" SheetName="Sheet1" Text="[solicitationNumber]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;B&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store refrech number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_140" SheetName="Sheet1" Text="[refreshNumber]" />
                                                                                        <Sequence DisplayName="Store Contract Negotiators" sap2010:WorkflowViewState.IdRef="Sequence_712">
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1389">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_122" Values="[negotiatorList]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:String">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_711">
                                                                                                  <If Condition="[nameCount = 1]" sap2010:WorkflowViewState.IdRef="If_317">
                                                                                                    <If.Then>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1390">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1391">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[fullNameList +":"+item]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1392">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:Int32">[nameCount + 1]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <ui:ExcelWriteCell Cell="[&quot;C&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Negotiators(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_225" SheetName="Sheet1" Text="[fullNameList]" />
                                                                                        </Sequence>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;D&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store DUNS" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_141" SheetName="Sheet1" Text="[DUNSNumber]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;E&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Completion Date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_142" SheetName="Sheet1" Text="[completionDate]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;F&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Completion Time" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_143" SheetName="Sheet1" Text="[completionTime]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;G&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company Name" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_144" SheetName="Sheet1" Text="[companyName]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;H&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company Street" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_145" SheetName="Sheet1" Text="[businessStreet]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;I&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Comapny Suite" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_146" SheetName="Sheet1" Text="[businessSuite]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;J&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company City" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_147" SheetName="Sheet1" Text="[businessCity]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;K&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company State" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_148" SheetName="Sheet1" Text="[businessState]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;L&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company zip" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_149" SheetName="Sheet1" Text="[businessZipcode]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;M&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company phone" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_150" SheetName="Sheet1" Text="[businessPhone]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;N&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Company Fax" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_151" SheetName="Sheet1" Text="[businessFax]" />
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_130" Text="// @TODO: This is a dupe, what should be here or just remove it?" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;O&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store DUNS (again?)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_152" SheetName="Sheet1" Text="[DUNSNumber]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;P&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store TIN" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_153" SheetName="Sheet1" Text="[tin]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;Q&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Parent Company" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_154" SheetName="Sheet1" Text="[parentCompany]" />
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1289">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:String">[""]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_108" Values="[NAICSCodeList]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:Object">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_576">
                                                                                                <If Condition="[String.IsNullOrEmpty(NAICSCode)]" sap2010:WorkflowViewState.IdRef="If_302">
                                                                                                  <If.Then>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1287">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1288">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[NAICSCode+", "+item.ToString]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;R&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store NAISC" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_155" SheetName="Sheet1" Text="[NAICSCode]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;S&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Business &quot;size&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_156" SheetName="Sheet1" Text="[businessSize]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;T&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store business &quot;type&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_157" SheetName="Sheet1" Text="[businessType]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;U&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Contract Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_158" SheetName="Sheet1" Text="[Convert.ToDouble(estimatedContractValue).ToString(&quot;#,##0.00&quot;)]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;V&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Options Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_159" SheetName="Sheet1" Text="[basePeriodOptionsValue]" />
                                                                                        <Sequence DisplayName="Store Contract Admins" sap2010:WorkflowViewState.IdRef="Sequence_468">
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_773">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1393">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_95" Values="[contractAdmins]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:String">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_467">
                                                                                                  <If Condition="[nameCount = 1]" sap2010:WorkflowViewState.IdRef="If_187">
                                                                                                    <If.Then>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_774">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_775">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[fullNameList]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[fullNameList +":"+item]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_776">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:Int32">[nameCount]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:Int32">[nameCount + 1]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <ui:ExcelWriteCell Cell="[&quot;W&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store Administrator(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_160" SheetName="Sheet1" Text="[fullNameList]" />
                                                                                        </Sequence>
                                                                                        <Sequence DisplayName="Store Negotiators" sap2010:WorkflowViewState.IdRef="Sequence_470">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:Int32" Name="adminCount" />
                                                                                            <Variable x:TypeArguments="x:Int32" Name="negotitorCount" />
                                                                                            <Variable x:TypeArguments="x:String" Name="negotitor" />
                                                                                          </Sequence.Variables>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_777">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">[negotitorCount]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_96" Values="[negotiatorList]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:String">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_469">
                                                                                                  <If Condition="[negotitorCount = 1]" sap2010:WorkflowViewState.IdRef="If_188">
                                                                                                    <If.Then>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_778">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[negotitor]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[item]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_779">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[negotitor]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[negotitor +":"+item]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_780">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:Int32">[negotitorCount]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:Int32">[negotitorCount + 1]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <ui:ExcelWriteCell Cell="[&quot;X&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store IFF admin" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_161" SheetName="Sheet1" Text="[negotitor]" />
                                                                                        </Sequence>
                                                                                        <ui:ExcelWriteCell Cell="[&quot;Y&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store SAM exp. date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_162" SheetName="Sheet1" Text="[SAMExpirationDate]" />
                                                                                        <ui:ExcelWriteCell Cell="[&quot;Z&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store scope" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_163" SheetName="Sheet1" Text="[scopeOfContract]" />
                                                                                        <Sequence DisplayName="Store SIN info" sap2010:WorkflowViewState.IdRef="Sequence_471">
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_131" Text="// @TODO: need to make sure all SINs get stored" />
                                                                                          <ui:ExcelWriteCell Cell="[&quot;AA&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store SIN(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_164" SheetName="Sheet1" Text="TBD" />
                                                                                          <ui:ExcelWriteCell Cell="[&quot;AB&quot; + baseRowNumber.ToString + &quot;&quot;]" DisplayName="Store SIN description" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_165" SheetName="Sheet1" Text="TBD" />
                                                                                        </Sequence>
                                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_781">
                                                                                          <Assign.To>
                                                                                            <OutArgument x:TypeArguments="x:Int32">[baseRowNumber]</OutArgument>
                                                                                          </Assign.To>
                                                                                          <Assign.Value>
                                                                                            <InArgument x:TypeArguments="x:Int32">[baseRowNumber + 1]</InArgument>
                                                                                          </Assign.Value>
                                                                                        </Assign>
                                                                                        <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Hotkey close for excel" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="f4" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="True">
                                                                                          <ui:SendHotkey.Target>
                                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="502f34ef30dd1903b0376ced0d2dbc6e" Selector="&lt;wnd app='excel.exe' /&gt;" WaitForReady="INTERACTIVE" />
                                                                                          </ui:SendHotkey.Target>
                                                                                        </ui:SendHotkey>
                                                                                      </Sequence>
                                                                                    </Sequence>
                                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="Completed Excel update" />
                                                                                  </Sequence>
                                                                                </ActivityAction>
                                                                              </ui:ExcelApplicationScope.Body>
                                                                            </ui:ExcelApplicationScope>
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="Begin updating Pre-Neg Word template" />
                                                                            <Sequence DisplayName="Replace the placeholders in the Pre-Negotiation Memorandum template with the values extracted from the XML file and the SAM.gov website" sap2010:WorkflowViewState.IdRef="Sequence_488">
                                                                              <Sequence.Variables>
                                                                                <Variable x:TypeArguments="x:Boolean" Name="outputDirExsits" />
                                                                                <Variable x:TypeArguments="x:String" Name="preNegMemorandumFilename" />
                                                                              </Sequence.Variables>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_782">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[preNegMemorandumFilename]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[id + "-Pre-Neg.docx"]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <ui:PathExists DisplayName="Path exists" Exists="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                                              <If Condition="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="If_273">
                                                                                <If.Then>
                                                                                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_189" Text="Do nothing" />
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[currentDirectory+&quot;/output&quot;]" />
                                                                                </If.Else>
                                                                              </If>
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_45" Level="Trace" Message="[&quot;copy to &quot;+currentDirectory+&quot;\output\&quot; + preNegMemorandumFilename]" />
                                                                              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[currentDirectory+&quot;\output\&quot; + preNegMemorandumFilename]" DisplayName="Copy file" sap2010:WorkflowViewState.IdRef="CopyFile_6" Overwrite="False" Path="[baseDirectory+&quot;template\Pre-Negotiation-Memorandum.docx&quot;]" />
                                                                              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_46" Level="Trace" Message="copy success" />
                                                                              <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_6" />
                                                                              <Assign DisplayName="Initialize filepath for Pre-Negotiation Memorandum to populate with extracted values" sap2010:WorkflowViewState.IdRef="Assign_783">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="ui:GenericValue">[memorandumFilepath]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="ui:GenericValue">[currentDirectory+"\output\" + preNegMemorandumFilename]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="[memorandumFilepath]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_6">
                                                                                <p1:WordApplicationScope.Body>
                                                                                  <ActivityAction x:TypeArguments="ui:WordDocument">
                                                                                    <ActivityAction.Argument>
                                                                                      <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                                                    </ActivityAction.Argument>
                                                                                    <Sequence DisplayName="replace text in word doc" sap2010:WorkflowViewState.IdRef="Sequence_767">
                                                                                      <Sequence.Variables>
                                                                                        <Variable x:TypeArguments="x:String" Name="scopeOfContract">
                                                                                          <Variable.Default>
                                                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                                                          </Variable.Default>
                                                                                        </Variable>
                                                                                        <Variable x:TypeArguments="x:Int32" Name="estCost" />
                                                                                        <Variable x:TypeArguments="x:Int32" Name="decimalLocation" />
                                                                                      </Sequence.Variables>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_296" Replace="[solicitationNumber]" Search="%[solicitation_number]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_297" Replace="[refreshNumber]" Search="%[refresh_number]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_298" Replace="[Date.Parse(offerDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[offer_date]" />
                                                                                      <Sequence DisplayName="replace business info" sap2010:WorkflowViewState.IdRef="Sequence_756">
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_299" Replace="[companyName]" Search="%[company_name]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_300" Replace="[businessStreet]" Search="%[business_street]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_301" Replace="[businessCity]" Search="%[business_city]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_302" Replace="[businessState]" Search="%[business_state]" />
                                                                                        <If Condition="[String.IsNullOrEmpty(businessSuite)]" DisplayName="Suite check" sap2010:WorkflowViewState.IdRef="If_351">
                                                                                          <If.Then>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_303" Search="%[business_Suite]">
                                                                                              <p1:WordReplaceText.Replace>
                                                                                                <InArgument x:TypeArguments="x:String">
                                                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                                                </InArgument>
                                                                                              </p1:WordReplaceText.Replace>
                                                                                            </p1:WordReplaceText>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_304" Replace="[businessSuite]" Search="%[business_Suite]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_305" Replace="[businessZipcode]" Search="%[business_zipcode]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_306" Replace="[businessPhone]" Search="%[business_phone]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_307" Replace="[businessFax]" Search="%[business_fax]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_308" Replace="[DUNSNumber]" Search="%[duns_number]" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_309" Replace="[tin]" Search="%[tin]" />
                                                                                        <If Condition="[String.IsNullOrEmpty(businessSize)]" DisplayName="check business size" sap2010:WorkflowViewState.IdRef="If_352">
                                                                                          <If.Then>
                                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_755">
                                                                                              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_214" Text="// Add to review list for this document" />
                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Business Size&quot;}]" DataTable="[errorTable]" DisplayName="Add business size Error" sap2010:WorkflowViewState.IdRef="AddDataRow_33" />
                                                                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;Business Size&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add business size Error" sap2010:WorkflowViewState.IdRef="AddDataRow_34" />
                                                                                            </Sequence>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_310" Replace="[businessSize]" Search="%[business_type]" />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                      <If Condition="[String.IsNullOrEmpty(parentCompany)]" DisplayName="parent comapny check" sap2010:WorkflowViewState.IdRef="If_353">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_311" Search="%[parent_company]">
                                                                                            <p1:WordReplaceText.Replace>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </p1:WordReplaceText.Replace>
                                                                                          </p1:WordReplaceText>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_312" Replace="[parentCompany]" Search="%[parent_company]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1445">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">
                                                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                                                          </InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_128" Values="[NAICSCodeList]">
                                                                                        <ui:ForEach.Body>
                                                                                          <ActivityAction x:TypeArguments="x:Object">
                                                                                            <ActivityAction.Argument>
                                                                                              <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                            </ActivityAction.Argument>
                                                                                            <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_757">
                                                                                              <If Condition="[String.IsNullOrEmpty(NAICSCode)]" sap2010:WorkflowViewState.IdRef="If_354">
                                                                                                <If.Then>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1446">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Then>
                                                                                                <If.Else>
                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1447">
                                                                                                    <Assign.To>
                                                                                                      <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                    </Assign.To>
                                                                                                    <Assign.Value>
                                                                                                      <InArgument x:TypeArguments="x:String">[NAICSCode+", "+item.ToString]</InArgument>
                                                                                                    </Assign.Value>
                                                                                                  </Assign>
                                                                                                </If.Else>
                                                                                              </If>
                                                                                            </Sequence>
                                                                                          </ActivityAction>
                                                                                        </ui:ForEach.Body>
                                                                                      </ui:ForEach>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_313" Replace="[NAICSCode]" Search="%[naics_code]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_314" Replace="[Convert.ToDouble(estimatedContractValue).ToString(&quot;#,##0.00&quot;)]" Search="%[estimated_contract_value]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_315" Replace="[Convert.ToDouble(basePeriodOptionsValue).ToString(&quot;#,##0.00&quot;)]" Search="%[base_period_options_value]" />
                                                                                      <Sequence DisplayName="replace contract admin" sap2010:WorkflowViewState.IdRef="Sequence_759">
                                                                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep Admin for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_129" Values="[contractAdmins]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:Object">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="admin replace" sap2010:WorkflowViewState.IdRef="Sequence_758">
                                                                                                <Sequence.Variables>
                                                                                                  <Variable x:TypeArguments="x:String" Name="person" />
                                                                                                </Sequence.Variables>
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1448">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[item.ToString+Environment.NewLine +"[admin_contract_contact]"]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                                <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check string length" sap2010:WorkflowViewState.IdRef="If_355">
                                                                                                  <If.Then>
                                                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                                                        <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[admin_contract_contact]</InArgument>
                                                                                                        <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                                        <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                                                    </ui:InvokeWorkflowFile>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_316" Replace="[person]" Search="%[admin_contract_contact]" />
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_215" Text="// remove the last replacement characters" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_317" Search="%[admin_contract_contact]">
                                                                                          <p1:WordReplaceText.Replace>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </p1:WordReplaceText.Replace>
                                                                                        </p1:WordReplaceText>
                                                                                      </Sequence>
                                                                                      <Sequence DisplayName="replace negotiator" sap2010:WorkflowViewState.IdRef="Sequence_761">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="person" />
                                                                                        </Sequence.Variables>
                                                                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep Negotiators for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_130" Values="[negotiatorList]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:Object">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="negaotiator replace" sap2010:WorkflowViewState.IdRef="Sequence_760">
                                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1449">
                                                                                                  <Assign.To>
                                                                                                    <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                  </Assign.To>
                                                                                                  <Assign.Value>
                                                                                                    <InArgument x:TypeArguments="x:String">[person + Environment.NewLine + item.ToString+Environment.NewLine]</InArgument>
                                                                                                  </Assign.Value>
                                                                                                </Assign>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <If Condition="[person.ToString.Length &gt;= 255]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_356">
                                                                                          <If.Then>
                                                                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                                                <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">[negotiator_administrators], [negotiator_title], authorized to Negotiate on behalf of contractor.</InArgument>
                                                                                                <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                                <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                              </ui:InvokeWorkflowFile.Arguments>
                                                                                            </ui:InvokeWorkflowFile>
                                                                                          </If.Then>
                                                                                          <If.Else>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_318" Replace="[person]" Search="[negotiator_administrators], [negotiator_title], authorized to Negotiate on behalf of contractor." />
                                                                                          </If.Else>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_319" Replace="[IFFAdministrator]" Search="%[iff_administrators]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_320" Replace="[scopeOfContract]" Search="%[scope_of_contract]" />
                                                                                      <If Condition="[String.IsNullOrEmpty(SAMExpirationDate)]" DisplayName="check expire date" sap2010:WorkflowViewState.IdRef="If_357">
                                                                                        <If.Then>
                                                                                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_762">
                                                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_216" Text="// Add to review list for this document" />
                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;SAM Expiration Date&quot;}]" DataTable="[errorTable]" DisplayName="Add Sam date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_35" />
                                                                                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, &quot; &quot;,&quot;SAM Expiration Date&quot;}]" DataTable="[offerErrorTable]" DisplayName="Add Sam date Error" sap2010:WorkflowViewState.IdRef="AddDataRow_36" />
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_321" Replace="[Date.Parse(SAMExpirationDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[expiration_date]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1450">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:String">[completionMonth+"/"+completionDay + "/" + completionYear]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_322" Replace="[Date.Parse(completionDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[completion_date]" />
                                                                                      <Sequence DisplayName="replace SIN info" sap2010:WorkflowViewState.IdRef="Sequence_765">
                                                                                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep negostiator for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_131" Values="[sinInfo]">
                                                                                          <ui:ForEach.Body>
                                                                                            <ActivityAction x:TypeArguments="x:Object">
                                                                                              <ActivityAction.Argument>
                                                                                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                              </ActivityAction.Argument>
                                                                                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_764">
                                                                                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_217" Text="TO DO:&#xA;&#xA;remove comment code" />
                                                                                                <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                                                                                  <ui:CommentOut.Body>
                                                                                                    <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_763">
                                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_323" Replace="[item.ToString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                    </Sequence>
                                                                                                  </ui:CommentOut.Body>
                                                                                                </ui:CommentOut>
                                                                                                <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_358">
                                                                                                  <If.Then>
                                                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                                                        <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[Sin_info]</InArgument>
                                                                                                        <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[item.ToString+Environment.NewLine +"[SIN_info]"]</InArgument>
                                                                                                        <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                                                    </ui:InvokeWorkflowFile>
                                                                                                  </If.Then>
                                                                                                  <If.Else>
                                                                                                    <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_324" Replace="[item.toString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                  </If.Else>
                                                                                                </If>
                                                                                              </Sequence>
                                                                                            </ActivityAction>
                                                                                          </ui:ForEach.Body>
                                                                                        </ui:ForEach>
                                                                                        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_218" Text="// remove the last replacement characters" />
                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_325" Search="%[Sin_info]">
                                                                                          <p1:WordReplaceText.Replace>
                                                                                            <InArgument x:TypeArguments="x:String">
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </InArgument>
                                                                                          </p1:WordReplaceText.Replace>
                                                                                        </p1:WordReplaceText>
                                                                                      </Sequence>
                                                                                      <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_72" Level="Trace" Message="[&quot;pathwayCertInfo: &quot;+pathwayCertInfo]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_326" Replace="[pathwayCertInfo]" Search="%[Pathway_completed_by_date]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_327" Replace="[subcontractingPlan]" Search="%[subcontracting_plan]" />
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1451">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Int32">[decimalLocation]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Int32">[estimatedContractValue.Length]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_219" Text="Should the estCost be the cost from the XML or the 20 year cost (i.e. cost from XML*4)?" />
                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1452">
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Int32">[estCost]</OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Int32">[Convert.ToInt32(estimatedContractValue.Substring(0,decimalLocation))]</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                      <If Condition="[estCost &gt; 10000000]" DisplayName="EEO check" sap2010:WorkflowViewState.IdRef="If_359">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_328" Replace="☐ N/A  X Required" Search="%[eeo_clr]" />
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_329" Replace="X N/A ☐ Required" Search="%[eeo_clr]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <If Condition="[disasterRecoverPurchase = &quot;Yes&quot;]" DisplayName="If recovery purchase" sap2010:WorkflowViewState.IdRef="If_360">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_330" Replace="X Yes   ☐ No" Search="%[recovery_purchase]" />
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_331" Replace="☐ Yes   X No" Search="%[recovery_purchase]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <Sequence DisplayName="check cooperative purchase" sap2010:WorkflowViewState.IdRef="Sequence_766">
                                                                                        <If Condition="[coopPurchase = &quot;True&quot;]" DisplayName="If  cooperative purchase yes" sap2010:WorkflowViewState.IdRef="If_361">
                                                                                          <If.Then>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_332" Replace="☐ N/A  X Yes   ☐ No" Search="%[cooperative_purchase]" />
                                                                                          </If.Then>
                                                                                        </If>
                                                                                        <If Condition="[coopPurchase = &quot;False&quot;]" DisplayName="If  cooperative purchase no" sap2010:WorkflowViewState.IdRef="If_362">
                                                                                          <If.Then>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_333" Replace="☐ N/A ☐ Yes   X No" Search="%[cooperative_purchase]" />
                                                                                          </If.Then>
                                                                                        </If>
                                                                                        <If Condition="[coopPurchase = &quot;NA&quot;]" DisplayName="If  cooperative purchase NA" sap2010:WorkflowViewState.IdRef="If_363">
                                                                                          <If.Then>
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_334" Replace="X N/A ☐ Yes  ☐ No" Search="%[cooperative_purchase]" />
                                                                                          </If.Then>
                                                                                        </If>
                                                                                      </Sequence>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_335" Replace="[Now.ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[exclusion_check_date]" />
                                                                                      <If Condition="[personExclusion OR dunsExclusion]" sap2010:WorkflowViewState.IdRef="If_364">
                                                                                        <If.Then>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_336" Replace="X does ☐ does not" Search="%[on_excluded_list]" />
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_337" Replace="☐ does X does not" Search="%[on_excluded_list]" />
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_338" Replace="[exceptionsToTermsAndConditions]" Search="%[exceptionsTerms_value]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_339" Replace="[subKplan]" Search="%[SubKContractingPlan]" />
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_340" Replace="[disasterRecoverPurchase]" Search="%[diasasterRecovery_value]" />
                                                                                      <If Condition="[minOrderLimit.Equals(&quot;Not Listed&quot;)]" DisplayName="add $ ?" sap2010:WorkflowViewState.IdRef="If_365">
                                                                                        <If.Then>
                                                                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_220" Text="// no-op" />
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1453">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[minOrderLimit]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">["$"+Convert.ToDouble(minOrderLimit).ToString("#,##0.00")]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </If.Else>
                                                                                      </If>
                                                                                      <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_341" Replace="[minOrderLimit]" Search="%[minimum_limit_value]" />
                                                                                      <Sequence DisplayName="write error table to end of Word Doc" sap2010:WorkflowViewState.IdRef="Sequence_772">
                                                                                        <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="end" KeyModifiers="Ctrl" SendWindowMessages="False" SpecialKey="True">
                                                                                          <ui:SendHotkey.Target>
                                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                                          </ui:SendHotkey.Target>
                                                                                        </ui:SendHotkey>
                                                                                        <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayMS="2000" DisplayName="Send Hotkey" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_8" Key="nb" KeyModifiers="Alt" SendWindowMessages="False" SpecialKey="False">
                                                                                          <ui:SendHotkey.Target>
                                                                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
                                                                                          </ui:SendHotkey.Target>
                                                                                        </ui:SendHotkey>
                                                                                        <p1:WordInsertDataTable Bookmark="{x:Null}" OccurrenceIndex="{x:Null}" Text="{x:Null}" DataTable="[offerErrorTable]" DisplayName="Insert DataTable" sap2010:WorkflowViewState.IdRef="WordInsertDataTable_1" Position="End" />
                                                                                      </Sequence>
                                                                                    </Sequence>
                                                                                  </ActivityAction>
                                                                                </p1:WordApplicationScope.Body>
                                                                              </p1:WordApplicationScope>
                                                                            </Sequence>
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="Completed updating Pre-Neg Word template" />
                                                                            <Sequence DisplayName="Output Price-Neg" sap2010:WorkflowViewState.IdRef="Sequence_739">
                                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_40" Level="Info" Message="Begin updating Price-Neg Word template" />
                                                                              <Sequence DisplayName="Replace the placeholders in the Pre-Negotiation Memorandum template with the values extracted from the XML file and the SAM.gov website" sap2010:WorkflowViewState.IdRef="Sequence_754">
                                                                                <Sequence.Variables>
                                                                                  <Variable x:TypeArguments="x:String" Name="priceNegMemorandumFilename" />
                                                                                  <Variable x:TypeArguments="x:Boolean" Name="outputDirExsits" />
                                                                                </Sequence.Variables>
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1437">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:String">[priceNegMemorandumFilename]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:String">[id + "-Price-Neg.docx"]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:PathExists DisplayName="Path exists" Exists="[outputDirExsits]" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="[currentDirectory+&quot;/output&quot;]" PathType="Folder" />
                                                                                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[currentDirectory+&quot;\output\&quot; + priceNegMemorandumFilename]" DisplayName="Copy file" sap2010:WorkflowViewState.IdRef="CopyFile_7" Overwrite="False" Path="[baseDirectory+&quot;template\PriceNegTemplate.docx&quot;]" />
                                                                                <Delay Duration="00:00:05" sap2010:WorkflowViewState.IdRef="Delay_7" />
                                                                                <Assign DisplayName="Initialize filepath for Pre-Negotiation Memorandum to populate with extracted values" sap2010:WorkflowViewState.IdRef="Assign_1438">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="ui:GenericValue">[memorandumFilepath]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="ui:GenericValue">[currentDirectory+"\output\" + priceNegMemorandumFilename]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <p1:WordApplicationScope DisplayName="Word Application Scope" FilePath="[memorandumFilepath]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_7">
                                                                                  <p1:WordApplicationScope.Body>
                                                                                    <ActivityAction x:TypeArguments="ui:WordDocument">
                                                                                      <ActivityAction.Argument>
                                                                                        <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                                                      </ActivityAction.Argument>
                                                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_753">
                                                                                        <Sequence.Variables>
                                                                                          <Variable x:TypeArguments="x:String" Name="contract">
                                                                                            <Variable.Default>
                                                                                              <Literal x:TypeArguments="x:String" Value="" />
                                                                                            </Variable.Default>
                                                                                          </Variable>
                                                                                        </Sequence.Variables>
                                                                                        <Sequence DisplayName="replace text in word doc" sap2010:WorkflowViewState.IdRef="Sequence_752">
                                                                                          <Sequence.Variables>
                                                                                            <Variable x:TypeArguments="x:String" Name="scopeOfContract">
                                                                                              <Variable.Default>
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </Variable.Default>
                                                                                            </Variable>
                                                                                            <Variable x:TypeArguments="x:Int32" Name="estCost" />
                                                                                            <Variable x:TypeArguments="x:Int32" Name="decimalLocation" />
                                                                                          </Sequence.Variables>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_342" Replace="[solicitationNumber]" Search="%[solicitation_number]" />
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_267" Replace="[refreshNumber]" Search="%[refresh_number]" />
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_268" Replace="[Date.Parse(offerDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[offer_date]" />
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_269" Replace="[companyName]" Search="%[company_name]" />
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1439">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">
                                                                                                <Literal x:TypeArguments="x:String" Value="" />
                                                                                              </InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_124" Values="[NAICSCodeList]">
                                                                                            <ui:ForEach.Body>
                                                                                              <ActivityAction x:TypeArguments="x:Object">
                                                                                                <ActivityAction.Argument>
                                                                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                </ActivityAction.Argument>
                                                                                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_742">
                                                                                                  <If Condition="[String.IsNullOrEmpty(NAICSCode)]" sap2010:WorkflowViewState.IdRef="If_346">
                                                                                                    <If.Then>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1440">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Then>
                                                                                                    <If.Else>
                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1441">
                                                                                                        <Assign.To>
                                                                                                          <OutArgument x:TypeArguments="x:String">[NAICSCode]</OutArgument>
                                                                                                        </Assign.To>
                                                                                                        <Assign.Value>
                                                                                                          <InArgument x:TypeArguments="x:String">[NAICSCode+", "+item.ToString]</InArgument>
                                                                                                        </Assign.Value>
                                                                                                      </Assign>
                                                                                                    </If.Else>
                                                                                                  </If>
                                                                                                </Sequence>
                                                                                              </ActivityAction>
                                                                                            </ui:ForEach.Body>
                                                                                          </ui:ForEach>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_283" Replace="[NAICSCode]" Search="%[naics_code]" />
                                                                                          <Sequence DisplayName="replace negotiator" sap2010:WorkflowViewState.IdRef="Sequence_746">
                                                                                            <Sequence.Variables>
                                                                                              <Variable x:TypeArguments="x:String" Name="person" />
                                                                                            </Sequence.Variables>
                                                                                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep Negotiators for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_126" Values="[negotiatorList]">
                                                                                              <ui:ForEach.Body>
                                                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                                                  <ActivityAction.Argument>
                                                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                  </ActivityAction.Argument>
                                                                                                  <Sequence DisplayName="negaotiator replace" sap2010:WorkflowViewState.IdRef="Sequence_745">
                                                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1443">
                                                                                                      <Assign.To>
                                                                                                        <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                      </Assign.To>
                                                                                                      <Assign.Value>
                                                                                                        <InArgument x:TypeArguments="x:String">[person + Environment.NewLine + item.ToString+Environment.NewLine]</InArgument>
                                                                                                      </Assign.Value>
                                                                                                    </Assign>
                                                                                                  </Sequence>
                                                                                                </ActivityAction>
                                                                                              </ui:ForEach.Body>
                                                                                            </ui:ForEach>
                                                                                            <If Condition="[person.ToString.Length &gt;= 255]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_348">
                                                                                              <If.Then>
                                                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">[negotiator_administrators], [negotiator_title], authorized to Negotiate and Sign on behalf of contractor.</InArgument>
                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                                                </ui:InvokeWorkflowFile>
                                                                                              </If.Then>
                                                                                              <If.Else>
                                                                                                <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_288" Replace="[person]" Search="[negotiator_administrators], [negotiator_title], authorized to Negotiate and Sign on behalf of contractor." />
                                                                                              </If.Else>
                                                                                            </If>
                                                                                          </Sequence>
                                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1444">
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:String">[completionMonth+"/"+completionDay + "/" + completionYear]</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_292" Replace="[Date.Parse(completionDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[completion_date]" />
                                                                                          <Sequence DisplayName="replace SIN info" sap2010:WorkflowViewState.IdRef="Sequence_750">
                                                                                            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="prep negostiator for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_127" Values="[sinInfo]">
                                                                                              <ui:ForEach.Body>
                                                                                                <ActivityAction x:TypeArguments="x:Object">
                                                                                                  <ActivityAction.Argument>
                                                                                                    <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                  </ActivityAction.Argument>
                                                                                                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_749">
                                                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_212" Text="TO DO:&#xA;&#xA;remove comment code" />
                                                                                                    <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                                                                                      <ui:CommentOut.Body>
                                                                                                        <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_748">
                                                                                                          <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_293" Replace="[item.ToString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                        </Sequence>
                                                                                                      </ui:CommentOut.Body>
                                                                                                    </ui:CommentOut>
                                                                                                    <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_350">
                                                                                                      <If.Then>
                                                                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                                                            <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[Sin_info]</InArgument>
                                                                                                            <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[item.ToString+Environment.NewLine +"[SIN_info]"]</InArgument>
                                                                                                            <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[memorandumFilepath]</InArgument>
                                                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                                                        </ui:InvokeWorkflowFile>
                                                                                                      </If.Then>
                                                                                                      <If.Else>
                                                                                                        <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_294" Replace="[item.toString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                      </If.Else>
                                                                                                    </If>
                                                                                                  </Sequence>
                                                                                                </ActivityAction>
                                                                                              </ui:ForEach.Body>
                                                                                            </ui:ForEach>
                                                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_213" Text="// remove the last replacement characters" />
                                                                                            <p1:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_295" Search="%[Sin_info]">
                                                                                              <p1:WordReplaceText.Replace>
                                                                                                <InArgument x:TypeArguments="x:String">
                                                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                                                </InArgument>
                                                                                              </p1:WordReplaceText.Replace>
                                                                                            </p1:WordReplaceText>
                                                                                          </Sequence>
                                                                                        </Sequence>
                                                                                      </Sequence>
                                                                                    </ActivityAction>
                                                                                  </p1:WordApplicationScope.Body>
                                                                                </p1:WordApplicationScope>
                                                                              </Sequence>
                                                                              <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_41" Level="Info" Message="Completed updating Price-Neg Word template" />
                                                                            </Sequence>
                                                                            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope - error excel file" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" Visible="False" WorkbookPath="[currentDirectory+&quot;/output/&quot;+id+&quot;.xls&quot;]">
                                                                              <ui:ExcelApplicationScope.Body>
                                                                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                                                                  <ActivityAction.Argument>
                                                                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                                                                  </ActivityAction.Argument>
                                                                                  <ui:ExcelWriteRange AddHeaders="True" DataTable="[offerErrorTable]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[id]" StartingCell="A1" />
                                                                                </ActivityAction>
                                                                              </ui:ExcelApplicationScope.Body>
                                                                            </ui:ExcelApplicationScope>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1087">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Int32">[totalFilesChecked]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Int32">[totalFilesChecked + 1]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </Sequence>
                                                                        </TryCatch.Try>
                                                                        <TryCatch.Catches>
                                                                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_85">
                                                                            <ActivityAction x:TypeArguments="s:Exception">
                                                                              <ActivityAction.Argument>
                                                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                              </ActivityAction.Argument>
                                                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_416">
                                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1088">
                                                                                  <Assign.To>
                                                                                    <OutArgument x:TypeArguments="x:Int32">[totalFilesChecked]</OutArgument>
                                                                                  </Assign.To>
                                                                                  <Assign.Value>
                                                                                    <InArgument x:TypeArguments="x:Int32">[totalFilesChecked + 1]</InArgument>
                                                                                  </Assign.Value>
                                                                                </Assign>
                                                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Error" Message="[&quot;Read/Write of file &quot;+id+&quot; failed.    &quot;+exception.Message]" />
                                                                                <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{companyName, DUNSNumber, exception.Message, FILEERROR}]" DataTable="[errorTable]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                                                              </Sequence>
                                                                            </ActivityAction>
                                                                          </Catch>
                                                                        </TryCatch.Catches>
                                                                      </TryCatch>
                                                                    </ActivityAction>
                                                                  </ui:ForEach.Body>
                                                                </ui:ForEach>
                                                                <FlowStep.Next>
                                                                  <x:Reference>__ReferenceID7</x:Reference>
                                                                </FlowStep.Next>
                                                              </FlowStep>
                                                            </FlowDecision.True>
                                                            <FlowDecision.False>
                                                              <x:Reference>__ReferenceID7</x:Reference>
                                                            </FlowDecision.False>
                                                          </FlowDecision>
                                                        </FlowStep.Next>
                                                      </FlowStep>
                                                    </FlowDecision.False>
                                                  </FlowDecision>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowDecision.True>
                                            <FlowDecision.False>
                                              <FlowStep x:Name="__ReferenceID21" sap2010:WorkflowViewState.IdRef="FlowStep_46">
                                                <Flowchart DisplayName="E-mail" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                                                  <Flowchart.Variables>
                                                    <Variable x:TypeArguments="x:String" Name="summary">
                                                      <Variable.Default>
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </Variable.Default>
                                                    </Variable>
                                                    <Variable x:TypeArguments="snm:MailMessage" Name="mail" />
                                                    <Variable x:TypeArguments="x:String" Name="tempBody">
                                                      <Variable.Default>
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </Variable.Default>
                                                    </Variable>
                                                  </Flowchart.Variables>
                                                  <Flowchart.StartNode>
                                                    <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_52">
                                                      <Assign DisplayName="initialize mail message" sap2010:WorkflowViewState.IdRef="Assign_770">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="snm:MailMessage">[mail]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="snm:MailMessage">[new System.Net.Mail.MailMessage()]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <FlowStep.Next>
                                                        <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_51">
                                                          <Assign DisplayName="create email body" sap2010:WorkflowViewState.IdRef="Assign_768">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;Hello Supervisor,&lt;br&gt;&lt;br&gt;"+
totalFilesChecked.ToString + " Pre-Negotiation Memoranda were generated.&lt;br&gt;&lt;/p&gt;"]</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <FlowStep.Next>
                                                            <FlowDecision x:Name="__ReferenceID9" Condition="[errorTable.Rows.Count &gt; 1]" DisplayName="Any Errors?" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                                              <FlowDecision.True>
                                                                <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_80">
                                                                  <Sequence DisplayName="updating - Send Issues Email" sap2010:WorkflowViewState.IdRef="Sequence_541">
                                                                    <Sequence.Variables>
                                                                      <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                      <Variable x:TypeArguments="sd:DataRow" Name="row" />
                                                                      <Variable x:TypeArguments="x:String" Name="tempError" />
                                                                      <Variable x:TypeArguments="x:String" Name="tempCompany" />
                                                                      <Variable x:TypeArguments="x:String" Name="tempCause" />
                                                                      <Variable x:TypeArguments="x:String" Name="tempDUNS" />
                                                                      <Variable x:TypeArguments="x:String" Name="newDUNS" />
                                                                    </Sequence.Variables>
                                                                    <Assign DisplayName="create email body" sap2010:WorkflowViewState.IdRef="Assign_1296">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempBody +
"&lt;p&gt; The following items may need further action.&lt;br&gt;&lt;br&gt;&lt;/p&gt;"]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1124">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <While DisplayName="While more errors" sap2010:WorkflowViewState.IdRef="While_5">
                                                                      <While.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="finalError" />
                                                                      </While.Variables>
                                                                      <While.Condition>[count &lt; errorTable.Rows.Count]</While.Condition>
                                                                      <Sequence DisplayName="Error Builder" sap2010:WorkflowViewState.IdRef="Sequence_556">
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1310">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="sd:DataRow">[errorTable.Rows(count)]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1190">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[tempError]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[row("ErrorType").ToString]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1192">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[tempCompany]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[row("Company").ToString]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1193">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[tempDUNS]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[row("DUNS").ToString]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1194">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[tempCause]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[row("Person").ToString]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                        <If Condition="[(count + 1) &lt; errorTable.Rows.Count]" DisplayName="Check for a DUNS number in the error" sap2010:WorkflowViewState.IdRef="If_285">
                                                                          <If.Then>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_553">
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1196">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="sd:DataRow">[errorTable.Rows(count + 1)]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1197">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[newDUNS]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[row("DUNS").ToString]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_557">
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1201">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[newDUNS]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">["0"]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                        <If Condition="[String.IsNullOrEmpty(finalError)]" DisplayName="Was there already an errror?" sap2010:WorkflowViewState.IdRef="If_294">
                                                                          <If.Then>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1237">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:String">[finalError]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:String">[tempError]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </If.Then>
                                                                          <If.Else>
                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1238">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:String">[finalError]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">[finalError + "  AND "+tempError]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </If.Else>
                                                                        </If>
                                                                        <If Condition="[newDUNS.Trim.Equals(tempDUNS.Trim)]" sap2010:WorkflowViewState.IdRef="If_286">
                                                                          <If.Else>
                                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_559">
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1212">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempBody +
"&lt;p&gt;"+finalError+" found in "+ tempCompany + 
", DUNS: "+tempDUNS+", Cause: "+tempCause+
"&lt;br&gt;&lt;/p&gt;"]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1205">
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:String">[finalError]</OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </Sequence>
                                                                          </If.Else>
                                                                        </If>
                                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_1233">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </While>
                                                                  </Sequence>
                                                                  <FlowStep.Next>
                                                                    <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_54">
                                                                      <Assign DisplayName="add Privicy &quot;footer&quot;" sap2010:WorkflowViewState.IdRef="Assign_797">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempBody + System.Environment.NewLine +System.Environment.NewLine + System.Environment.NewLine +
"&lt;p style="+Chr(34) +"color:#B2B2B2"+Chr(34) +"&gt;This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to which they are addressed.&lt;br&gt;&lt;br&gt;"+
"If you are not the intended recipient, you are notified that disclosing, copying, forwarding or otherwise distributing or taking any action in reliance on the contents of this information is strictly prohibited. If you suspect a potential IT security incident or observe inappropriate use of GSA systems, report it immediately to &lt;a href="+Chr(34) +"mailto:ITServiceDesk@gsa.gov?subject=Potential%20IT%20security%20incident"+Chr(34) +"&gt;ITServiceDesk@gsa.gov&lt;/a&gt; or 866-450-5250.&lt;/p&gt;"]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <FlowStep.Next>
                                                                        <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_47">
                                                                          <Sequence DisplayName="Send E-Mail" sap2010:WorkflowViewState.IdRef="Sequence_461">
                                                                            <Assign DisplayName="assign email body to mail" sap2010:WorkflowViewState.IdRef="Assign_765">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:String">[mail.Body]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:String">[tempBody]</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <Assign DisplayName="set email subject" sap2010:WorkflowViewState.IdRef="Assign_766">
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:String">[mail.Subject]</OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:String">Process New Offers</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" Password="{x:Null}" sap2010:Annotation.AnnotationText="Since GSA uses gmail, the gmail account being used will need to be set up to allow for the bot to send an email message via this activity.&#xA;&#xA;If this is not done, then an error will be thrown.&#xA;&#xA;If this can not be done, then this will need to be changed to send the email via mail.google.com  This will require either the bot to log into the account, or that the gmail account to be used be logged into the web browser already." Body="[summary]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[returnEmail]" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" MailMessage="[mail]" Name="[emailName]" Port="25" SecureConnection="None" Server="smtp.gsa.gov" Subject="Process New Offers" TimeoutMS="90000" To="[configDictionary(&quot;successEmailAddress&quot;).ToString]">
                                                                              <ui:SendMail.Files>
                                                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                                                              </ui:SendMail.Files>
                                                                            </ui:SendMail>
                                                                            <InvokeMethod DisplayName="actually send the email" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Dispose">
                                                                              <InvokeMethod.TargetObject>
                                                                                <InArgument x:TypeArguments="snm:MailMessage">[mail]</InArgument>
                                                                              </InvokeMethod.TargetObject>
                                                                            </InvokeMethod>
                                                                          </Sequence>
                                                                        </FlowStep>
                                                                      </FlowStep.Next>
                                                                    </FlowStep>
                                                                  </FlowStep.Next>
                                                                </FlowStep>
                                                              </FlowDecision.True>
                                                              <FlowDecision.False>
                                                                <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_48">
                                                                  <Sequence DisplayName="Build All Good Email" sap2010:WorkflowViewState.IdRef="Sequence_460">
                                                                    <Sequence.Variables>
                                                                      <Variable x:TypeArguments="x:Int32" Name="count" />
                                                                    </Sequence.Variables>
                                                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_195" Text="TBD if there is anything more needed in the email no errors were detected" />
                                                                  </Sequence>
                                                                  <FlowStep.Next>
                                                                    <x:Reference>__ReferenceID8</x:Reference>
                                                                  </FlowStep.Next>
                                                                </FlowStep>
                                                              </FlowDecision.False>
                                                            </FlowDecision>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowStep.Next>
                                                    </FlowStep>
                                                  </Flowchart.StartNode>
                                                  <x:Reference>__ReferenceID9</x:Reference>
                                                  <x:Reference>__ReferenceID10</x:Reference>
                                                  <x:Reference>__ReferenceID11</x:Reference>
                                                  <x:Reference>__ReferenceID12</x:Reference>
                                                  <x:Reference>__ReferenceID13</x:Reference>
                                                  <x:Reference>__ReferenceID8</x:Reference>
                                                  <x:Reference>__ReferenceID14</x:Reference>
                                                </Flowchart>
                                              </FlowStep>
                                            </FlowDecision.False>
                                          </FlowDecision>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowDecision.False>
                      </FlowDecision>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                <ui:Comment DisplayName="Stop" sap2010:WorkflowViewState.IdRef="Comment_79" Text="// User declined to start the process" />
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <x:Reference>__ReferenceID18</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_21">
      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_103" Text="// Now to loop through the ORDs and gather information from SAM.gov&#xA;&#xA;The information will be read in and then writen out to the Pre-Neg. &#xA;The results form the SAM calls will be kept as verification of when the call was made and the results in case of any differences.&#xA;&#xA;The automation will try to get the information 2 times in case there was any error in reading the file. It will try to call out to the web servies 3 times in case of time out." />
    </FlowStep>
    <x:Reference>__ReferenceID19</x:Reference>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID21</x:Reference>
    <x:Reference>__ReferenceID22</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID23</x:Reference>
    <x:Reference>__ReferenceID24</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_70">
      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_188" Text="The directory structure is that every offer will be in a seperate directory. In that directory will be the XML file named &quot;Offer (#####).xml&quot; where ##### is the offer number that will be used as an idientifer. There may also be a &quot;Pathway Certificate&quot; PDF file (optional). Any offer specific output produced from the bot will be written into the directory in a sub-directory named &quot;output&quot;." />
    </FlowStep>
    <x:Reference>__ReferenceID25</x:Reference>
    <x:Reference>__ReferenceID26</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID27</x:Reference>
    <x:Reference>__ReferenceID28</x:Reference>
    <x:Reference>__ReferenceID29</x:Reference>
    <x:Reference>__ReferenceID30</x:Reference>
    <x:Reference>__ReferenceID31</x:Reference>
    <sads:DebugSymbol.Symbol>d1JDOlxVc2Vyc1xta2ltZXJ5XERvY3VtZW50c1xHU0FcUlBBLU9TUy1tYXN0ZXJcRkFTIFBTUyBOZXcgT2ZmZXJcTWFpbkZsb3djaGFydC54YW1siQ9WA74hDwIBAV8zXzYCAQtgNGBLAgEKYTRhPwIBCWI0YlMCAQhnNGd8AgEHaTNpNgIBBmozajYCAQVrPmtXAgEEbk5udQIBA282b0ACAQJ1CXXoAQMBhhV3PHdeAwGEFZ0hEZ0hjAEDAYMVehGWARwDAe0UmQEVjwIgAwG1FJECSJECVgMBsxScAh3gAigDAYYU4wIh4wKDDQMBgxTmAiWVA0ADAYsTmAMpnwMyAwGHE6EDW6EDhAEDAYQT8h4xiCE9AwH/EaQDMa8DPAMB8BGxA2SxA3cDAe4RwwM55QNEAwHdEecDbOcDhgEDAdwRtAM5uwNCAwHXEeoDQd8eTgIBEZQCHZcCKAIBDHW7AXXWAQMBiRV1SHVYAwGHFXsTe8kCAwGCFXwTgAEkAwH9FIEBE4UBJAMB+BSGAROVAR4DAe4UoQFQoQFpAwG2FKMBF6oBIAMB6RSrARfIASADAeUUyQEXjgIiAwG3FJ4CTp4CWwMBiBSfAlCfApMBAwGHFKECH6cCNwMBqxSoAh+vAigDAaYUsAIftwIoAwGhFLgCH78CKAMBnBTAAh/HAigDAZcUyAIfzwIoAwGTFNACH9cCKAMBjhTYAh/fAigDAYkU4wKqAeMCuAEDAYQU5gKkAuYC3QIDAYEU7AIrkgM2AwGME50DVp0DfwMBihOaA1eaA2QDAYgT9h459h5oAwGBEvweOfweaAMBgBKCHzeJH0ADAYATjB87lB9EAwH7EpYfbZYfjQEDAfoS8CBD9SBOAwH4EsAgR8kgUAMB9BLMIEvnIFYDAdgSmR9DvSBOAwGCEqUDM6wDPAMB+RGtAzOtA9kBAwH2Ea4DM64D8gEDAfERxQM9zwNIAwHmEdcDQeEDTAMB3hG5A2O5A3YDAdoRtgNktgNzAwHYEeoD8gLqA/8CAwHVEfADR9weUgIBEpUCH5UC/AECAQ+WAh+WAr0BAgENfKUBfLABAwGBFX4/fkwDAf8UfLcBfMIBAwH+FIEBowGBAa0BAwH8FIMBP4MBTAMB+hSBAbQBgQG+AQMB+RSHARWMASUDAfMUjQEVlAEeAwHvFKgBQ6gBSAMB7BSlAUSlAVADAeoUrQFDrQFRAwHmFMsBG/gBJgMBwBSAAh+KAioDAbgUpQJ4pQKKAQMBsRShAswBoQLiAQMBsBSkAmSkAnIDAa4UowJgowJsAwGsFK0CSq0CcwMBqRSqAkuqAloDAacUtQJKtQKDAQMBpBSyAkuyAlYDAaIUvQJKvQJ/AwGfFLoCS7oCWwMBnRTFAkrFAnoDAZoUwgJLwgJWAwGYFM0CTM0CiQEDAZYUygJNygJeAwGUFNUCStUCeQMBkRTSAkvSAlgDAY8U3QJK3QJyAwGMFNoCS9oCVgMBihTtAi3tAs0BAwGAFO4CLZEDOAMBjROHH2mHH4wBAwGDE4QfaoQfcAMBgROOH2eOH3EDAfwS9CBF9CDSAQMB+RLCIHPCIH0DAfUSzSBN1CBWAwHvEtUgTdwgVgMB6xLdIE3hIFsDAdwS4iBN5iBcAwHZEqMfRasfTgMB0xKsH0WzH04DAc8StB9FvCBNAwGDEqoDXqoDegMB/BGnA1+nA3EDAfoRrQOhAa0D1gEDAfcRrgNtrgOAAQMB9BGuA7UBrgPdAQMB8hHGAz/GA9wBAwHrEccDP84DSAMB5xHYA0PfA0wDAeIR4AND4APnAQMB3xHyA0vFHlYCASXNHk/YHloCAROVArQBlQLqAQIBEJYCjgGWAroBAgEOigFbigFnAwH2FIkBTYkBWgMB9BSSAUCSAUkDAfIUjwFBjwFOAwHwFMwBHdwBLQMB3hTdAR3dAb8BAwHZFN4BHd4B6AEDAdMU3wEd6gEiAwHNFOsBHesB/gEDAccU7AEd9wEiAwHBFIECIYgCKgMBvBSJAiGJAuIBAwG5FO8CL5ADOgMBjhPSIHjSIIIBAwHyEs8gec8ghAEDAfAS2iB42iCKAQMB7hLXIHnXIIcBAwHsEt0gpgfdIOQHAwHpEt0gmwfdIKIHAwHoEt0g/gTdIIkFAwHmEt0g/AbdIJAHAwHlEt0gxQXdINQFAwHjEt0gwQbdIMUGAwHiEt0g5QbdIPMGAwHhEt0goAbdIKgGAwHfEt0grgbdILsGAwHdEuQgf+QghQEDAdoSpR9xpR97AwHUErEfb7EfcAMB0hKuH3CuH3cDAdASuR9HuyBSAwGFErgfWLgfegMBhBLGA60BxgPZAQMB7BHMA2zMA58BAwHqEckDbckDeAMB6BHdA3DdA3YDAeUR2gNx2gN8AwHjEeADsQHgA+QBAwHgEYMEfYMEhAECASiEBH2EBIQBAgEnlASGAZQEnQECASafBE2fBNgBAwHTEaAETaAE4A0DAdARoQRNoQSnAgMBzxGiBE2pBFYDAcsRqgRNsQRWAwHHEbIETbkEVgMBvxG6BE3HBFgDAbIRyARNyRdYAwHmBsoXTcoX4AEDAeQGyxdN3RloAwG7BN4ZTd4Z5AEDAbkE3xlN7RxYAwG/Ae4cTe4c6AEDAb0B7xxNsh5YAgE4sx5NvB5oAgEuvR5NxB5WAgEpzh5R1R5aAgEg1h5R1h6UAgIBHNceUdcenQICARTMAeQEzAHqBAMB5BTMAY4DzAGeAwMB4hTMAcsEzAHZBAMB4BTMAeADzAGFBAMB3xTdAY4B3QGjAQMB3BTdAa4B3QG8AQMB2hTeAb0B3gHLAQMB1xTeAdwB3gHlAQMB1hTeAW7eAYMBAwHUFN8BK98BZQMBzhThASHoASoDAc8U6wHGAesB1AEDAcsU6wHlAesB+wEDAcoU6wF36wGMAQMByBTsASvsAYMBAwHCFO4BIfUBKgMBwxSGAk2GAlEDAb8UgwJOgwJaAwG9FIkCkAGJAt8BAwG6FPMCMfMC2wEDAfwT9AIx9ALXAQMB+BP1AjH1As4BAwH0E/YCMfYCvQEDAfAT9wIx9wLTAQMB7BP4AjH4AtMBAwHoE/kCMfkCzQEDAeQT+gIx+gLSAQMB4BP7AjH7As8BAwHcE/wCMfwCzQEDAdgT/QIx/QLPAQMB1BP+AjH+AssBAwHQE/8CMf8CzwEDAcwTgAMxgAPLAQMByBOBAzGBA7UBAwHHE4IDMYIDxgEDAcMTgwMxgwO7AQMBvxOEAzGEA9EBAwG7E4UDMYUDvwEDAbcThgMxhgPbAQMBsxOHAzGHA9sBAwGvE4gDMYgD2wEDAasTiQMxiQPPAQMBpxOKAzGKA9QBAwGjE4sDMYsDyAEDAZ8TjAMxjAPVAQMBmxONAzGNA8gBAwGXE44DMY4DvwEDAZMTjwMxjwPUAQMBjxO6H0nBH1IDAcsSwh9JyR9SAwHHEsofSdEfUgMBwxLSH0nZH1IDAb8S2h9J4R9SAwG7EuIfSYMgTgMBqxKEIEmZIE4DAZ0SmiBJsiBOAwGLErMgSbogUgMBhhKfBLsBnwTVAQMB1BGgBIICoASVAgMB0RGnBHmnBH4DAc4RpAR6pASJAQMBzBGvBHmvBH4DAcoRrAR6rASLAQMByBG3BHi3BOMBAwHCEbQEebQEfQMBwBG+BE++BIQCAwG6Eb8ET8YEVAMBsxHJBE/JBNYBAwGxEcoET8gXWgMB5wbKF7sByhfdAQMB5QbLF4ACyxe3AgMB4gbRF1PaGV4DAbwE3hm7Ad4Z4QEDAboE5BlP6xlYAwG0BOwZT+wZhAIDAa8E7RlP9BlUAwGoBPUZT/UZmgIDAaQE9hlP9hntAgMBngT3GU/3Gc8BAwGcBPgZT/gZlgEDAZoE+RlPgBpYAwGUBIEaT+wcaQMBwAHuHLsB7hzlAQMBvgHwHE/wHOgBAwG7AfEcT7AeWgIBO7EeT7Ee7AECATmzHosCsx7IAgIBNbkeU7keigICAS/CHnfCHo4BAgEsvx54vx6LAQIBKtMee9MekgECASPQHnzQHo8BAgEh1h7AAdYekQICAR3XHsIB1x7QAQIBGtcefNcetwECARXmAU3mAVEDAdIU4wFO4wFaAwHQFPMBTfMBUQMBxhTwAU7wAVoDAcQU8wJJ8wJNAwH/E/MCwwHzAtgBAwH+E/MCtQHzAr0BAwH9E/QCSfQCTQMB+xP0Ar4B9ALUAQMB+hP0ArAB9AK4AQMB+RP1Akn1Ak0DAfcT9QK+AfUCywEDAfYT9QKwAfUCuAEDAfUT9gJJ9gJNAwHzE/YCtAH2AroBAwHyE/YCpgH2Aq4BAwHxE/cCSfcCTQMB7xP3Ar8B9wLQAQMB7hP3ArEB9wK5AQMB7RP4Akn4Ak0DAesT+AK/AfgC0AEDAeoT+AKxAfgCuQEDAekT+QJJ+QJNAwHnE/kCvAH5AsoBAwHmE/kCrgH5ArYBAwHlE/oCSfoCTQMB4xP6Ar4B+gLPAQMB4hP6ArAB+gK4AQMB4RP7Akn7Ak0DAd8T+wK9AfsCzAEDAd4T+wKvAfsCtwEDAd0T/AJJ/AJNAwHbE/wCvAH8AsoBAwHaE/wCrgH8ArYBAwHZE/0CSf0CTQMB1xP9Ar0B/QLMAQMB1hP9Aq8B/QK3AQMB1RP+Akn+Ak0DAdMT/gK7Af4CyAEDAdIT/gKtAf4CtQEDAdET/wJJ/wJNAwHPE/8CvQH/AswBAwHOE/8CrwH/ArcBAwHNE4ADSYADTQMByxOAA7sBgAPIAQMByhOAA60BgAO1AQMByROCA0mCA00DAcYTggO9AYIDwwEDAcUTggOvAYIDtwEDAcQTgwNJgwNNAwHCE4MDswGDA7gBAwHBE4MDpQGDA60BAwHAE4QDSYQDTQMBvhOEA74BhAPOAQMBvROEA7ABhAO4AQMBvBOFA0mFA00DAboThQO1AYUDvAEDAbkThQOnAYUDrwEDAbgThgNJhgNNAwG2E4YDyQGGA9gBAwG1E4YDuwGGA8MBAwG0E4cDSYcDTQMBshOHA8kBhwPYAQMBsROHA7sBhwPDAQMBsBOIA0mIA00DAa4TiAO+AYgD2AEDAa0TiAOwAYgDuAEDAawTiQNJiQNNAwGqE4kDvQGJA8wBAwGpE4kDrwGJA7cBAwGoE4oDSYoDTQMBphOKA8ABigPRAQMBpROKA7IBigO6AQMBpBOLA0mLA00DAaITiwO5AYsDxQEDAaETiwOrAYsDswEDAaATjANJjANNAwGeE4wDvQGMA9IBAwGdE4wDrwGMA7cBAwGcE40DSY0DTQMBmhONA7UBjQPFAQMBmRONA6cBjQOvAQMBmBOOA0mOA04DAZYTjgO3AY4DvAEDAZUTjgOpAY4DsQEDAZQTjwNJjwNOAwGSE48DwAGPA9EBAwGRE48DsgGPA7oBAwGQE78fdr8fjgEDAc4SvB93vB98AwHMEscfdMcfjwEDAcoSxB91xB+AAQMByBLPH3TPH40BAwHGEswfdcwfggEDAcQS1x901x+KAQMBwhLUH3XUH38DAcAS3x903x+MAQMBvhLcH3XcH4ABAwG8EuIfV+IfgQEDAawS5B9N9R9YAwGyEvgfTYEgWAMBrRKEIFeEIHsDAZ4ShiBNjSBWAwGmEpAgTZcgVgMBoBKaIFeaIH0DAYwSnCBNsCBYAwGPErggc7ggfgMBiRK1IHS1IHsDAYcSvgR/vgSSAQMBvRG+BMcBvgTvAQMBuxG/BF2/BHADAbQRwQRTwQShAQMBuRHEBFPEBIUCAwG2EdUEUdUE9gEDAa4R1gRR1gToAQMBqRHXBFHXBPIBAwGkEdgEUdgE1QEDAaIR2QRR7QReAwGQEe4EUe4E0wEDAY4R7wRR9gRaAwGKEfcEUf4EWgMBhhH/BFGGBVoDAYIRhwVRjgVaAwH+EI8FUY8F1gEDAfwQkAVRygVcAwHWEMsFUcsF2AEDAdQQzAVR7gVcAwG+EO8FUe8F2AEDAbwQ8AVRkQZcAwGxEJIGUcwGXAMBkxDNBlHNBtoBAwGREM4GUdUGWgMBjRDWBlHWBswBAwGLENcGUfMGXAMB9w/0BlH0BtMBAwH1D/UGUfwGWgMB8Q/9BlGECFwDAaMPhQhRhQjTAQMBoQ+GCFGNCVwDAeEOjglR+wtcAwGSDfwLUfwL0QEDAZAN/QtRpQ1cAwGwDKYNUaYN1wEDAa4Mpw1R3RBcAwG9Ct4QUd4Q0wEDAbsK3xBR0RJcAwGpCdISUdIS0gEDAacJ0xJRtxVcAwHwB7gVUbgV2gEDAe4HuRVRmRZcAwGtB5oWUZoW1AEDAasHmxZRxRZcAwGbB8YWUfAWXAMBiwfxFlGbF1wDAfsGnBdRxhdcAwHrBscXUccXggIDAegG0hdV0hfhAQMB4AbTF1XTF/UBAwHfBtQXVdgZYAMBvwTZGVXZGd4BAwG9BOkZeukZkAEDAbcE5hl75hmVAQMBtQTsGX/sGZIBAwGyBOwZxwHsGe8BAwGwBO0ZXe0ZcAMBqQTvGVPvGaEBAwGuBPIZU/IZhQIDAasE9Rm+AfUZlwIDAaUE9hmDAfYZxwEDAaEE9hmkAvYZ6gIDAZ8E9xm+AfcZzAEDAZ0E+Blf+BlpAwGbBP4ZgQH+GbkBAwGXBPsZggH7GZYBAwGVBIEalgGBGqwBAwGTBIcaVekcYAMBwQHwHL0B8BzlAQMBvAH2HFH9HFoDAbYB/hxR/hyGAgMBsQH/HFH/HOcCAwGrAYAdUYAdmAEDAakBgR1RiB1aAwGjAYkdUa8eawIBPLEevQGxHukBAgE6uR6DArkehwICATS5HoMBuR6WAQIBMrke7wG5HvUBAgEw5R9P7B9YAwG3Eu0fT/QfWAMBsxL5H0+AIFgDAa4SiyB4iyCDAQMBqRKIIHmIIIUBAwGnEpIgeZIghQEDAaESnSBPpyBYAwGUEqggT68gWAMBkBLEBNoBxASCAgMBtxHVBMAB1QTzAQMBrxHWBJ4B1gS0AQMBrBHWBGrWBHcDAaoR1wTCAdcE1wEDAacR1wTiAdcE7wEDAaUR2ATAAdgE0gEDAaMR2QTrAdkEnQIDAaER3wRX6gRiAwGREe4EwAHuBNABAwGPEfQEfPQExwEDAY0R8QR98QSRAQMBixH8BHz8BMsBAwGJEfkEffkEkQEDAYcRhAV8hAXMAQMBhRGBBX2BBYwBAwGDEYwFfIwFyAEDAYERiQV9iQWJAQMB/xCPBcABjwXTAQMB/RCSBVWzBWADAegQuwVZxgVkAwHXEMsFwAHLBdUBAwHVEM4FVdUFXgMB0BDdBVnqBWQDAb8Q7wXAAe8F1QEDAb0Q8gVV+QVeAwG4EIEGWY0GZAMBshCTBlOTBuEBAwGwEJQGU5sGXAMBrBCcBlOjBlwDAagQpAZTqwZcAwGkEKwGU7MGXAMBoBC0BlO7BlwDAZwQvAZTwwZcAwGYEMQGU8sGXAMBlBDNBsABzQbXAQMBkhDTBnzTBu8BAwGQENAGfdAGggEDAY4Q1gbAAdYGyQEDAYwQ3QZT5AZcAwGHEOUGU+UGnwIDAYEQ5gZT5gbZAQMB/w/nBlPyBmADAfgP9AbAAfQG0AEDAfYP+gZ8+gb8AQMB9A/3Bn33BosBAwHyD/8GVd4HYAMBug/mB1mACGQDAaQPhQjAAYUI0AEDAaIPjAhTlQhcAwGdD5YIU50IXAMBmQ+eCFOlCFwDAZUPpghTrQhcAwGRD64IU4AJYAMB6g6BCVOMCVgDAeIOjwlT+gteAwGTDfwLwAH8C84BAwGRDYYMU4YM2gEDAY0NhwxTjgxcAwGJDY8MU58MXAMBhQ2gDFOnDFwDAYENqAxT4gxdAwHeDOMMU6QNXgMBsQymDcABpg3UAQMBrwyoDVOvDVwDAaoMsA1T3BBgAwG+Ct4QwAHeENABAwG8CuMQU+wQXAMBtwrtEFP0EFwDAbMK9RBT/BBcAwGvCv0QU9ASYAMBqgnSEsAB0hLPAQMBqAnVElXxE2ADAdkI+RNZsxVkAwHxB7gVwAG4FdcBAwHvB7oVU5gWXgMBrgeaFsABmhbRAQMBrAedFlWkFl4DAacHuBZVwxZaAwGgB6wWWbMWYgMBnAfIFlXPFl4DAZcH4xZV7hZaAwGQB9cWWd4WYgMBjAfzFlX6Fl4DAYcHjhdVmRdaAwGAB4IXWYkXYgMB/AaeF1WlF14DAfcGuRdVxBdaAwHwBq0XWbQXYgMB7AbHF8ABxxf/AQMB6QbSF8MB0hfeAQMB4QbVF1fXGWIDAcAE2RnDAdkZ2wEDAb4E8hnaAfIZggIDAawEixpdixqMAQMBwgGRGleRGo4CAwGPBJIaV5IahAIDAYsEkxpXkxqsAgMBhwSUGle4GmIDAcMDuRpXxhpcAwG5A8caV9AaYAMBtQPRGlfxGmQDAaMD8hpX8hr8AQMBnwPzGlfzGsgCAwGcA/QaV/QayQIDAZkD9RpXohtiAwH/AqMbV8gbYgMB6QLJG1fJG4sCAwHlAsobV8obiQIDAeECyxtX1htcAwHMAtcbV94bYAMBxQLfG1ffG7YCAwHBAuAbV4ocYgMBqwKLHFeLHPoBAwGoAowcV4wckQIDAaQCjRxXjRyOAgMBoAKOHFeVHGADAZsClhxXlhzyAQMBmgKXHFeeHGADAZYCnxxXphxcAwGNAqccV64cXAMBhAKvHFe/HGIDAfEBwBxXwBykAgMB7gHBHFfIHFwDAeQByRxXyRycAgMB4AHKHFfKHIQCAwHcAcscV8sclwIDAdgBzBxX2hxcAwHQAdscV9sciQIDAcwB3BxX6BxiAwHDAfscfPsclAEDAbkB+Bx9+ByZAQMBtwH+HIEB/hyUAQMBtAH+HMkB/hzxAQMBsgH/HIUB/xzLAQMBrgH/HKgC/xzkAgMBrAGAHWGAHWsDAaoBhh2DAYYdvQEDAaYBgx2EAYMdmAEDAaQBiR2YAYkdrgEDAaIBjx1XrB5iAgE96h986h+YAQMBuhLnH33nH4IBAwG4EvIfevIfkAEDAbYS7x977x+EAQMBtBL+H3r+H38DAbES+x97+x+EAQMBrxKfIHufIIUBAwGVEq0geq0giAEDAZMSqiB7qiCHAQMBkRLgBFngBJACAwGdEeEEWegEYgMBmRHpBFnpBPoBAwGSEZMFV5oFYAMB+BCbBVeiBWADAfMQowVXqgVgAwHuEKsFV7IFYAMB6RC8BVvDBWQDAeQQxAVbxAXCAgMB3hDFBVvFBccCAwHYENMFgAHTBeUBAwHTENAFgQHQBZEBAwHREN4FW+cFZAMBzBDoBVvoBcICAwHGEOkFW+kFxwIDAcAQ9wWAAfcF6QEDAbsQ9AWBAfQFjgEDAbkQggZbggb4AQMBtxCDBluMBmQDAbMQmQZ+mQb9AQMBrxCWBn+WBo8BAwGtEKEGfqEG/QEDAasQngZ/ngaOAQMBqRCpBn6pBvIBAwGnEKYGf6YGjQEDAaUQsQZ+sQbzAQMBoxCuBn+uBo4BAwGhELkGfrkG8QEDAZ8QtgZ/tgaQAQMBnRDBBn7BBvsBAwGbEL4Gf74GjgEDAZkQyQZ+yQb5AQMBlxDGBn/GBowBAwGVEOIGiAHiBp8BAwGKEN8GiQHfBpgBAwGIEOUG8AHlBv4BAwGFEOUGjwLlBpwCAwGEEOUGoQHlBrYBAwGCEOYGwgHmBtYBAwGAEOcG5AHnBpECAwH+D+0GWe8GZAMB+Q+EB1eEB6gCAwHrD4UHV4wHYAMB5w+NB1fNB2QDAcUPzgdX1QdgAwHAD9YHV90HYAMBuw/nB1vnB70CAwG0D+gHW+gHugIDAa4P6Qdb8AdkAwGqD/EHW/gHZAMBpg/5B1v/B2sDAaUPkghZkgiIAQMBoA+OCH+OCIwBAwGeD5sIfpsIgAEDAZwPmAh/mAiNAQMBmg+jCH+jCIQBAwGYD6AIgAGgCJcBAwGWD6sIiAGrCJ0BAwGUD6gIiQGoCJIBAwGSD64I5wGuCNgCAwGQD7QIWf0IZAMB6w6BCWGBCXoDAeMOgwlXiglgAwHlDpcJjgGXCacBAwGUDZkJVZkJ3AEDAd4OmglVoQleAwHaDqIJVakJXgMB1g6qCVXICV4DAdIOyQlVgwpfAwGxDoQKVYQKogIDAasOhQpVkApiAwGkDpEKVaYKYgMBjg6nClXFCmADAfsNxgpVxgqhAgMB9Q3HClXHCuEBAwH0DcgKVfkLYgMBlQ2GDJoBhgytAQMBjg2MDIUBjAyKAQMBjA2JDIYBiQyQAQMBig2RDH+RDI0BAwGGDaUMfaUMfgMBhA2iDH6iDIgBAwGCDagMqgGoDL0BAwH/DKkMVeEMYAMB3wzlDFeYDWIDAbUMoA1boA2yAgMBsgytDYgBrQ2dAQMBrQyqDYkBqg2ZAQMBqwywDfYBsA3uAgMBqQy2DVnZEGUDAb8K6RBZ6RCIAQMBugrlEH/lEI8BAwG4CvIQiAHyEJ0BAwG2Cu8QiQHvEJ0BAwG0CvoQiAH6EJ0BAwGyCvcQiQH3EJkBAwGwCv0Q7gH9EOwCAwGuCoMRWc0SZAMBqwnWElfdEmADAaMJ3hJX5RJgAwGfCeYSV+0SYAMBmgnuElfuEoACAwGXCe8SV/ATXAMB2gj9E1v9E/EBAwHYCP4TW4UUZAMB1AiGFFuNFWgDAZQIjhVbshVgAwHyB74VVcUVXgMB6gfGFVXcFWIDAd4H3RVVlxZaAwGvB6IWgAGiFowCAwGqB58WgQGfFqEBAwGoB7gWY7gWmwEDAaEHuhZZwRZiAwGjB7EWhAGxFogBAwGfB64WhQGuFqUBAwGdB80WgAHNFoACAwGaB8oWgQHKFosBAwGYB+MWY+MWhQEDAZEH5RZZ7BZiAwGTB9wWhAHcFocBAwGPB9kWhQHZFo8BAwGNB/gWgAH4Fo8CAwGKB/UWgQH1FpoBAwGIB44XY44XlAEDAYEHkBdZlxdiAwGDB4cXhAGHF4YBAwH/BoQXhQGEF54BAwH9BqMXgAGjF/sBAwH6BqAXgQGgF5ABAwH4BrkXY7kXigEDAfEGuxdZwhdiAwHzBrIXhAGyF44BAwHvBq8XhQGvF5QBAwHtBtkXWdkXuQIDAdkG2hdZ2hevAgMB0wbbF1mOGGQDAbEGjxhZjxiiAgMBqwaQGFmQGLECAwGlBpEYWZEYsQIDAZ8GkhhZkhirAgMBmQaTGFmTGLACAwGTBpQYWZQYrgIDAY0GlRhZlRisAgMBhwaWGFmWGK4CAwGBBpcYWZcYrgIDAfsFmBhZmBiuAgMB9QWZGFmZGKoCAwHvBZoYWZoY3QEDAe4FmxhZmxirAgMB6AWcGFmcGJoCAwHiBZ0YWZ0YrwIDAdwFnhhZpRhiAwHYBaYYWcYYZgMBxgXHGFnHGKICAwHABcgYWcgYuQIDAboFyRhZyRi5AgMBtAXKGFnKGOkCAwGvBcsYWcsYtwIDAakFzBhZiRlkAwGDBYoZWcIZZAMB4QTDGVnDGbICAwHbBMQZWcQZqAIDAdUExRlZyRlkAwHJBMoZWdEZYgMBxATSGVnWGWkDAcEEkRrzAZEaiwIDAZIEkRrVAZEa6wEDAZAEkhruAZIagQIDAY4EkhrVAZIa5gEDAYwEkxqaApMaqQIDAYoEkxrVAZMakgIDAYgElRpZlRqCAgMBgwSWGlmWGogCAwH/A5caWZcahAIDAfsDmBpZmBqGAgMB9wOZGlmmGl4DAe0DpxpZpxqKAgMB6QOoGlmoGoYCAwHlA6kaWakaggIDAeEDqhpZqhqAAgMB3QOrGlmrGvEBAwHZA6waWbcaXgMBxAO5GmW5GowBAwG6A7saW8EacAMBwAPEGlvEGogCAwG8A80aXc0ajAEDAbgDyRqDAckajgEDAbYD0RrkAdEa9QEDAbMD1xpd7hpoAwGkA/Ia6gHyGvkBAwGiA/Ia1QHyGuIBAwGgA/MaqALzGsUCAwGeA/Ma1QHzGqACAwGdA/QaqAL0GsYCAwGbA/Qa1QH0GqACAwGaA/YaWZkbZgMBhAOaG1maG8YBAwGDA5sbWaEbbgMBgAOnG1m5G2YDAfcCuhtZxxteAwHqAskb8QHJG4gCAwHoAskb1QHJG+kBAwHmAsob8AHKG4YCAwHkAsob1QHKG+gBAwHiAssbZcsbkAEDAc0CzRtb0RtmAwHTAtQbW9QbvQIDAc8C3BuCAdwbvAEDAcgC2RuDAdkbkwEDAcYC3xufAt8bswIDAcQC3xvVAd8blwIDAcIC4RtZgRxmAwGwAoIcWYIcxgEDAa8CgxxZiRxuAwGsAoscxgGLHPcBAwGpAowc8AGMHI4CAwGnAowc1QGMHOgBAwGlAo0c8wGNHIsCAwGjAo0c1QGNHOsBAwGhApMcgQGTHKABAwGeApAcggGQHJMBAwGcApwcgQGcHMcBAwGZApkcggGZHIsBAwGXAp8cZZ8cfgMBjgKhHFuhHIMCAwGTAqQcW6QcggIDAZACpxxlpxySAQMBhQKpHFupHIgCAwGKAqwcW6wciAIDAYcCsBxZtBxeAwH+AbUcWbkcXgMB+AG6HFm+HF4DAfIBwByIAsAcoQIDAfABwBzVAcAcgAIDAe8BwRxlwRyJAQMB5QHDHFvDHIwCAwHrAcYcW8YcjAIDAegByRz/AckcmQIDAeMByRzVAckc9wEDAeEByhzpAcocgQIDAd8ByhzVAcoc4QEDAd0Byxz4AcsclAIDAdsByxzVAcsc8AEDAdkBzBxlzByVAQMB0QHOHFvOHKcBAwHXAdEcW9gcZAMB0wHbHO4B2xyGAgMBzwHbHNUB2xzmAQMBzQHdHFnhHGkDAcoB4hxZ5hxpAwHHAeccWecctgIDAcQBkx1fkx2OAQIBPpcdWaseZAIBP+AEfeAElAEDAaAR4ATLAeAE0wEDAZ4R5gSEAeYEugEDAZwR4wSFAeMEjwEDAZoR6QToAekE6wEDAZgR6QS7AekExwEDAZYR6QTPAekE3AEDAZQR6QTzAekE9wEDAZMRmAWCAZgF5wEDAfsQlQWDAZUFkwEDAfkQoAWCAaAFoQEDAfYQnQWDAZ0FlAEDAfQQqAWCAagFoQEDAfEQpQWDAaUFkgEDAe8QsAWCAbAFoQEDAewQrQWDAa0FkwEDAeoQwQWGAcEFigEDAecQvgWHAb4FlwEDAeUQxAXZAcQF5wEDAeIQxAWGAcQFzgEDAd8QxQXZAcUF7AEDAdwQxQWGAcUFzgEDAdkQ5AVh5AWQAQMBzxDgBYcB4AWXAQMBzRDoBdkB6AXnAQMByhDoBYYB6AXOAQMBxxDpBdkB6QXsAQMBxBDpBYYB6QXOAQMBwRCJBmGJBpABAwG2EIUGhwGFBpQBAwG0EO4GW+4GoQIDAfoPhAf0AYQHggIDAe8PhAeTAoQHpQIDAe4PhAelAYQHugEDAewPigeBAYoHggEDAeoPhweCAYcHiAEDAegPjQfoAY0HlQIDAeYPkwddygdoAwHGD9MHggHTB5cBAwHDD9AHgwHQB5sBAwHBD9sHggHbB5kBAwG+D9gHgwHYB5sBAwG8D+cH1wHnB+UBAwG4D+cHhgHnB8wBAwG1D+gH1gHoB+kBAwGyD+gHhgHoB8sBAwGvD+4HhgHuB4cBAwGtD+sHhwHrB58BAwGrD/YHhgH2B4cBAwGpD/MHhwHzB58BAwGnD7UIW7wIZAMBjA+9CFu9CJUCAwGHD74IW/wIZgMB7A6ICYIBiAmbAQMB6A6FCYMBhQmRAQMB5g6ZCZwBmQmvAQMB3w6fCYcBnwmMAQMB3Q6cCYgBnAmSAQMB2w6nCYcBpwmKAQMB2Q6kCYgBpAmSAQMB1w6sCYEBrAmPAQMB0w7JCawByQm/AQMB0Q7KCVeCCmIDAbIOhAryAYQKgAIDAa8OhAqRAoQKnwIDAa4OhAqjAYQKuAEDAawOhQrmAYUKkwIDAaoOiwpbjQpmAwGlDpEK5QGRCvYBAwGiDpcKW6MKZgMBjw6oCleoCq4CAwGIDqkKV6kKowIDAYcOqgpXxApkAwH8DcYK8gHGCoACAwH5DcYKkQLGCp4CAwH4DcYKowHGCrgBAwH2DcgK5QHICpICAwHzDc4KW/YLZgMBlg2rDFnHDGQDAekMzwxd3QxiAwHgDOkMWekMsgIDAdgM6gxZlw1mAwG2DKANygGgDa8CAwGzDLkNX7kNlgIDAaUMuw2RAbsN9QEDAaQMgA+VAYAP9wEDAaMMxxBrxxDIAQMBogyDD2vCEHYDAbELvg1n/A5yAwHACocRW4cR/AEDAawKiBFbjxFkAwGoCpARW5cRYAMBnQqYEVuYEdICAwGZCpkRW5kR6QEDAZcKmhFbzBJmAwGsCdsSggHbEugBAwGmCdgSgwHYEpIBAwGkCeMSggHjEu4BAwGiCeASgwHgEo8BAwGgCesSggHrEp4BAwGdCegSgwHoEpQBAwGbCe4SxgHuEv0BAwGYCe8SZe8SjAEDAdsI8RJb4xNmAwHjCOYTW+4TZAMB3QiDFIgBgxS+AQMB1wiAFIkBgBSUAQMB1QiGFOgBhhT1AQMB0giMFGGKFWwDAZUIjhVpjhWQAQMB8weQFV+mFWoDAfsHqRVfsBVoAwH1B8MVgQHDFYYBAwHtB8AVggHAFZABAwHrB8YV9gHGFYwCAwHoB8wVW9kVZgMB3wfdFWPdFXcDAbAH3xVZlRZkAwGyB78WhAG/FogBAwGmB7wWhQG8FqUBAwGkB+oWhAHqFocBAwGWB+cWhQHnFo8BAwGUB5UXhAGVF4YBAwGGB5IXhQGSF54BAwGEB8AXhAHAF44BAwH2Br0XhQG9F5QBAwH0BtkXcdkXqgEDAd0G2RegAtkXtgIDAdsG2ReSAtkXmgIDAdoG2hdx2heqAQMB1wbaF5sC2hesAgMB1QbaF40C2heVAgMB1AbcF1vjF2QDAc8G5BdbjBhoAwG4Bo0YW40YsAIDAbIGjxhxjxiqAQMBrwaPGJECjxifAgMBrQaPGIMCjxiLAgMBrAaQGHGQGKoBAwGpBpAYnAKQGK4CAwGnBpAYjgKQGJYCAwGmBpEYcZEYqgEDAaMGkRicApEYrgIDAaEGkRiOApEYlgIDAaAGkhhxkhiqAQMBnQaSGJkCkhioAgMBmwaSGIsCkhiTAgMBmgaTGHGTGKoBAwGXBpMYmwKTGK0CAwGVBpMYjQKTGJUCAwGUBpQYcZQYqgEDAZEGlBiaApQYqwIDAY8GlBiMApQYlAIDAY4GlRhxlRiqAQMBiwaVGJkClRipAgMBiQaVGIsClRiTAgMBiAaWGHGWGKoBAwGFBpYYmgKWGKsCAwGDBpYYjAKWGJQCAwGCBpcYcZcYqgEDAf8FlxiYApcYqwIDAf0FlxiKApcYkgIDAfwFmBhxmBiqAQMB+QWYGJoCmBirAgMB9wWYGIwCmBiUAgMB9gWZGHGZGKoBAwHzBZkYmAKZGKcCAwHxBZkYigKZGJICAwHwBZsYcZsYqgEDAewFmxiaApsYqAIDAeoFmxiMApsYlAIDAekFnBhxnBiqAQMB5gWcGJACnBiXAgMB5AWcGIICnBiKAgMB4wWdGHGdGKoBAwHgBZ0YmwKdGKwCAwHeBZ0YjQKdGJUCAwHdBaMYhAGjGIgBAwHbBaAYhQGgGJABAwHZBaYY5gGmGPcBAwHWBawYX8MYagMBxwXHGHHHGKoBAwHEBccYkgLHGJ8CAwHCBccYhALHGIwCAwHBBcgYccgYqgEDAb4FyBimAsgYtgIDAbwFyBiYAsgYoAIDAbsFyRhxyRiqAQMBuAXJGKYCyRi2AgMBtgXJGJgCyRigAgMBtQXKGHHKGKoBAwGyBcoYmwLKGOYCAwGxBcoYjQLKGJUCAwGwBcsYccsYqgEDAa0FyxiaAssYtAIDAasFyxiMAssYlAIDAaoFzRhb1BhkAwGlBdUYW94YZAMBoQXfGFuHGWgDAYoFiBlbiBmyAgMBhAWQGVuXGWQDAf8EmBlbwBloAwHoBMEZW8EZqAIDAeIEwxlxwxmqAQMB3wTDGZoCwxmvAgMB3QTDGYwCwxmUAgMB3ATEGXHEGaoBAwHZBMQZkgLEGaUCAwHXBMQZhALEGYwCAwHWBMYZW8YZzgEDAdQExxlbxxmeAgMBzwTIGVvIGacCAwHKBM8ZgwHPGZYBAwHHBMwZhAHMGZMBAwHFBNQZ7AHUGYsCAwHDBNIZwwLSGccCAwHCBJUa7gGVGv8BAwGGBJUa1wGVGuYBAwGEBJYa8QGWGoUCAwGCBJYa1wGWGukBAwGABJca7wGXGoECAwH+A5ca1wGXGucBAwH8A5ga8AGYGoMCAwH6A5ga1wGYGugBAwH4A5kaZ5kajgEDAe4DmxpdoRpyAwH0A6QaXaQaigIDAfADpxryAacahwIDAewDpxrXAaca6gEDAeoDqBrwAagagwIDAegDqBrXAaga6AEDAeYDqRruAaka/wEDAeQDqRrXAaka5gEDAeIDqhrtAaoa/QEDAeADqhrXAaoa5QEDAd4DqxrmAasa7gEDAdwDqxrXAasa3gEDAdoDrBpnrBqNAQMBxQOuGl2yGmgDAcsDtRpdtRqIAgMBxwO7GtgBuxrrAQMBwgO+GmG+GpABAwHBA8Qa8gHEGoUCAwG/A8Qa2QHEGuoBAwG9A9gaX+0aZAMBpQP2GvQB9hqGAgMBlwP8Gl+WG2oDAYUDmxvWAZsb8QEDAYIDnhtfnhuOAQMBgQOnG/oBpxuMAgMB/QKtG1+2G2oDAfgCuhtnuhuLAQMB6wK8G13CG3UDAfECxRtdxRvTAgMB7QLOG13OG8gBAwHgAs8bXc8bwQIDAdoC0Btd0BvGAgMB1ALUG6YC1Bu6AgMB0gLUG9kB1BueAgMB0ALhG/oB4RuFAgMBvwLnG1/+G2oDAbECgxzWAYMc4wEDAa4ChhxfhhyOAQMBrQKhHPQBoRyAAgMBlQKhHNkBoRzsAQMBlAKkHPMBpBz/AQMBkgKkHNkBpBzrAQMBkQKpHO8BqRyFAgMBjAKpHNkBqRznAQMBiwKsHO8BrByFAgMBiQKsHNkBrBznAQMBiAKwHGewHIoBAwH/AbIcXbIclAIDAYECtRxntRyLAQMB+QG3HF23HJMCAwH7AbocZ7ociAEDAfMBvBxdvBySAgMB9QHDHPQBwxyJAgMB7QHDHNkBwxzsAQMB7AHGHPQBxhyJAgMB6gHGHNkBxhzsAQMB6QHWHIYB1hzAAQMB1gHTHIcB0xyWAQMB1AHdHLgC3Ry9AgMBywHiHM0B4hzTAQMByQHiHLQC4hy4AgMByAHnHLoB5xzNAQMBxQGbHWGbHZABAgFAoR1boR2SAgMBngGiHVuiHYgCAwGaAaMdW6MdsAIDAZYBpB1bpB2EAgMBkgGlHVuuHWQDAY4Brx1bzx1oAgF80B1b0B2AAgIBeNEdW/YdZgIBYvcdW/4dZAIBW/8dW/8dugICAVeAHluqHmYCAUHuBpIB7gajAQMB/A/uBoAC7gaeAgMB+w+XB1+eB2gDAeIPnwdfnweGAgMB3w+gB1+1B2QDAdIPtgdfwQdkAwHLD8IHX8kHaAMBxw+6CIYBugixAQMBjw+3CIcBtwiUAQMBjQ+9CJIBvQidAQMBig+9CIMCvQiSAgMBiA+/CF37CGgDAe0OzAlb6AlmAwG7DvAJX/4JZAMBsw6MCl2MCp8CAwGmDpgKXaIKYgMBkA6oCvQBqAqCAgMBjA6oCpMCqAqrAgMBiw6oCqUBqAq6AQMBiQ6qCucBqgqUAgMBhg6wCl3BCmgDAf0N0gpd9QtiAwGXDawMW7wMawMB+Ay9DFu9DP0BAwHzDL4MW74MpAUDAe4MvwxbxgxkAwHqDM8Ma88MfgMB4QzRDGHYDGoDAeQM2wxh2wyZAQMB4wzpDPYB6QyEAgMB3AzpDJUC6QyvAgMB2wzpDKcB6Qy8AQMB2QzqDOkB6gyWAgMB1wzwDF+UDWoDAbcMuQ2DAbkNmgEDAagMuQ3RAbkN2QEDAaYMiQ9tkA92AwGeDJEPbZgPdgMBmgyZD22ZD6gCAwGVDJoPbcEQeAMBsgvDDWnKDXIDAa0Lyw1p0g1yAwGpC9MNadMNpgIDAaQL1A1p+w50AwHBCocRygGHEfkBAwGtCo0RhgGNEbUBAwGrCooRhwGKEZABAwGpCpARaZARnwEDAZ4KkhFfkhHoBAMBpAqVEV+VEfIEAwGgCpgRkgGYEagBAwGbCpgRlAKYEc8CAwGaCpkRygGZEeYBAwGYCqMRXaMR5QEDAZQKpBFdqxFmAwGQCqwRXbMRZgMBjAq0EV27EWYDAYgKvBFdzBFmAwGECs0RXYoSZwMB3AmLEl3LEmgDAa0J9RJd/BJmAwGTCf0SXf0S3gIDAZIJ/hJd4hNqAwHkCOsThgHrE+IBAwHgCOgThwHoE5gBAwHeCI0UY40UlwIDAc8IjhRjlRRsAwHLCJYUY50UbAMBxwieFGP7FHQDAZ4I/BRjgBV5AwGcCIEVY4gVbAMBlwiJFWOJFZkBAwGWCJEVYZgVagMBkAiZFWGiFWoDAYwIoxVhoxXRAgMBhQikFWGkFdYCAwH+B6UVYaUV6QEDAfwHrhWKAa4V5gEDAfgHqxWLAasVnAEDAfYHzRVd2BViAwHgB+MVW+oVZAMB2QfrFVuUFmgDAbMH4ReFAeEXhgEDAdIG3heGAd4XkQEDAdAG5BfoAeQX+gEDAc0G6hdhiRhsAwG5Bo0Yc40YrAEDAbYGjRidAo0YrQIDAbQGjRiPAo0YlwIDAbMGrRhhwhhmAwHIBdIYhQHSGIYBAwGoBc8YhgHPGJEBAwGmBdsYYdsYkAEDAaQF1xiHAdcYlQEDAaIF3xjnAd8Y+QEDAZ8F5RhhhBlsAwGLBYgZc4gZrAEDAYgFiBmfAogZrwIDAYYFiBmRAogZmQIDAYUFlRmFAZUZhgEDAYIFkhmGAZIZlgEDAYAFmBnnAZgZ+QEDAf0EnhlhvRlsAwHpBMEZc8EZrAEDAeYEwRmYAsEZpQIDAeQEwRmKAsEZkgIDAeMExxlzxxmtAQMB0gTHGZYCxxmbAgMB0QTHGYgCxxmQAgMB0ATIGXPIGa0BAwHNBMgZnwLIGaQCAwHMBMgZkQLIGZkCAwHLBJsa2gGbGu0BAwH2A54aY54akgEDAfUDpBr0AaQahwIDAfMDpBrbAaQa7AEDAfEDrxpfrxrKAQMB2AOwGl+wGsICAwHSA7EaX7EaxwIDAcwDtRrzAbUahQIDAcoDtRrbAbUa6wEDAcgD2Bpt2BqQAQMBpgPaGmPhGmwDAa4D5Bpj6xpsAwGoA4AbYYcbagMBkwOIG2GVG2YDAYYDrhthtRtqAwH5Ar8boAG/G6gBAwH1Ar4boQG+G4ICAwH0AsAboQHAG7UBAwHzArwbigK8G6UCAwHyAsUb7QHFG9ACAwHwAsUb2wHFG+UBAwHuAs8b3wHPG+0BAwHeAs8biAHPG9QBAwHbAtAb3wHQG/IBAwHYAtAbiAHQG9QBAwHVAugbYegbyAEDAb4C6Rth7xtxAwG9AvAbYf0bZgMBsgKyHPgBshyRAgMBgwKyHNsBshzwAQMBggK3HPcBtxyQAgMB/QG3HNsBtxzvAQMB/AG8HPYBvByPAgMB9wG8HNsBvBzuAQMB9gGhHfcBoR2PAgMBoQGhHdkBoR3vAQMBnwGiHfIBoh2FAgMBnQGiHdkBoh3qAQMBmwGjHZ4Cox2tAgMBmQGjHdkBox2WAgMBlwGkHfABpB2BAgMBlQGkHdkBpB3oAQMBkwGrHWGrHZABAwGRAacdhwGnHZIBAwGPAa8d6AGvHfkBAwGMAbUdYcwdbAIBfdAd7gHQHf0BAgF70B3ZAdAd5gECAXnVHV3nHWoCAXDoHV31HWICAWP8HYYB/B3AAQIBXvkdhwH5HZcBAgFc/x2jAv8dtwICAVr/HdkB/x2bAgIBWIEeXaEeagIBRqIeXaIeygECAUWjHl2pHnICAUKcB4oBnAe+AQMB5Q+ZB4sBmQeWAQMB4w+fB84BnweDAgMB4A+gB22gB5IBAwHTD6IHY6kHbAMB2g+sB2OzB2wDAdUPtgfrArYHhAMDAcwPuAdjvwdsAwHND8cHiQHHB8kBAwHKD8QHigHEB5ABAwHID8EIYegIbAMB8g7wCGX3CG4DAe4OzQld3QltAwHKDt4JXd4J/wEDAcUO3wld3wnZBAMBwA7gCV3nCWYDAbwO8Alt8AmAAQMBtA7yCWP5CWwDAbYO/Alj/AmbAQMBtQ6MCpQBjAqoAQMBqA6MCoUCjAqcAgMBpw6YCmuYCp0BAwGRDpoKYZ0KbAMBlQ6gCmGgCqsBAwGUDrEKX7gKaAMBgg65Cl/ACmgDAf4N0gpr0gq1AQMBmA3UCmHzC2wDAZkNrAyrBawMsQUDAf4MrAzMA6wM3AMDAfwMrAySBawMoAUDAfoMrAyeBKwMzAQDAfkMvQzMAb0M4QEDAfYMvQzsAb0M+gEDAfQMvgymAr4MoQUDAfIMvgyUAb4M7QEDAe8MxAyFAcQMhgEDAe0MwQyGAcEMkAEDAesM1gyLAdYMmQEDAecM0wyMAdMMlgEDAeUM9Axh+wxqAwHTDPwMYYMNagMBzwyEDWGTDWYDAbgMjg+YAY4PuwIDAaEMiw+ZAYsPqAEDAZ8Mlg+YAZYPvQEDAZ0Mkw+ZAZMPoQEDAZsMmQ+kAZkPtgEDAZgMmQ+UApkPpQIDAZYMoQ9voQ/3AQMBkgyiD2+pD3gDAY4Mqg9vsQ94AwGKDLIPb8IPeAMBhgzDD2/9D3kDAeML/g9vwBB6AwGzC8gNlAHIDbcCAwGwC8UNlQHFDacBAwGuC9ANlAHQDbkBAwGsC80NlQHNDZ0BAwGqC9MNoAHTDbIBAwGnC9MNjwLTDaMCAwGlC9sNa9sN8wEDAaEL3A1r4w10AwGdC+QNa+sNdAMBmQvsDWv8DXQDAZUL/Q1rtw51AwHyCrgOa/oOdgMBwgqSEZYBkhGoAQMBpgqSEY4CkhHlBAMBpQqVEZYBlRGoAQMBogqVEY8ClRHvBAMBoQqjEaQBoxG3AQMBlQqpEY8BqRGUAQMBkwqmEZABphGaAQMBkQqxEY8BsRGSAQMBjwquEZABrhGaAQMBjQq5EYgBuRG3AQMBiwq2EYkBthGRAQMBiQq+EYkBvhGXAQMBhQrNEbQBzRHHAQMBgwrOEV+JEmoDAd0JjRJhvxJsAwGxCccSZccSvgIDAa4J+hKKAfoSwAEDAZYJ9xKLAfcSlgEDAZQJ/hL/Av4SjAMDAZAJhBNj3xNuAwHlCI0U0gGNFOMBAwHQCJMUjgGTFJwBAwHOCJAUjwGQFJkBAwHMCJsUjgGbFJwBAwHKCJgUjwGYFKABAwHICJ4U+gKeFMUDAwHGCKQUafgUdAMBnwj+FPYB/hSvAgMBnQiGFY4BhhWYAQMBmgiDFY8BgxWeAQMBmAiWFYwBlhWuAQMBkwiTFY0BkxWeAQMBkQifFWefFZYBAwGPCJsVjQGbFZwBAwGNCKMV8wGjFYECAwGKCKMVjAGjFegBAwGGCKQV8wGkFYYCAwGDCKQVjAGkFegBAwH/B6UVzwGlFeYBAwH9B80Va80VgwEDAeEHzxVh1hVqAwHkB+gViAHoFaQBAwHcB+UViQHlFZABAwHaB+sV6AHrFf4BAwHXB/EVYZEWbAMBtAfrF2OAGGgDAb8GgRhjiBhsAwG6Bq0Yb60YkgEDAckFrxhlthhuAwHRBbkYZcAYbgMBywXmGGP7GGgDAZEF/BhjgxlsAwGMBZ8ZY7QZaAMB7wS1GWO8GWwDAeoEsBrbAbAa6QEDAdYDsBqKAbAa0AEDAdMDsRrbAbEa7gEDAdADsRqKAbEa0AEDAc0D3xqOAd8anQEDAbED3BqPAdwamgEDAa8D6RqOAekarAEDAasD5hqPAeYamgEDAakDhRuMAYUbywEDAZYDghuNAYIblQEDAZQDiBtviBuRAQMBhwOKG2WQG30DAY0DkxtlkxuTAgMBiQOzG4wBsxvOAQMB/AKwG40BsBuVAQMB+gLwG2/wG5EBAwGzAvIbZfgbfQMBuAL7G2X7G7gCAwG1ArYdY8sdaAIBftUd/gHVHZACAgF22x1j5B1uAgFx6B1r6B2PAQIBZOodYfAdeQIBavMdYfMd4AICAWaBHv4BgR6JAgIBVYceY54ebgIBR6Me2gGjHucBAgFEph5jph6SAQIBQ6cHlQGnB6sBAwHdD6QHlgGkB6cBAwHbD7EHlQGxB6cBAwHYD64HlgGuB6cBAwHWD70HlQG9B60BAwHQD7oHlgG6B6cBAwHOD8IIY8kIbAMBgw/KCGPRCGwDAf8O0ghj5whoAwHzDvUIkQH1CJYBAwHxDvIIkgHyCKIBAwHvDs0JpAXNCaoFAwHQDs0JzgPNCd4DAwHODs0JiwXNCZkFAwHMDs0JoATNCcUEAwHLDt4JzgHeCeMBAwHIDt4J7gHeCfwBAwHGDt8JowLfCdYEAwHEDt8JlgHfCeoBAwHBDuUJjwHlCZIBAwG/DuIJkAHiCZoBAwG9DvcJlQH3CaMBAwG5DvQJlgH0CaABAwG3DpsKY5sKzwIDAZwOnApjnArVAgMBlg62CooBtgq5AQMBhQ6zCosBswqeAQMBgw6+CooBvgq8AQMBgQ67CosBuwqYAQMB/w3VCmPcCmwDAe8N3Qpj8gtwAwGaDfkMjAH5DK4BAwHWDPYMjQH2DJYBAwHUDIENiwGBDbkBAwHSDP4MjAH+DJMBAwHQDIQNb4QNngEDAbkMhg1lkQ1wAwG8DKEPtgGhD8kBAwGTDKcPoQGnD6YBAwGRDKQPogGkD6wBAwGPDK8PmQGvD5oBAwGNDKwPmgGsD6QBAwGLDLQPmwG0D6kBAwGHDMMPywHDD94BAwGEDMQPcfwPfAMB5AuAEHO0EH4DAbgLvBB3vBDoAgMBtAvbDbIB2w3FAQMBogvhDZ0B4Q2iAQMBoAveDZ4B3g2oAQMBngvpDZUB6Q2WAQMBnAvmDZYB5g2gAQMBmgvuDZcB7g2lAQMBlgv9DccB/Q3aAQMBkwv+DW22DngDAfMKug5v7g56AwHHCvYOc/YO5AIDAcMK0BFj7xFuAwHmCfcRZ4USbAMB3gmTEmOTErwCAwHWCZQSY74ScAMBsgnHEtQBxxK7AgMBrwmFE2WFE5ECAwGNCYYTZdATdgMB7gjRE2XVE3sDAewI1hNl3RNuAwHnCN4TZd4TmwEDAeYIqBRr9xR2AwGgCNQVjQHUFZEBAwHnB9EVjgHRFZwBAwHlB/UVY/wVbAMB0gf9FWOQFmgDAbUH6xdx6xeCAQMBwAbtF2f0F3ADAcgG9xdn/hdwAwHCBoYYjQGGGJwBAwG9BoMYjgGDGJkBAwG7BrQYkAG0GJ8BAwHUBbEYkQGxGJwBAwHSBb4YkAG+GK4BAwHOBbsYkQG7GJwBAwHMBeYYceYYggEDAZIF6Bhn7xhwAwGaBfIYZ/kYcAMBlAWBGY0BgRmcAQMBjwX+GI4B/hiZAQMBjQWfGXGfGYcBAwHwBKEZZ6gZcAMB+ASrGWeyGXADAfIEuhmNAboZoQEDAe0EtxmOAbcZngEDAesEjRuoAY0bsAEDAZEDjBupAYwbwgEDAZADjhupAY4bvQEDAY8DihuSAoobrQIDAY4Dkxv1AZMbkAIDAYwDkxvjAZMb7QEDAYoD9RuoAfUb2QEDAbwC9BupAfQbtAEDAbsC9hupAfYbvQEDAboC8huSAvIbrQIDAbkC+xuoAvsbtQIDAbcC+xvjAfsboAIDAbYCth1xth2UAQIBf7gdZ78dcAMBhwHCHWfJHXADAYEB3B1l4x1uAgFy7R2kAe0drAECAW7sHaUB7B2PAgIBbe4dpQHuHbkBAgFs6h2OAuodqQICAWvzHfEB8x3dAgIBafMd3wHzHekBAgFniB5liB7MAQIBVIkeZY8edQIBU5AeZZ0eagIBSMcIjgHHCN4BAwGGD8QIjwHECJ0BAwGED88IjwHPCJMBAwGCD8wIkAHMCKcBAwGAD9IIcdIIpQEDAfQO1Ahn2whwAwH7Dt4IZ+UIcAMB9w6bCvEBmwr/AQMBoA6bCo4BmwrmAQMBnQ6cCvEBnAqEAgMBmg6cCo4BnArmAQMBlw7XCo8B1wqVAQMB8A3dCvMB3QqnAgMB7g3jCmnvC3QDAZsNhw1njg1wAwHLDI8NZ48NugIDAcQMkA1nkA3AAgMBvQzGD3XiD4ABAwHuC+oPefgPfgMB5QuEEHWEEM4CAwHdC4UQdbMQggEDAbkLvBDmAbwQ5QIDAbULgA5xnA58AwH9CqQOdbIOegMB9Aq+DnG+DsoCAwHsCr8Oce0OfgMByAr2DuIB9g7hAgMBxArREWXhEXUDAfwJ4hFl4hGWAgMB+QnjEWXjEYcCAwH0CeQRZeQR7QEDAfIJ5RFl5RHvBAMB7QnmEWXmEfIBAwHrCecRZe4RbgMB5wn3EXX3EYgBAwHfCfkRa4ASdAMB4QmDEmuDEqMBAwHgCZMSgAKTEo4CAwHaCZMSnwKTErkCAwHZCZMSsQGTEsYBAwHXCZQS8wGUEqACAwHVCZoSabsSdAMBswmFE8wBhRPdAQMBjgmGE+4ChhO5AwMBjAmME2vNE3YDAe8I0xP4AdMTsQIDAe0I2xOQAdsTmgEDAeoI2BORAdgToAEDAegIqhRv2RR6AwGtCOEUc/MUfgMBoQj6FZAB+hWhAQMB1Qf3FZEB9xWcAQMB0wf9FXH9FdgBAwG2B/8VZ4sWcgMBvgeOFmeOFsIBAwG9B/IXkgHyF5gBAwHLBu8XkwHvF6EBAwHJBvwXkgH8F6oBAwHFBvkXkwH5F6EBAwHDBu0YkgHtGJgBAwGdBeoYkwHqGKEBAwGbBfcYkgH3GKoBAwGXBfQYkwH0GKEBAwGVBaYZkgGmGZgBAwH7BKMZkwGjGZ4BAwH5BLAZkgGwGacBAwH1BK0ZkwGtGZ4BAwHzBL0dkgG9HaEBAwGKAbodkwG6HZ4BAwGIAccdkgHHHbABAwGEAcQdkwHEHZ4BAwGCAeEdkAHhHdIBAgF13h2RAd4dmQECAXOQHnOQHpUBAgFJkh5pmB6BAQIBTpseaZsevAICAUvZCJMB2QiYAQMB/g7WCJQB1gikAQMB/A7jCJMB4wiXAQMB+g7gCJQB4AikAQMB+A7kCmvkCo8DAwHtDeUKa+4LdgMBnA2MDZMBjA2XAQMBzgyJDZQBiQ2jAQMBzAyPDdgBjw3mAQMByQyPDZIBjw3NAQMBxQyQDdgBkA3rAQMBwgyQDZIBkA3NAQMBvgzHD3fXD4cBAwH9C9gPd9gPmQIDAfgL2Q932Q+BBQMB8wvaD3fhD4ABAwHvC+oPhwHqD5oBAwHmC+wPffMPhgEDAekL9g999g+1AQMB6AuEEJIChBCgAgMB4QuEELEChBDLAgMB4AuEEMMBhBDYAQMB3guFEIYChRCzAgMB3AuLEHuwEIYBAwG6C4EOc5EOgwEDAYwLkg5zkg6VAgMBhwuTDnOTDv0EAwGCC5QOc5sOfAMB/gqkDoMBpA6WAQMB9QqmDnmtDoIBAwH4CrAOebAOsQEDAfcKvg6OAr4OnAIDAfAKvg6tAr4OxwIDAe8Kvg6/Ab4O1AEDAe0Kvw6BAr8OrgIDAesKxQ536g6CAQMByQrREbUF0RG7BQMBggrREdYD0RHmAwMBgArREZwF0RGqBQMB/gnREagE0RHWBAMB/QniEdQB4hGTAgMB+gnjEdYB4xHrAQMB9wnjEfYB4xGEAgMB9QnkEdQB5BHqAQMB8wnlEawC5RHsBAMB8QnlEZ4B5RHzAQMB7gnmEdQB5hHvAQMB7AnsEZcB7BGaAQMB6gnpEZgB6RGiAQMB6An+EZ0B/hGrAQMB5An7EZ4B+xGoAQMB4gmbEmuiEnQDAdEJoxJrqhJ0AwHNCasSa7oScAMBtAmQE23ME3gDAfAIsBRxtxSCAQMBwgi4FHG/FHoDAb4IwBRxxxR6AwG6CMgUcc8UegMBtQjQFHHXFHoDAbEI2BRx2BSgAgMBrgjiFHXpFH4DAakI6hR18RR+AwGlCPIUdfIUsAIDAaIIgBZphxZyAwHOB4gWaYgW9AIDAccHiRZpiRb5AgMBwAeKFmmKFp8BAwG/B5UerAGVHt0BAgFSlB6tAZQeuAECAVGWHq0Blh7BAQIBUJIelgKSHrECAgFPmx6sApseuQICAU2bHucBmx6kAgIBTOcKb+ILegMBng3qC3PqC9IBAwGdDccPxwXHD80FAwGDDMcP6APHD/gDAwGBDMcPrgXHD7wFAwH/C8cPugTHD+gEAwH+C9gP6AHYD/0BAwH7C9gPiALYD5YCAwH5C9kPvgLZD/4EAwH3C9kPsAHZD4UCAwH0C98PoQHfD6IBAwHyC9wPogHcD6wBAwHwC/EPpwHxD7UBAwHsC+4PqAHuD7IBAwHqC5AQfZcQhgEDAdgLmBB9nxCGAQMB1AugEH2vEIIBAwG7C4EOwwWBDskFAwGSC4EO5AOBDvQDAwGQC4EOqgWBDrgFAwGOC4EOtgSBDuQEAwGNC5IO5AGSDvkBAwGKC5IOhAKSDpICAwGIC5MOugKTDvoEAwGGC5MOrAGTDoECAwGDC5kOnQGZDp4BAwGBC5YOngGWDqgBAwH/CqsOowGrDrEBAwH7CqgOpAGoDq4BAwH5CsoOedEOggEDAecK0g552Q6CAQMB4wraDnnpDn4DAcoKoBKWAaASuAEDAdQJnRKXAZ0SoAEDAdIJqBKVAagSwwEDAdAJpRKWAaUSnQEDAc4JqxJ5qxKoAQMBtQmtEm+4EnoDAbgJkhNxwBN8AwHzCMgTdcgTkgIDAfEIshSEArIU0wIDAcUItRSdAbUUpwEDAcMIvRScAb0U1wEDAcEIuhSdAboUpwEDAb8IxRSeAcUUtgEDAb0IwhSfAcIUrAEDAbsIzRScAc0UrAEDAbgIyhSdAcoUpwEDAbYI1RScAdUUuwEDAbQI0hSdAdIUrgEDAbII2BTgAdgUnQIDAa8I5xSgAecUrgEDAawI5BShAeQUqwEDAaoI7xSgAe8UrgEDAagI7BShAewUsgEDAaYI8hTkAfIUrQIDAaMIhRaVAYUWmQEDAdEHghaWAYIWpAEDAc8HiBaWAogWpAIDAcwHiBaUAYgWiwIDAcgHiRaWAokWqQIDAcUHiRaUAYkWiwIDAcEH7Apx8wp6AwHpDfQKcfsKegMB5Q38CnGHC3YDAdwNiAtxkwt2AwHTDZQLcZ8LdgMByg2gC3GrC3YDAcENrAtxtwt2AwG4DbgLccMLdgMBrw3EC3HZC3YDAaQN2gtx4Qt6AwGfDZUQqAGVEMoBAwHbC5IQqQGSELIBAwHZC50QpwGdENUBAwHXC5oQqAGaEK8BAwHVC6AQiwGgELoBAwG8C6IQgQGtEIwBAwG/C88OpAHPDsYBAwHqCswOpQHMDq4BAwHoCtcOowHXDtEBAwHmCtQOpAHUDqsBAwHkCtoOhwHaDrYBAwHLCtwOfecOiAEDAc4KrhJxtRJ6AwHJCbYScbYSvAIDAcEJtxJxtxLCAgMBuQmXE3OeE4QBAwGICZ8Tc6YTfAMBhAmnE3OuE3wDAYAJrxNzthN8AwH7CLcTc74TfAMB9wi/E3O/E6QCAwH0CMgT5AHIE48CAwHyCPEKnAHxCuABAwHsDe4KnQHuCq0BAwHqDfkKnAH5CtkBAwHoDfYKnQH2CrIBAwHmDfwKf/wK6QEDAd0N/gp1hQt+AwHgDYgLf4gL/AEDAdQNigt1kQt+AwHXDZQLf5QL9gEDAcsNlgt1nQt+AwHODaALf6AL/gEDAcINogt1qQt+AwHFDawLf6wLhwIDAbkNrgt1tQt+AwG8DbgLf7gL+AEDAbANugt1wQt+AwGzDcQLf8QLnwEDAaUNxgt1zQt+AwGrDdALddcLfgMBpw3fC5wB3wuiAQMBog3cC50B3AurAQMBoA2jEIMBqhCMAQMB0AurEIMBqxDPAgMByAusEIMBrBDUAgMBwAvdDn/kDogBAwHfCuUOf+UOygIDAdcK5g5/5g7QAgMBzwqzEp0BsxKhAQMBzAmwEp4BsBKvAQMBygm2EtoBthLoAQMBxwm2EpwBthLPAQMBwgm3EtoBtxLtAQMBvwm3EpwBtxLPAQMBugmZE4YCmRPVAgMBiwmcE58BnBOpAQMBiQmkE54BpBPZAQMBhwmhE58BoROpAQMBhQmsE6ABrBO4AQMBgwmpE6EBqROuAQMBgQm0E54BtBOuAQMB/gixE58BsROpAQMB/Ai8E54BvBO9AQMB+gi5E58BuROwAQMB+Ai/E+IBvxOhAgMB9QiAC6EBgAunAQMB4Q2MC6EBjAunAQMB2A2YC6EBmAunAQMBzw2kC6EBpAunAQMBxg2wC6EBsAunAQMBvQ28C6EBvAunAQMBtA3LC6ABywu8AQMBrg3IC6EByAu1AQMBrA3SC6EB0gu1AQMBqA2oEK8BqBCzAQMB0wulELABpRDBAQMB0QurEOwBqxD6AQMBzgurEK4BqxDhAQMByQusEOwBrBD/AQMBxgusEK4BrBDhAQMBwQviDqsB4g6vAQMB4grfDqwB3w69AQMB4ArlDugB5Q72AQMB3QrlDqoB5Q7dAQMB2ArmDugB5g77AQMB1QrmDqoB5g7dAQMB0Ao=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="MessageBox_2" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Comment_181" sap:VirtualizedContainerService.HintSize="314,150" />
      <sap2010:ViewStateData Id="InputDialog_10" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="InputDialog_9" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="InvokeCode_6" sap:VirtualizedContainerService.HintSize="242,51" />
      <sap2010:ViewStateData Id="Assign_772" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_466" sap:VirtualizedContainerService.HintSize="264,275">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_465" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1418" sap:VirtualizedContainerService.HintSize="504,60" />
      <sap2010:ViewStateData Id="Assign_1399" sap:VirtualizedContainerService.HintSize="504,64" />
      <sap2010:ViewStateData Id="HttpClient_31" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="DeserializeXml_37" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_31" sap:VirtualizedContainerService.HintSize="464,89" />
      <sap2010:ViewStateData Id="Assign_1419" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_330" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_32" sap:VirtualizedContainerService.HintSize="464,89" />
      <sap2010:ViewStateData Id="Assign_1421" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_331" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_725" sap:VirtualizedContainerService.HintSize="486,1000">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1420" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_726" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_113" sap:VirtualizedContainerService.HintSize="490,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_111" sap:VirtualizedContainerService.HintSize="504,1694">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_723" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_5" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_727" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,444.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1454" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1455" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1456" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1457" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1460" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1461" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1462" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_768" sap:VirtualizedContainerService.HintSize="200,198">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_2" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_190" sap:VirtualizedContainerService.HintSize="358,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_197" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_198" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_199" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_200" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_201" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="ExcelWriteCell_202" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="ExcelWriteCell_203" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_204" sap:VirtualizedContainerService.HintSize="314,51" />
      <sap2010:ViewStateData Id="ExcelWriteCell_205" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_206" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_207" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_208" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_209" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_210" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Comment_191" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_211" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_212" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_213" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_214" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_215" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_216" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_217" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_218" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_219" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_220" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_221" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_222" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_223" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_224" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_516" sap:VirtualizedContainerService.HintSize="336,3646">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_517" sap:VirtualizedContainerService.HintSize="358,3770">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_518" sap:VirtualizedContainerService.HintSize="380,4008">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_8" sap:VirtualizedContainerService.HintSize="200,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1068" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1066" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_35" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_7" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_512" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1383" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">169,800</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">411,830 705.75,830 705.75,886.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_34" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_123" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_710" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1069" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_709" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="404,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_27" sap:VirtualizedContainerService.HintSize="1013,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_3" sap:VirtualizedContainerService.HintSize="1013,116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_104" sap:VirtualizedContainerService.HintSize="1013,132" />
      <sap2010:ViewStateData Id="Assign_795" sap:VirtualizedContainerService.HintSize="1013,60" />
      <sap2010:ViewStateData Id="Assign_796" sap:VirtualizedContainerService.HintSize="1013,60" />
      <sap2010:ViewStateData Id="Assign_1388" sap:VirtualizedContainerService.HintSize="1013,60" />
      <sap2010:ViewStateData Id="PathExists_3" sap:VirtualizedContainerService.HintSize="539,89" />
      <sap2010:ViewStateData Id="Comment_192" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="CreateDirectory_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_274" sap:VirtualizedContainerService.HintSize="539,208" />
      <sap2010:ViewStateData Id="Sequence_519" sap:VirtualizedContainerService.HintSize="1013,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_105" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="LogMessage_42" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="ReadTextFile_7" sap:VirtualizedContainerService.HintSize="969,59" />
      <sap2010:ViewStateData Id="DeserializeXml_28" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="LogMessage_49" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="GetXMLNodeAttributes_19" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_597" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Substring_7" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_354" sap:VirtualizedContainerService.HintSize="336,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_70" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_598" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="Assign_599" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="Assign_600" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="Assign_601" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="LogMessage_52" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_602" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_603" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_604" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_605" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_355" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_606" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_15" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_20" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_356" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_73" sap:VirtualizedContainerService.HintSize="404,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_72" sap:VirtualizedContainerService.HintSize="969,747">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_53" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_607" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_608" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_16" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_21" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_357" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_74" sap:VirtualizedContainerService.HintSize="404,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_73" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_54" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_693" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Comment_106" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Assign_610" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_359" sap:VirtualizedContainerService.HintSize="336,298">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_75" sap:VirtualizedContainerService.HintSize="404,367">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_74" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_204" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Assign_611" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_612" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_613" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_614" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_615" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_616" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_617" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_360" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_55" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_618" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="LogMessage_70" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_1293" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_29" sap:VirtualizedContainerService.HintSize="314,89" />
      <sap2010:ViewStateData Id="LogMessage_71" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="AddToCollection`1_97" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_573" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_106" sap:VirtualizedContainerService.HintSize="314,280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_574" sap:VirtualizedContainerService.HintSize="969,764">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_56" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_620" sap:VirtualizedContainerService.HintSize="969,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_28" sap:VirtualizedContainerService.HintSize="547,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1274" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_1275" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="LogMessage_69" sap:VirtualizedContainerService.HintSize="509,91" />
      <sap2010:ViewStateData Id="Assign_1276" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1277" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_299" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1426" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_338" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1278" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_570" sap:VirtualizedContainerService.HintSize="531,911">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_105" sap:VirtualizedContainerService.HintSize="547,1045">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1279" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_1280" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Sequence_571" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_37" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_38" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_1458" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1459" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_771" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_5" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_770" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_116" sap:VirtualizedContainerService.HintSize="404,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_114" sap:VirtualizedContainerService.HintSize="969,490" />
      <sap2010:ViewStateData Id="LogMessage_57" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_623" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_625" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_626" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_1396" sap:VirtualizedContainerService.HintSize="478,60" />
      <sap2010:ViewStateData Id="Assign_627" sap:VirtualizedContainerService.HintSize="440,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_74" sap:VirtualizedContainerService.HintSize="440,22" />
      <sap2010:ViewStateData Id="Assign_628" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_629" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_630" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_631" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_142" sap:VirtualizedContainerService.HintSize="242,51" />
      <sap2010:ViewStateData Id="Sequence_361" sap:VirtualizedContainerService.HintSize="264,375">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_632" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_76" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_75" sap:VirtualizedContainerService.HintSize="418,706">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_362" sap:VirtualizedContainerService.HintSize="440,830">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_363" sap:VirtualizedContainerService.HintSize="462,1116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_71" sap:VirtualizedContainerService.HintSize="478,1250">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_633" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_143" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_364" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_8" sap:VirtualizedContainerService.HintSize="772,22" />
      <sap2010:ViewStateData Id="Assign_634" sap:VirtualizedContainerService.HintSize="772,60" />
      <sap2010:ViewStateData Id="Assign_635" sap:VirtualizedContainerService.HintSize="772,60" />
      <sap2010:ViewStateData Id="Assign_636" sap:VirtualizedContainerService.HintSize="772,64" />
      <sap2010:ViewStateData Id="HttpClient_23" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_23" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_637" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_365" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_638" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_18" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_144" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Catch`1_77" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_76" sap:VirtualizedContainerService.HintSize="418,700">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_14" sap:VirtualizedContainerService.HintSize="772,862">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_30" sap:VirtualizedContainerService.HintSize="772,89" />
      <sap2010:ViewStateData Id="AddToCollection`1_98" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_581" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_111" sap:VirtualizedContainerService.HintSize="772,194">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddDataRow_22" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_583" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_197" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="If_303" sap:VirtualizedContainerService.HintSize="539,208" />
      <sap2010:ViewStateData Id="Sequence_582" sap:VirtualizedContainerService.HintSize="222,175">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_112" sap:VirtualizedContainerService.HintSize="772,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_18" sap:VirtualizedContainerService.HintSize="314,89" />
      <sap2010:ViewStateData Id="Comment_107" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Assign_639" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_640" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_366" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_72" sap:VirtualizedContainerService.HintSize="314,418">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_367" sap:VirtualizedContainerService.HintSize="772,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_19" sap:VirtualizedContainerService.HintSize="772,89" />
      <sap2010:ViewStateData Id="Comment_108" sap:VirtualizedContainerService.HintSize="772,74" />
      <sap2010:ViewStateData Id="Assign_641" sap:VirtualizedContainerService.HintSize="587,60" />
      <sap2010:ViewStateData Id="Comment_109" sap:VirtualizedContainerService.HintSize="549,170" />
      <sap2010:ViewStateData Id="Assign_642" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_643" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Assign_644" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_145" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_645" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_146" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_646" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_147" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_647" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_148" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_648" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_149" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_649" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_150" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_650" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_651" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_151" sap:VirtualizedContainerService.HintSize="509,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_652" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_368" sap:VirtualizedContainerService.HintSize="531,2120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_110" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="Catch`1_78" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_77" sap:VirtualizedContainerService.HintSize="549,2451" />
      <sap2010:ViewStateData Id="Sequence_369" sap:VirtualizedContainerService.HintSize="571,2785">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_73" sap:VirtualizedContainerService.HintSize="587,2919" />
      <sap2010:ViewStateData Id="Sequence_370" sap:VirtualizedContainerService.HintSize="609,3143">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_152" sap:VirtualizedContainerService.HintSize="734,3291">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_371" sap:VirtualizedContainerService.HintSize="756,3415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_74" sap:VirtualizedContainerService.HintSize="772,3549">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_372" sap:VirtualizedContainerService.HintSize="794,5729">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_373" sap:VirtualizedContainerService.HintSize="816,5853">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_58" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Delay_9" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_653" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_654" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="Assign_655" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="HttpClient_24" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_30" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_24" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_656" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_374" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_657" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_19" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_153" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_79" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_78" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_15" sap:VirtualizedContainerService.HintSize="542,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_20" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_658" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_659" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_792" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_23" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_440" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_154" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_375" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_75" sap:VirtualizedContainerService.HintSize="502,914" />
      <sap2010:ViewStateData Id="Sequence_376" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_13" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_80" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_79" sap:VirtualizedContainerService.HintSize="542,1637">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_377" sap:VirtualizedContainerService.HintSize="969,3389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_59" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_660" sap:VirtualizedContainerService.HintSize="947,60" />
      <sap2010:ViewStateData Id="GetXMLNodeAttributes_21" sap:VirtualizedContainerService.HintSize="314,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_721" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="Assign_722" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_88" sap:VirtualizedContainerService.HintSize="564,22" />
      <sap2010:ViewStateData Id="Delay_10" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_723" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_724" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_725" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="HttpClient_28" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_34" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_28" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_726" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_434" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_727" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_23" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_180" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_88" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_87" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_19" sap:VirtualizedContainerService.HintSize="542,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_23" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_728" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_729" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_793" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_5" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_24" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_439" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_181" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_435" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_89" sap:VirtualizedContainerService.HintSize="502,914" />
      <sap2010:ViewStateData Id="Sequence_436" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_89" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_88" sap:VirtualizedContainerService.HintSize="542,1637" />
      <sap2010:ViewStateData Id="Sequence_437" sap:VirtualizedContainerService.HintSize="564,3389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_438" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_39">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,414.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1427" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="Assign_1428" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_101" sap:VirtualizedContainerService.HintSize="564,22" />
      <sap2010:ViewStateData Id="Delay_11" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_1429" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_1430" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_1431" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="HttpClient_32" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="DeserializeXml_38" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_29" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_1432" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_733" sap:VirtualizedContainerService.HintSize="336,473">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1433" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_24" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_340" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_114" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_112" sap:VirtualizedContainerService.HintSize="487,1060">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_20" sap:VirtualizedContainerService.HintSize="542,1222">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_33" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_1434" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_1435" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_1436" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_31" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_32" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_734" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_341" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_735" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_123" sap:VirtualizedContainerService.HintSize="502,914" />
      <sap2010:ViewStateData Id="Sequence_736" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_39" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_115" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_113" sap:VirtualizedContainerService.HintSize="542,1637" />
      <sap2010:ViewStateData Id="Sequence_737" sap:VirtualizedContainerService.HintSize="564,3389">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_738" sap:VirtualizedContainerService.HintSize="586,3775">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">274,577</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_127" sap:VirtualizedContainerService.HintSize="314,55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_40">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">533,512.5</av:Point>
            <av:Size x:Key="ShapeSize">314,55</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_10" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">425,376.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">425,420 374,420 374,577</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">495,420 690,420 690,512.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">295,276.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">295,320 220,320 220,414.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">365,320 460,320 460,376.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_37">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">173,160</av:Point>
            <av:Size x:Key="ShapeSize">314,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,220 330,276.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_207" sap:VirtualizedContainerService.HintSize="314,151">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">603,202.235</av:Point>
            <av:Size x:Key="ShapeSize">314,151</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="931,664">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">300,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,77.5 330,160</av:PointCollection>
            <x:Double x:Key="Width">917</x:Double>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Double x:Key="Height">628</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_77" sap:VirtualizedContainerService.HintSize="947,798">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_384" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_61" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_670" sap:VirtualizedContainerService.HintSize="602,60" />
      <sap2010:ViewStateData Id="Assign_732" sap:VirtualizedContainerService.HintSize="602,60" />
      <sap2010:ViewStateData Id="Assign_671" sap:VirtualizedContainerService.HintSize="602,60" />
      <sap2010:ViewStateData Id="LogMessage_64" sap:VirtualizedContainerService.HintSize="564,91" />
      <sap2010:ViewStateData Id="Assign_1394" sap:VirtualizedContainerService.HintSize="564,60" />
      <sap2010:ViewStateData Id="AddToCollection`1_99" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_100" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_318" sap:VirtualizedContainerService.HintSize="564,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_91" sap:VirtualizedContainerService.HintSize="564,22" />
      <sap2010:ViewStateData Id="LogMessage_65" sap:VirtualizedContainerService.HintSize="564,91" />
      <sap2010:ViewStateData Id="Delay_12" sap:VirtualizedContainerService.HintSize="542,22" />
      <sap2010:ViewStateData Id="Assign_672" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_673" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_674" sap:VirtualizedContainerService.HintSize="542,60" />
      <sap2010:ViewStateData Id="Assign_675" sap:VirtualizedContainerService.HintSize="542,64" />
      <sap2010:ViewStateData Id="HttpClient_26" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_66" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="DeserializeXml_32" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_67" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="WriteTextFile_26" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_68" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Assign_676" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_385" sap:VirtualizedContainerService.HintSize="336,866">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_677" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_21" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_158" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_83" sap:VirtualizedContainerService.HintSize="473,277">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_82" sap:VirtualizedContainerService.HintSize="487,1453">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_17" sap:VirtualizedContainerService.HintSize="542,1615">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_24" sap:VirtualizedContainerService.HintSize="502,89" />
      <sap2010:ViewStateData Id="Assign_730" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_731" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_794" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_6" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_25" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_441" sap:VirtualizedContainerService.HintSize="264,308">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_182" sap:VirtualizedContainerService.HintSize="464,456" />
      <sap2010:ViewStateData Id="Sequence_453" sap:VirtualizedContainerService.HintSize="486,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_93" sap:VirtualizedContainerService.HintSize="502,914">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_442" sap:VirtualizedContainerService.HintSize="524,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_19" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Catch`1_90" sap:VirtualizedContainerService.HintSize="528,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_89" sap:VirtualizedContainerService.HintSize="542,1637" />
      <sap2010:ViewStateData Id="Sequence_386" sap:VirtualizedContainerService.HintSize="564,3882">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_387" sap:VirtualizedContainerService.HintSize="586,4678">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_78" sap:VirtualizedContainerService.HintSize="602,4812">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_388" sap:VirtualizedContainerService.HintSize="969,5236">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_62" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_1365" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_1366" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_1367" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="LogMessage_73" sap:VirtualizedContainerService.HintSize="603,91" />
      <sap2010:ViewStateData Id="Assign_1368" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Comment_202" sap:VirtualizedContainerService.HintSize="314,131" />
      <sap2010:ViewStateData Id="StartProcess_7" sap:VirtualizedContainerService.HintSize="454,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetFullText_11" sap:VirtualizedContainerService.HintSize="314,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1369" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1370" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1371" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1372" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_74" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_697" sap:VirtualizedContainerService.HintSize="336,761">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_24" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_106" sap:VirtualizedContainerService.HintSize="404,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_105" sap:VirtualizedContainerService.HintSize="418,1231">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_698" sap:VirtualizedContainerService.HintSize="440,1355">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_29" sap:VirtualizedContainerService.HintSize="454,1501">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CloseApplication_6" sap:VirtualizedContainerService.HintSize="454,106" />
      <sap2010:ViewStateData Id="Assign_1373" sap:VirtualizedContainerService.HintSize="454,60" />
      <sap2010:ViewStateData Id="Break_7" sap:VirtualizedContainerService.HintSize="454,22" />
      <sap2010:ViewStateData Id="Sequence_699" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_120" sap:VirtualizedContainerService.HintSize="314,236">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_700" sap:VirtualizedContainerService.HintSize="336,631">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1463" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_315" sap:VirtualizedContainerService.HintSize="603,779">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_701" sap:VirtualizedContainerService.HintSize="625,1334">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_203" sap:VirtualizedContainerService.HintSize="603,74" />
      <sap2010:ViewStateData Id="Assign_1374" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="StartProcess_8" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1384" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1385" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="GetFullText_12" sap:VirtualizedContainerService.HintSize="314,106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1375" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1376" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1377" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1378" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_75" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_702" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1386" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1387" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_25" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_703" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_107" sap:VirtualizedContainerService.HintSize="404,120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_106" sap:VirtualizedContainerService.HintSize="418,490">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_704" sap:VirtualizedContainerService.HintSize="440,1315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WindowScope_30" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CloseApplication_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Assign_1379" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Break_8" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_705" sap:VirtualizedContainerService.HintSize="336,810">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_121" sap:VirtualizedContainerService.HintSize="603,944">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1380" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1381" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="AddDataRow_14" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddDataRow_30" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="LogMessage_36" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_706" sap:VirtualizedContainerService.HintSize="336,539">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1425" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_316" sap:VirtualizedContainerService.HintSize="603,687">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_707" sap:VirtualizedContainerService.HintSize="625,2009">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_108" sap:VirtualizedContainerService.HintSize="631,2078">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_107" sap:VirtualizedContainerService.HintSize="645,3722">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_63" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_695" sap:VirtualizedContainerService.HintSize="788,60" />
      <sap2010:ViewStateData Id="Assign_696" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_171" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_418" sap:VirtualizedContainerService.HintSize="486,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_84" sap:VirtualizedContainerService.HintSize="788,466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1307" sap:VirtualizedContainerService.HintSize="641,60" />
      <sap2010:ViewStateData Id="Assign_1304" sap:VirtualizedContainerService.HintSize="603,60" />
      <sap2010:ViewStateData Id="Assign_1305" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_13" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddDataRow_26" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_605" sap:VirtualizedContainerService.HintSize="264,370">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_205" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="If_306" sap:VirtualizedContainerService.HintSize="603,518">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_606" sap:VirtualizedContainerService.HintSize="625,742">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_116" sap:VirtualizedContainerService.HintSize="641,876">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_607" sap:VirtualizedContainerService.HintSize="663,1100">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_172" sap:VirtualizedContainerService.HintSize="788,1248">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_417" sap:VirtualizedContainerService.HintSize="810,1978">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_445" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_60" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Assign_1311" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1317" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_96" sap:VirtualizedContainerService.HintSize="468,133">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1316" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_308" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_95" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1315" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1318" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_97" sap:VirtualizedContainerService.HintSize="468,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1319" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_309" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_96" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1323" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1321" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_98" sap:VirtualizedContainerService.HintSize="468,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1324" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_310" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_97" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1327" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1328" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Catch`1_99" sap:VirtualizedContainerService.HintSize="468,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1326" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_311" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_98" sap:VirtualizedContainerService.HintSize="969,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_50" sap:VirtualizedContainerService.HintSize="969,91" />
      <sap2010:ViewStateData Id="Sequence_392" sap:VirtualizedContainerService.HintSize="991,21906">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_393" sap:VirtualizedContainerService.HintSize="336,289">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="1013,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="613,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_128" sap:VirtualizedContainerService.HintSize="613,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_139" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_140" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Assign_1389" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_1390" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1391" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_317" sap:VirtualizedContainerService.HintSize="509,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1392" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_711" sap:VirtualizedContainerService.HintSize="531,431">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_122" sap:VirtualizedContainerService.HintSize="547,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_225" sap:VirtualizedContainerService.HintSize="547,87" />
      <sap2010:ViewStateData Id="Sequence_712" sap:VirtualizedContainerService.HintSize="569,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_141" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_142" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_143" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_144" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_145" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_146" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_147" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_148" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_149" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_150" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_151" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Comment_130" sap:VirtualizedContainerService.HintSize="569,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_152" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_153" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_154" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Assign_1289" sap:VirtualizedContainerService.HintSize="569,60" />
      <sap2010:ViewStateData Id="Assign_1287" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1288" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_302" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_576" sap:VirtualizedContainerService.HintSize="531,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_108" sap:VirtualizedContainerService.HintSize="569,464" />
      <sap2010:ViewStateData Id="ExcelWriteCell_155" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_156" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_157" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_158" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_159" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Assign_773" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_1393" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_774" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_775" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_187" sap:VirtualizedContainerService.HintSize="509,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_776" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_467" sap:VirtualizedContainerService.HintSize="531,431">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_95" sap:VirtualizedContainerService.HintSize="547,564" />
      <sap2010:ViewStateData Id="ExcelWriteCell_160" sap:VirtualizedContainerService.HintSize="547,87" />
      <sap2010:ViewStateData Id="Sequence_468" sap:VirtualizedContainerService.HintSize="569,1015">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_777" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_778" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_779" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_188" sap:VirtualizedContainerService.HintSize="509,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_780" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="Sequence_469" sap:VirtualizedContainerService.HintSize="531,431">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_96" sap:VirtualizedContainerService.HintSize="547,564">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_161" sap:VirtualizedContainerService.HintSize="547,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_470" sap:VirtualizedContainerService.HintSize="569,915">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_162" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_163" sap:VirtualizedContainerService.HintSize="569,87" />
      <sap2010:ViewStateData Id="Comment_131" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_164" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_165" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_471" sap:VirtualizedContainerService.HintSize="569,452">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_781" sap:VirtualizedContainerService.HintSize="569,60" />
      <sap2010:ViewStateData Id="SendHotkey_6" sap:VirtualizedContainerService.HintSize="569,154">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_472" sap:VirtualizedContainerService.HintSize="591,6610">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_473" sap:VirtualizedContainerService.HintSize="613,6734">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="613,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_474" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_6" sap:VirtualizedContainerService.HintSize="1013,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="1013,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_782" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="PathExists_2" sap:VirtualizedContainerService.HintSize="711,89" />
      <sap2010:ViewStateData Id="Comment_189" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_273" sap:VirtualizedContainerService.HintSize="711,208" />
      <sap2010:ViewStateData Id="LogMessage_45" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="CopyFile_6" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="LogMessage_46" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Delay_6" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="Assign_783" sap:VirtualizedContainerService.HintSize="711,60" />
      <sap2010:ViewStateData Id="WordReplaceText_296" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_297" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_298" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_299" sap:VirtualizedContainerService.HintSize="561,59" />
      <sap2010:ViewStateData Id="WordReplaceText_300" sap:VirtualizedContainerService.HintSize="561,59" />
      <sap2010:ViewStateData Id="WordReplaceText_301" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="WordReplaceText_302" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="WordReplaceText_303" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_304" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_351" sap:VirtualizedContainerService.HintSize="561,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_305" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="WordReplaceText_306" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="WordReplaceText_307" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="WordReplaceText_308" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="WordReplaceText_309" sap:VirtualizedContainerService.HintSize="561,51" />
      <sap2010:ViewStateData Id="Comment_214" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="AddDataRow_33" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddDataRow_34" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_755" sap:VirtualizedContainerService.HintSize="336,303">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_310" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="If_352" sap:VirtualizedContainerService.HintSize="561,451">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_756" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_311" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_312" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_353" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1445" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_1446" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1447" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_354" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_757" sap:VirtualizedContainerService.HintSize="531,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_128" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_313" sap:VirtualizedContainerService.HintSize="675,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_314" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_315" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Assign_1448" sap:VirtualizedContainerService.HintSize="653,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_12" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_316" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_355" sap:VirtualizedContainerService.HintSize="653,235" />
      <sap2010:ViewStateData Id="Sequence_758" sap:VirtualizedContainerService.HintSize="675,459">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_129" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_215" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="WordReplaceText_317" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_759" sap:VirtualizedContainerService.HintSize="675,369">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1449" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_760" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_130" sap:VirtualizedContainerService.HintSize="287,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_13" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_318" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_356" sap:VirtualizedContainerService.HintSize="287,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_761" sap:VirtualizedContainerService.HintSize="675,532">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_319" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_320" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_216" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="AddDataRow_35" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="AddDataRow_36" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_762" sap:VirtualizedContainerService.HintSize="336,303">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_321" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_357" sap:VirtualizedContainerService.HintSize="675,450">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1450" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WordReplaceText_322" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_217" sap:VirtualizedContainerService.HintSize="653,94" />
      <sap2010:ViewStateData Id="WordReplaceText_323" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_763" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_3" sap:VirtualizedContainerService.HintSize="653,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_14" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_324" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_358" sap:VirtualizedContainerService.HintSize="653,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_764" sap:VirtualizedContainerService.HintSize="675,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_131" sap:VirtualizedContainerService.HintSize="691,717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_218" sap:VirtualizedContainerService.HintSize="691,55" />
      <sap2010:ViewStateData Id="WordReplaceText_325" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="Sequence_765" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_72" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="WordReplaceText_326" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_327" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Assign_1451" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Comment_219" sap:VirtualizedContainerService.HintSize="675,74" />
      <sap2010:ViewStateData Id="Assign_1452" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WordReplaceText_328" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="WordReplaceText_329" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_359" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_330" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_331" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_360" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_332" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_361" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_333" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_362" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_334" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_363" sap:VirtualizedContainerService.HintSize="464,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_766" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_335" sap:VirtualizedContainerService.HintSize="675,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_336" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_337" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_364" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_338" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_339" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_340" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_220" sap:VirtualizedContainerService.HintSize="314,55" />
      <sap2010:ViewStateData Id="Assign_1453" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_365" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_341" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="SendHotkey_7" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="SendHotkey_8" sap:VirtualizedContainerService.HintSize="314,116" />
      <sap2010:ViewStateData Id="WordInsertDataTable_1" sap:VirtualizedContainerService.HintSize="314,66" />
      <sap2010:ViewStateData Id="Sequence_772" sap:VirtualizedContainerService.HintSize="675,502">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_767" sap:VirtualizedContainerService.HintSize="697,5145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_6" sap:VirtualizedContainerService.HintSize="711,5254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_488" sap:VirtualizedContainerService.HintSize="1013,6341">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="1013,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_40" sap:VirtualizedContainerService.HintSize="755,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1437" sap:VirtualizedContainerService.HintSize="733,60" />
      <sap2010:ViewStateData Id="PathExists_8" sap:VirtualizedContainerService.HintSize="733,89" />
      <sap2010:ViewStateData Id="CopyFile_7" sap:VirtualizedContainerService.HintSize="733,22" />
      <sap2010:ViewStateData Id="Delay_7" sap:VirtualizedContainerService.HintSize="733,22" />
      <sap2010:ViewStateData Id="Assign_1438" sap:VirtualizedContainerService.HintSize="733,60" />
      <sap2010:ViewStateData Id="WordReplaceText_342" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_267" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_268" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="WordReplaceText_269" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Assign_1439" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_1440" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1441" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_346" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="Sequence_742" sap:VirtualizedContainerService.HintSize="531,331">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_124" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_283" sap:VirtualizedContainerService.HintSize="675,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1443" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_745" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_126" sap:VirtualizedContainerService.HintSize="653,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_288" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_348" sap:VirtualizedContainerService.HintSize="653,234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_746" sap:VirtualizedContainerService.HintSize="675,715">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1444" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WordReplaceText_292" sap:VirtualizedContainerService.HintSize="675,59" />
      <sap2010:ViewStateData Id="Comment_212" sap:VirtualizedContainerService.HintSize="653,94" />
      <sap2010:ViewStateData Id="WordReplaceText_293" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_748" sap:VirtualizedContainerService.HintSize="336,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="653,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_294" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_350" sap:VirtualizedContainerService.HintSize="653,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_749" sap:VirtualizedContainerService.HintSize="675,584">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_127" sap:VirtualizedContainerService.HintSize="691,717">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_213" sap:VirtualizedContainerService.HintSize="691,55" />
      <sap2010:ViewStateData Id="WordReplaceText_295" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="Sequence_750" sap:VirtualizedContainerService.HintSize="675,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_752" sap:VirtualizedContainerService.HintSize="697,1815">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_753" sap:VirtualizedContainerService.HintSize="719,1939">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_7" sap:VirtualizedContainerService.HintSize="733,2048">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_754" sap:VirtualizedContainerService.HintSize="755,2625">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_41" sap:VirtualizedContainerService.HintSize="755,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_739" sap:VirtualizedContainerService.HintSize="1013,3011">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_1" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_9" sap:VirtualizedContainerService.HintSize="414,196">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1087" sap:VirtualizedContainerService.HintSize="1013,60" />
      <sap2010:ViewStateData Id="Sequence_413" sap:VirtualizedContainerService.HintSize="1035,11386">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1088" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_15" sap:VirtualizedContainerService.HintSize="314,91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_416" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_85" sap:VirtualizedContainerService.HintSize="1039,446">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_84" sap:VirtualizedContainerService.HintSize="1053,12142">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_82" sap:VirtualizedContainerService.HintSize="1069,12276">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">460,1184.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">460,1210 139,1210 139,830 169,830</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_11" sap:VirtualizedContainerService.HintSize="111,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">690.641666666667,1076.5</av:Point>
            <av:Size x:Key="ShapeSize">111,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">690.641666666667,1120 560,1120 560,1184.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">801.641666666667,1120 831.641666666667,1120 831.641666666667,984.5 180,984.5 180,890 290,890 290,860</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">500,1014.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">700,1040 746.141666666667,1040 746.141666666667,1076.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_8" sap:VirtualizedContainerService.HintSize="107,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">255,996.5</av:Point>
            <av:Size x:Key="ShapeSize">107,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">362,1040 500,1040</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">255,1040 139,1040 139,830 169,830</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_67">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">210,904.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">310,955.5 310,985.5 308.5,985.5 308.5,996.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_770" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_768" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_1296" sap:VirtualizedContainerService.HintSize="601,64" />
      <sap2010:ViewStateData Id="Assign_1124" sap:VirtualizedContainerService.HintSize="601,60" />
      <sap2010:ViewStateData Id="Assign_1310" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1190" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1192" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1193" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1194" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1196" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1197" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_553" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1201" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_557" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_285" sap:VirtualizedContainerService.HintSize="553,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1237" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1238" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_294" sap:VirtualizedContainerService.HintSize="553,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1212" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_1205" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_559" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_286" sap:VirtualizedContainerService.HintSize="553,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1233" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Sequence_556" sap:VirtualizedContainerService.HintSize="575,1880">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_5" sap:VirtualizedContainerService.HintSize="601,2038">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_541" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_797" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_765" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_766" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendMail_4" sap:VirtualizedContainerService.HintSize="314,322">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Sequence_461" sap:VirtualizedContainerService.HintSize="336,818">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_47">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">230,804.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">209,670</av:Point>
            <av:Size x:Key="ShapeSize">242,64</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,734 330,804.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,464.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">140,515.5 140,545.5 330,545.5 330,670</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_195" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Sequence_460" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_48">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">430,464.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">530,515.5 530,545.5 330,545.5 330,670</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">295,376.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">295,420 140,420 140,464.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">365,420 530,420 530,464.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">209,268</av:Point>
            <av:Size x:Key="ShapeSize">242,64</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,332 330,376.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">209,150</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,210 330,268</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">300,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">850</x:Double>
            <x:Double x:Key="Height">1145.5</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">330,87.5 330,150</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_46">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">940,904.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_6" sap:VirtualizedContainerService.HintSize="97,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">681.5,886.5</av:Point>
            <av:Size x:Key="ShapeSize">97,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">681.5,930 410,930</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">778.5,930 940,930</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">739,760</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,820 860,850 730,850 730,886.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_71">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,624.5</av:Point>
            <av:Size x:Key="ShapeSize">200,93</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,717.5 860,760</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_36">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">940,386</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">1040,494 1040,594.5 860,594.5 860,624.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_95">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">680,341</av:Point>
            <av:Size x:Key="ShapeSize">200,198</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">880,440 940,440</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_9" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">335,426.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">335,470 220,470</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">405,470 435,470 435,440 680,440</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">240,314.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">340,365.5 340,395.5 370,395.5 370,426.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_53">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">240,234.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">340,285.5 340,314.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_79" sap:VirtualizedContainerService.HintSize="314,55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">683,232.5</av:Point>
            <av:Size x:Key="ShapeSize">314,55</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">393,260 363,260 363,186.5 290.5,186.5 290.5,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">515,216.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">515,260 440,260</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">585,260 683,260</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">450,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">550,165.5 550,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_103" sap:VirtualizedContainerService.HintSize="314,284" />
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">853,1068</av:Point>
            <av:Size x:Key="ShapeSize">314,284</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_188" sap:VirtualizedContainerService.HintSize="314,207">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_70">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">213,556.5</av:Point>
            <av:Size x:Key="ShapeSize">314,207</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1299,1678">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">520,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">1285</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">550,77.4 550,114.5</av:PointCollection>
            <x:Double x:Key="Height">1642</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MainFlowchart_1" sap:VirtualizedContainerService.HintSize="1251,1758">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>