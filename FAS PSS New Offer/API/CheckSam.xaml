<Activity mc:Ignorable="sap sap2010 sads" x:Class="CheckSam"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sn="clr-namespace:System.Net;assembly=System"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_location" Type="InArgument(x:String)" />
    <x:Property Name="in_iff" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="in_contract" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="in_negInfo" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="io_data" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_pdfSam" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CheckSam_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="CheckSam" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="DUNSNumber" />
      <Variable x:TypeArguments="s:DateTime" Name="dateTime" />
      <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="people" />
      <Variable x:TypeArguments="x:String" Name="name" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="exclusionList" />
      <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
      <Variable x:TypeArguments="x:String" Name="soapResult" />
      <Variable x:TypeArguments="x:Object" Name="badNames" />
      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="nameList" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="allPeople" />
      <Variable x:TypeArguments="x:String" Name="dunsResult" />
      <Variable x:TypeArguments="x:Boolean" Name="dunsExclusionFound" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_1">
        <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[DUNSNumber]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[io_data("dunsNumber").ToString()]</InArgument>
          </Assign.Value>
        </Assign>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_2">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="s:DateTime">[dateTime]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:DateTime">[NOW]</InArgument>
              </Assign.Value>
            </Assign>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_44">
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="check for DUNS exclusion" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="SamDunsExclusionCheck.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_exclusionApiKey">[in_config("exclusionApiKey").ToString()]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="in_duns">[DUNSNumber]</InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="o_result">[dunsResult]</OutArgument>
                    <OutArgument x:TypeArguments="x:Boolean" x:Key="o_exclusion">[dunsExclusionFound]</OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <FlowStep.Next>
                  <FlowDecision x:Name="__ReferenceID16" Condition="[dunsExclusionFound]" DisplayName="exclusion found?" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_50">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_148">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[io_data("exclusionFound")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_45">
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_78" Level="Trace" Message="[&quot;SAM exclusion for &quot;+DUNSNumber+&quot; complete&quot;]" />
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_46">
                                <ui:WriteTextFile DisplayName="Write text file" FileName="[in_location+&quot;SAM_SearchDUNS_&quot;+DUNSNumber+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_31" Text="[dateTime.ToString+System.Environment.NewLine+&#xA;&quot;SAM Search&quot;+System.Environment.NewLine +&#xA;&quot;     DUNS: &quot;+ DUNSNumber+ System.Environment.NewLine + System.Environment.NewLine+&#xA;dunsResult]" />
                                <FlowStep.Next>
                                  <FlowDecision x:Name="__ReferenceID7" Condition="[in_negInfo.Count = 0]" DisplayName="no neg." sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_15">
                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Trace" Message="No negotiators found" />
                                        <FlowStep.Next>
                                          <FlowDecision x:Name="__ReferenceID2" Condition="[in_contract.Count = 0]" DisplayName="no admin" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                            <FlowDecision.True>
                                              <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_16">
                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Trace" Message="No Admins found" />
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_18">
                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="scg:List(x:String)">[people]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="scg:List(x:String)">[tryCast(io_data("iffAdmins"),List(of String))]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <FlowStep.Next>
                                                      <FlowDecision x:Name="__ReferenceID1" Condition="[people.Count = 0]" DisplayName="no iff" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                                        <FlowDecision.True>
                                                          <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_17">
                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Trace" Message="No IFF found" />
                                                            <FlowStep.Next>
                                                              <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_47">
                                                                <Assign DisplayName="add to pdf look up list" sap2010:WorkflowViewState.IdRef="Assign_140">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Object">[in_pdfSam(DUNSNumber)]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Object">[allPeople]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </FlowStep>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowDecision.True>
                                                        <FlowDecision.False>
                                                          <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_23">
                                                            <ui:ForEach x:TypeArguments="x:String" DisplayName="Check all IFF" sap2010:WorkflowViewState.IdRef="ForEach`1_20" Values="[people.Distinct()]">
                                                              <ui:ForEach.Body>
                                                                <ActivityAction x:TypeArguments="x:String">
                                                                  <ActivityAction.Argument>
                                                                    <DelegateInArgument x:TypeArguments="x:String" Name="person" />
                                                                  </ActivityAction.Argument>
                                                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                                    <Sequence.Variables>
                                                                      <Variable x:TypeArguments="s:String[]" Name="fullName" />
                                                                      <Variable x:TypeArguments="x:String" Default="QJzCcM5RFgnrptQSGr5xRN4HxoJ8dOk6lpYB1DJX" Name="exclusionApiKey" />
                                                                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)]" Name="samResults" />
                                                                    </Sequence.Variables>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_88">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[person.Split(","c)(0).ToString()]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="s:String[]">[fullName]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="s:String[]">[name.Split(" "c)]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <InvokeMethod DisplayName="add to total people list" sap2010:WorkflowViewState.IdRef="InvokeMethod_17" MethodName="Add">
                                                                      <InvokeMethod.TargetObject>
                                                                        <InArgument x:TypeArguments="scg:List(x:String)">[allPeople]</InArgument>
                                                                      </InvokeMethod.TargetObject>
                                                                      <InArgument x:TypeArguments="x:String">[name]</InArgument>
                                                                    </InvokeMethod>
                                                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_51" Level="Info" Message="[&quot;IFF check: &quot;+name]" />
                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="SamNameExclusionCheck.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_firstName">[fullName(0)]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_lastName">[fullName(fullName.Length -1)]</InArgument>
                                                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_samExclusionResults">[samResults]</InOutArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_exclusionApiKey">[exclusionApiKey]</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="s:DateTime">[dateTime]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <If Condition="[samResults(&quot;NoResults&quot;) IS NOTHING]" DisplayName="Find exclusion?" sap2010:WorkflowViewState.IdRef="If_24">
                                                                      <If.Then>
                                                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                                          <ui:WriteTextFile DisplayName="Write exclusion" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_33" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;String.Join(&quot;&quot;, TryCast( samResults(&quot;namesFound&quot;),List (Of String)))]" />
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_142">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="scg:List(x:String)">[exclusionList]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="scg:List(x:String)">[TryCast( samResults("namesFound"),List (Of String))]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_146">
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Object">[io_data("exclusionFound")]</OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <ui:WriteTextFile DisplayName="Write no exclusion" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_17" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;samResults(&quot;NoResults&quot;).ToString()]" />
                                                                      </If.Else>
                                                                    </If>
                                                                    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_52" Level="Trace" Message="SAM IFF check written to file" />
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:ForEach.Body>
                                                            </ui:ForEach>
                                                            <FlowStep.Next>
                                                              <x:Reference>__ReferenceID0</x:Reference>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowDecision.False>
                                                      </FlowDecision>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowDecision.True>
                                            <FlowDecision.False>
                                              <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                                                <ui:ForEach x:TypeArguments="x:String" DisplayName="Check all Admins" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[in_contract.Distinct()]">
                                                  <ui:ForEach.Body>
                                                    <ActivityAction x:TypeArguments="x:String">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="x:String" Name="person" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="s:String[]" Name="fullName" />
                                                          <Variable x:TypeArguments="x:String" Default="QJzCcM5RFgnrptQSGr5xRN4HxoJ8dOk6lpYB1DJX" Name="exclusionApiKey" />
                                                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)]" Name="samResults" />
                                                        </Sequence.Variables>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[person.Split(","c)(0).ToString()]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:String[]">[fullName]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:String[]">[name.Split(" "c)]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <InvokeMethod DisplayName="add to total people list" sap2010:WorkflowViewState.IdRef="InvokeMethod_16" MethodName="Add">
                                                          <InvokeMethod.TargetObject>
                                                            <InArgument x:TypeArguments="scg:List(x:String)">[allPeople]</InArgument>
                                                          </InvokeMethod.TargetObject>
                                                          <InArgument x:TypeArguments="x:String">[name]</InArgument>
                                                        </InvokeMethod>
                                                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Admin check: &quot;+name]" />
                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="SamNameExclusionCheck.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_firstName">[fullName(0)]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_lastName">[fullName(fullName.Length -1)]</InArgument>
                                                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_samExclusionResults">[samResults]</InOutArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="in_exclusionApiKey">[exclusionApiKey]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_59">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="s:DateTime">[dateTime]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <If Condition="[samResults(&quot;NoResults&quot;) IS NOTHING]" DisplayName="Find exclusion?" sap2010:WorkflowViewState.IdRef="If_13">
                                                          <If.Then>
                                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                              <ui:WriteTextFile DisplayName="Write exclusion" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_34" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;String.Join(&quot;&quot;, TryCast( samResults(&quot;namesFound&quot;),List (Of String)))]" />
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_143">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[exclusionList]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="scg:List(x:String)">[TryCast( samResults("namesFound"),List (Of String))]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_145">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Object">[io_data("exclusionFound")]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </If.Then>
                                                          <If.Else>
                                                            <ui:WriteTextFile DisplayName="Write no exclusion" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_11" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;samResults(&quot;NoResults&quot;).ToString()]" />
                                                          </If.Else>
                                                        </If>
                                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Trace" Message="SAM admin check written to file" />
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </ui:ForEach.Body>
                                                </ui:ForEach>
                                                <FlowStep.Next>
                                                  <x:Reference>__ReferenceID1</x:Reference>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowDecision.False>
                                          </FlowDecision>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                        <ui:ForEach x:TypeArguments="x:String" DisplayName="Check all negotiators" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[in_negInfo.Distinct()]">
                                          <ui:ForEach.Body>
                                            <ActivityAction x:TypeArguments="x:String">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="x:String" Name="person" />
                                              </ActivityAction.Argument>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="s:String[]" Name="fullName" />
                                                  <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)]" Name="samResults" />
                                                </Sequence.Variables>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[person.Split(","c)(0).ToString()]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:String[]">[fullName]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:String[]">[name.Split(" "c)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <InvokeMethod DisplayName="add to total people list" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Add">
                                                  <InvokeMethod.TargetObject>
                                                    <InArgument x:TypeArguments="scg:List(x:String)">[allPeople]</InArgument>
                                                  </InvokeMethod.TargetObject>
                                                  <InArgument x:TypeArguments="x:String">[name]</InArgument>
                                                </InvokeMethod>
                                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;negotiator check: &quot;+name]" />
                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="SamNameExclusionCheck.xaml">
                                                  <ui:InvokeWorkflowFile.Arguments>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_firstName">[fullName(0)]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_lastName">[fullName(fullName.Length -1)]</InArgument>
                                                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_samExclusionResults">[samResults]</InOutArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="in_exclusionApiKey">[in_config("exclusionApiKey").ToString()]</InArgument>
                                                  </ui:InvokeWorkflowFile.Arguments>
                                                </ui:InvokeWorkflowFile>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="s:DateTime">[dateTime]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <If Condition="[samResults(&quot;NoResults&quot;) IS NOTHING]" DisplayName="Find exclusion?" sap2010:WorkflowViewState.IdRef="If_12">
                                                  <If.Then>
                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                      <ui:WriteTextFile DisplayName="Write exclusion" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_30" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;String.Join(&quot;&quot;, TryCast( samResults(&quot;namesFound&quot;),List (Of String)))]" />
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_139">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="scg:List(x:String)">[exclusionList]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="scg:List(x:String)">[TryCast( samResults("namesFound"),List (Of String))]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_144">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Object">[io_data("exclusionFound")]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Object">["True"]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:WriteTextFile DisplayName="Write no exclusion" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_10" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;samResults(&quot;NoResults&quot;).ToString()]" />
                                                  </If.Else>
                                                </If>
                                                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Trace" Message="[&quot;SAM check written to file&quot;]" />
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEach.Body>
                                        </ui:ForEach>
                                        <FlowStep.Next>
                                          <x:Reference>__ReferenceID2</x:Reference>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <x:Reference>__ReferenceID3</x:Reference>
                    </FlowDecision.False>
                  </FlowDecision>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_41">
      <ui:CommentOut DisplayName="old soap code " sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_71">
            <Assign sap2010:WorkflowViewState.IdRef="Assign_138">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:getEntities&gt;"+System.Environment.NewLine+
"         &lt;authenticationKey&gt;"+System.Environment.NewLine+
"            &lt;userID&gt;"+in_samUser+"&lt;/userID&gt;"+System.Environment.NewLine+
"            &lt;password&gt;"+New System.Net.NetworkCredential(String.Empty, in_samPWord).Password+"&lt;/password&gt;"+System.Environment.NewLine+
"         &lt;/authenticationKey&gt;"+System.Environment.NewLine+
"         &lt;entitySearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;DUNSNumber&gt;"+DUNSNumber+"&lt;/DUNSNumber&gt;"+System.Environment.NewLine+
"         &lt;/entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;requestedData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"           &lt;coreData&gt;Y&lt;/coreData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;assertions&gt;Y&lt;/assertions&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;repsAndCerts&gt;Y&lt;/repsAndCerts&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;pointsOfContact&gt;Y&lt;/pointsOfContact&gt;"+System.Environment.NewLine+
"         &lt;/requestedData&gt;"+System.Environment.NewLine+
"      &lt;/sam:getEntities&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
              </Assign.Value>
            </Assign>
            <DoWhile DisplayName="DUNS check (max 3 tries)" sap2010:WorkflowViewState.IdRef="DoWhile_15" Condition="[tryCount &lt; 3]">
              <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_17">
                <TryCatch.Variables>
                  <Variable x:TypeArguments="x:Object" Name="companyName" />
                </TryCatch.Variables>
                <TryCatch.Try>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_66">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="soapResult" />
                      <Variable x:TypeArguments="sxl:XDocument" Name="xmlResult" />
                      <Variable x:TypeArguments="x:String" Name="temp" />
                      <Variable x:TypeArguments="x:String" Name="tempValue" />
                      <Variable x:TypeArguments="scg:IEnumerable(sxl:XNode)" Name="nodes" />
                    </Sequence.Variables>
                    <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/Entity" sap2010:WorkflowViewState.IdRef="HttpClient_15" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                      <ui:HttpClient.Attachments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Attachments>
                      <ui:HttpClient.Cookies>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Cookies>
                      <ui:HttpClient.Headers>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Headers>
                      <ui:HttpClient.Parameters>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.Parameters>
                      <ui:HttpClient.UrlSegments>
                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                      </ui:HttpClient.UrlSegments>
                    </ui:HttpClient>
                    <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_16" XMLDocument="[xmlResult]" XMLString="[soapResult]" />
                    <ui:GetNodes ExistingXML="{x:Null}" DisplayName="Get XML Nodes" sap2010:WorkflowViewState.IdRef="GetNodes_4" XMLNodes="[nodes]" XMLString="[soapResult]" />
                    <ui:ExecuteXPath ExistingXML="{x:Null}" DisplayName="Execute XPath" sap2010:WorkflowViewState.IdRef="ExecuteXPath_14" Result="[companyName]" XMLString="[soapResult]" XPathExpression="//entityIdentification" />
                    <ui:ForEach x:TypeArguments="sxl:XElement" sap2010:Annotation.AnnotationText="There should only be one, so this should not overwrite any company name" DisplayName="Get Comapny Name" sap2010:WorkflowViewState.IdRef="ForEach`1_31" Values="[Ctype(companyName, IEnumerable(of Object))]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="sxl:XElement">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sxl:XElement" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_65">
                            <Assign DisplayName="Assign Company Name" sap2010:WorkflowViewState.IdRef="Assign_149">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_data("companyName")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[item.Element("legalBusinessName").Value().ToString()]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_150">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Object">[io_data("samExperation")]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[item.Element("expirationDate").Value().ToString()]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_79" Level="Info" Message="[&quot;SAM experation date: &quot;+Date.ParseExact(io_data(&quot;samExperation&quot;).ToString(),&quot;yyyy-MM-dd&quot;,System.Globalization.CultureInfo.CurrentCulture).ToString(&quot;MMMM dd, yyyy&quot;)]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <ui:WriteTextFile DisplayName="Write text file" FileName="[in_location+&quot;/SAM_SearchDUNS_&quot;+DUNSNumber+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_35" Text="[dateTime.ToString+System.Environment.NewLine+&#xA;&quot;SAM Search&quot;+System.Environment.NewLine +&#xA;&quot;     DUNS: &quot;+ DUNSNumber+ System.Environment.NewLine + System.Environment.NewLine+&#xA;xmlResult.ToString]" />
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_80" Level="Trace" Message="[&quot;SAM exclusion for &quot;+tempValue+&quot; complete&quot;]" />
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_151">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">3</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_17">
                    <ActivityAction x:TypeArguments="sn:WebException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                      </ActivityAction.Argument>
                      <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_37">
                        <If.Then>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_152">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_15" />
                        </If.Else>
                      </If>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </DoWhile>
            <ui:ForEach x:TypeArguments="x:String" DisplayName="Check all IFF - SOAP" sap2010:WorkflowViewState.IdRef="ForEach`1_33" Values="[people]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="person" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="SOAP-HTTP Name Exclusion" sap2010:WorkflowViewState.IdRef="Sequence_68">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="person" />
                    </Sequence.Variables>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_81" Level="Info" Message="[&quot;person: &quot;+person]" />
                    <If Condition="[String.IsNullOrEmpty(person)]" sap2010:WorkflowViewState.IdRef="If_38">
                      <If.Then>
                        <ui:Break sap2010:WorkflowViewState.IdRef="Break_3" />
                      </If.Then>
                    </If>
                    <InvokeMethod DisplayName="add to total people list" sap2010:WorkflowViewState.IdRef="InvokeMethod_18" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:String)">[allPeople]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:String">[person]</InArgument>
                    </InvokeMethod>
                    <Assign DisplayName="get name of person" sap2010:WorkflowViewState.IdRef="Assign_153">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[person.Split(","c)(0).ToString()]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_82" Level="Trace" Message="[&quot;check sam for &quot;+name]" />
                    <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="00:00:02" sap2010:WorkflowViewState.IdRef="Delay_8" />
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_154">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[dateTime]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_155">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="create SOAP envelope" sap2010:WorkflowViewState.IdRef="Assign_156">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+name+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_16" Condition="[tryCount &lt; 3]">
                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_18">
                        <TryCatch.Try>
                          <Sequence DisplayName="get exclusion results" sap2010:WorkflowViewState.IdRef="Sequence_67">
                            <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="SOAP CALL - HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_16" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                              <ui:HttpClient.Attachments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Attachments>
                              <ui:HttpClient.Cookies>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Cookies>
                              <ui:HttpClient.Headers>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Headers>
                              <ui:HttpClient.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Parameters>
                              <ui:HttpClient.UrlSegments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.UrlSegments>
                            </ui:HttpClient>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_83" Level="Trace" Message="[&quot;SOAP request sent. Result: &quot;+soapResult.ToString]" />
                            <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_17" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                            <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Check for Errors" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_15" Result="[badNames]" XPathExpression="//errorMessage" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_157">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">[nameList]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">[Ctype(badNames, IEnumerable(of Object))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="x:Object" DisplayName="loop through results and look for exclusions" sap2010:WorkflowViewState.IdRef="ForEach`1_32" Values="[nameList]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:Object">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Object" Name="nameResult" />
                                  </ActivityAction.Argument>
                                  <If Condition="[nameResult.ToString.ToLower.Contains(&quot;no errors found&quot;)]" DisplayName="check for bad name" sap2010:WorkflowViewState.IdRef="If_39">
                                    <If.Else>
                                      <InvokeMethod DisplayName="add to bad name list" sap2010:WorkflowViewState.IdRef="InvokeMethod_19" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:List(x:String)">[exclusionList]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">[name]</InArgument>
                                      </InvokeMethod>
                                    </If.Else>
                                  </If>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_84" Level="Trace" Message="[&quot;SOAP result obtained&quot;]" />
                            <ui:WriteTextFile DisplayName="Write text file" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_36" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_85" Level="Trace" Message="[&quot;SAM check written to file&quot;]" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_158">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">3</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_18">
                            <ActivityAction x:TypeArguments="sn:WebException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                              </ActivityAction.Argument>
                              <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_40">
                                <If.Then>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_159">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_16" />
                                </If.Else>
                              </If>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </DoWhile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:ForEach x:TypeArguments="x:String" DisplayName="Check all Admins - SOAP" sap2010:WorkflowViewState.IdRef="ForEach`1_35" Values="[in_contract]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="person" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="SOAP - HTTTP check" sap2010:WorkflowViewState.IdRef="Sequence_70">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="person" />
                    </Sequence.Variables>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_160">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[name]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[person.Split(","c)(0).ToString()]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <InvokeMethod DisplayName="add to total people list" sap2010:WorkflowViewState.IdRef="InvokeMethod_20" MethodName="Add">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:String)">[allPeople]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:String">[person]</InArgument>
                    </InvokeMethod>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_86" Level="Trace" Message="[&quot;sam search for &quot;+name]" />
                    <Delay DisplayName="Delay to not cause an issue with SAM.gov" Duration="00:00:02" sap2010:WorkflowViewState.IdRef="Delay_9" />
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_161">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:DateTime">[dateTime]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:DateTime">[Now]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_162">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">1</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_163">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.sam.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:doSearch&gt;"+System.Environment.NewLine+
"         &lt;exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"            &lt;name&gt;"+name+"&lt;/name&gt;"+System.Environment.NewLine+
"         &lt;/exclusionSearchCriteria&gt;"+System.Environment.NewLine+
"      &lt;/sam:doSearch&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <DoWhile DisplayName="Do while" sap2010:WorkflowViewState.IdRef="DoWhile_17" Condition="[tryCount &lt; 3]">
                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_19">
                        <TryCatch.Try>
                          <Sequence DisplayName="get SOAP results" sap2010:WorkflowViewState.IdRef="Sequence_69">
                            <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/ExclusionSearch" sap2010:WorkflowViewState.IdRef="HttpClient_17" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                              <ui:HttpClient.Attachments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Attachments>
                              <ui:HttpClient.Cookies>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Cookies>
                              <ui:HttpClient.Headers>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Headers>
                              <ui:HttpClient.Parameters>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.Parameters>
                              <ui:HttpClient.UrlSegments>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                              </ui:HttpClient.UrlSegments>
                            </ui:HttpClient>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_87" Level="Trace" Message="[&quot;SOAP request sent. Result: &quot;+soapResult.ToString]" />
                            <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_18" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                            <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Check for Errors" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_16" Result="[badNames]" XPathExpression="//errorMessage" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_164">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">[nameList]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:IEnumerable(x:Object)">[Ctype(badNames, IEnumerable(of Object))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="x:Object" DisplayName="loop through results and look for exclusions" sap2010:WorkflowViewState.IdRef="ForEach`1_34" Values="[nameList]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:Object">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:Object" Name="nameResult" />
                                  </ActivityAction.Argument>
                                  <If Condition="[nameResult.ToString.ToLower.Contains(&quot;no errors found&quot;)]" DisplayName="check for bad name" sap2010:WorkflowViewState.IdRef="If_41">
                                    <If.Else>
                                      <InvokeMethod DisplayName="add to bad name list" sap2010:WorkflowViewState.IdRef="InvokeMethod_21" MethodName="Add">
                                        <InvokeMethod.TargetObject>
                                          <InArgument x:TypeArguments="scg:List(x:String)">[exclusionList]</InArgument>
                                        </InvokeMethod.TargetObject>
                                        <InArgument x:TypeArguments="x:String">[name]</InArgument>
                                      </InvokeMethod>
                                    </If.Else>
                                  </If>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_88" Level="Trace" Message="[&quot;SOAP result obtained&quot;]" />
                            <ui:WriteTextFile DisplayName="Write text file" FileName="[in_location+&quot;/ExclusionSearchName_&quot;+name+&quot;.txt&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_37" Text="[dateTime.ToString + System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Person: &quot;+name+System.Environment.NewLine+System.Environment.NewLine+&#xA;&quot;Result: &quot;+System.Environment.NewLine+&#xA;xmlResultFromSoap.ToString]" />
                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_89" Level="Trace" Message="[&quot;SAM check written to file&quot;]" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_165">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">3</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="sn:WebException" sap2010:WorkflowViewState.IdRef="Catch`1_19">
                            <ActivityAction x:TypeArguments="sn:WebException">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sn:WebException" Name="exception" />
                              </ActivityAction.Argument>
                              <If Condition="[tryCount &lt; 3]" sap2010:WorkflowViewState.IdRef="If_42">
                                <If.Then>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_166">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[tryCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[tryCount + 1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                                <If.Else>
                                  <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_17" />
                                </If.Else>
                              </If>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                    </DoWhile>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ui:CommentOut.Body>
      </ui:CommentOut>
    </FlowStep>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
    <x:Reference>__ReferenceID17</x:Reference>
    <sads:DebugSymbol.Symbol>d0lKOlxGSUxFU1xTaGFyZXNcVHJ1bWFuUlBBXFRydW1hbi1BUElcRkFTIFBTUyBOZXcgT2ZmZXItVjAuNFxDaGVja1NhbS54YW1spAFTA7cHDwIBAVo+WlUCAQNfPl9VAgECZQlsEgMB+wFvDXYWAwH3AXkRgAEpAwHtAYIBRIIBWgMB6wGPAR2PAdIBAwHoAZIBIZIBtwMDAeABlAFTlAFrAwHeAfgCKcgDNgMBngGZAVuZAXQDAZwBmwIx7AI+AgFbqAFnqAF7AgFZvAE9jQJKAgEYrgFBtQFKAgESqwE9qwG9AQIBEJwBMZwBtAECAQ6fATWmAT4CAQqXASmXAbEBAgEIhQEZjAEiAgEEajRqVgMB/gFnNWdBAwH8AXQ6dD8DAfoBcTtxRQMB+AF+Un5mAwH1AXtXe4ABAwHzAXxMfFgDAfEBfU59WgMB7wF5wQF53QEDAe4BjwGMAY8BzwEDAekBkgHaAZIBtAMDAeQBkgFakgGhAQMB4QH4AqkB+ALCAQMB3QH+Ai/FAzoDAZ8BmwKtAZsCxwEDAZsBoQI36QJCAgFcvAG2AbwBywECAVjCAUOKAk4CARmzAWyzAXcCARawAW2wAYQBAgETqwGsAasBugECARGcAaABnAGxAQIBD6QBaqQBmQECAQ2hAWuhAXMCAQuXAZgBlwGuAQIBCYoBRIoBTAIBB4cBRYcBYAIBBYEDeoEDnwEDAaABgwMxigM6AwHYAYsDMZIDOgMB0wGTAzGYA0ADAc4BmQMxmQPJAQMBywGaAzGhA0kDAcABogMxqQM6AwG8AaoDMcMDNgMBowHEAzHEA8wBAwGhAaQCaKQCkgECAV6lAoIBpQKnAQIBXacCOa4CQgMBlgGvAjm2AkIDAZEBtwI5vAJIAwGMAb0COb0CzAEDAYkBvgI5xQJRAgF+xgI5zQJCAgF6zgI55wI+AgFh6AI56ALMAQIBX8UBdMUBngECARvGAY4BxgGzAQIBGsgBRc8BTgIBU9ABRdcBTgIBTtgBRd0BVAIBSd4BRd4B1gECAUbfAUXmAV0CATvnAUXuAU4CATfvAUWIAkoCAR6JAkWJAtYBAgEciANciAN+AwHbAYUDXYUDYwMB2QGQA16QA3ADAdYBjQNfjQNpAwHUAZUDZpUDcQMB0QGXA1qXA2ADAc8BmQOfAZkDxgEDAcwBngOYAZ4DpAEDAckBnANxnAN+AwHHAZ0DcJ0DjgEDAcQBnwN3nwOgAQMBwgGaA90BmgP5AQMBwQGnA16nA2MDAb8BpANfpANpAwG9AaoDP6oDbwMBpAGsAzW+A0ADAa4BwQM1wQP9AwMBpgHEA6ABxAPJAQMBogGsAmSsAoYBAwGZAakCZakCawMBlwG0Ama0AngDAZQBsQJnsQJxAwGSAbkCbrkCeQMBjwG7AmK7AmgDAY0BvQKnAb0CyQEDAYoBwgKgAcICrAEDAYcBwAJ5wAKGAQMBhQHBAnjBApYBAwGCAcMCf8MCkAEDAYABvgLlAb4CgQICAX/LAmbLAmsCAX3IAmfIAnECAXvOAkfOAncCAWLQAj3iAkgCAWzlAj3lAoUEAgFk6AKoAegCyQECAWDNAXDNAZIBAgFWygFxygF3AgFU1QFy1QGEAQIBUdIBc9IBfQIBT9oBetoBhQECAUzcAW7cAXQCAUreAbMB3gHTAQIBR+MBrAHjAbgBAgFE4QGFAeEBkgECAULiAYQB4gGiAQIBP+QBiwHkAZwBAgE93wHxAd8BjQICATzsAXLsAXcCATrpAXPpAX0CATjvAVPvAYMBAgEf8QFJgwJUAgEphgJJhgKRBAIBIYkCtAGJAtMBAgEdrQM3rQOoBAMBtwGuAze1A0ADAbMBtgM3vQNAAwGvAcED8QHBA/oDAwGqAcEDccEDuAEDAacB0QI/0QKwBAIBddICP9kCSAIBcdoCP+ECSAIBbeUC+QHlAoIEAgFo5QJ55QLAAQIBZfIBS/IBvAQCATLzAUv6AVQCAS77AUuCAlQCASqGAoUChgKOBAIBJYYChQGGAswBAgEirQPwAa0DpQQDAbsBrQNwrQO3AQMBuAGzA2yzA6EBAwG2AbADbbADfAMBtAG7A2K7A2oDAbIBuANjuAN+AwGwAdEC+AHRAq0EAgF50QJ40QK/AQIBdtcCdNcCqQECAXTUAnXUAoQBAgFy3wJq3wJyAgFw3AJr3AKGAQIBbvIBhALyAbkEAgE28gGEAfIBywECATP4AYAB+AG1AQIBMfUBgQH1AZABAgEvgAJ2gAJ+AgEt/QF3/QGSAQIBKw==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_7" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_148" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="LogMessage_78" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="WriteTextFile_31" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_16" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_17" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_18" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_140" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_47">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">548.895,1530</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_17">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">465,1334.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">565,1385.02 565,1415.02 669.895,1415.02 669.895,1530</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_88" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="InvokeMethod_17" sap:VirtualizedContainerService.HintSize="675,132" />
      <sap2010:ViewStateData Id="LogMessage_51" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WriteTextFile_33" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_142" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_146" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_63" sap:VirtualizedContainerService.HintSize="336,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_17" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_24" sap:VirtualizedContainerService.HintSize="675,559" />
      <sap2010:ViewStateData Id="LogMessage_52" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="697,1544">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_20" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">880,1414.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">980,1465.5 980,1495.5 669.895,1495.5 669.895,1530</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_4" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">785,1316.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">855,1360 980,1360 980,1414.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">785,1360 755,1360 755,1359.52 665,1359.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_18">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">348.895,1190</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">469.895,1250 469.895,1280 820,1280 820,1316.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_16">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">550,1074.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">750,1099.52 780,1099.52 780,1220 590.895,1220</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="InvokeMethod_16" sap:VirtualizedContainerService.HintSize="675,132" />
      <sap2010:ViewStateData Id="LogMessage_32" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WriteTextFile_34" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_143" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_145" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_64" sap:VirtualizedContainerService.HintSize="336,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="675,559" />
      <sap2010:ViewStateData Id="LogMessage_33" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="697,1544">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_13" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">849,984.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">949,1035.5 949,1065.5 820,1065.5 820,1316.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">689,966.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">759,1010 849,1010</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">689,1010 650,1010 650,1074.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_15">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">130,887.52</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,913.02 724,913.02 724,966.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="InvokeMethod_15" sap:VirtualizedContainerService.HintSize="675,132" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="675,87" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="675,60" />
      <sap2010:ViewStateData Id="WriteTextFile_30" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Assign_139" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_144" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="336,411">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_10" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="675,559" />
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="697,1544">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">439.79,782.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">539.79,833.5 539.79,863.5 724,863.5 724,966.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,667.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">335,711 365,711 365,808 439.79,808</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">265,711 230,711 230,887.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_46">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">449.79,558.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">549.79,609.5 549.79,639.5 300,639.5 300,667.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_45">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">199.79,558.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">399.79,584 449.79,584</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_50">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,422</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">121,482 121,584 199.79,584</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="95,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">312.395,408.5</av:Point>
            <av:Size x:Key="ShapeSize">95,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">312.395,452 242,452</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">407.395,452 419.79,452 419.79,528.5 299.79,528.5 299.79,558.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_44">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">199.895,307.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">299.895,358.5 299.895,388.5 359.895,388.5 359.895,408.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">178.895,197.5</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">299.895,257.5 299.895,307.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">179,107.5</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,167.5 299.895,167.5 299.895,197.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_138" sap:VirtualizedContainerService.HintSize="502,64" />
      <sap2010:ViewStateData Id="HttpClient_15" sap:VirtualizedContainerService.HintSize="352,22" />
      <sap2010:ViewStateData Id="DeserializeXml_16" sap:VirtualizedContainerService.HintSize="352,59" />
      <sap2010:ViewStateData Id="GetNodes_4" sap:VirtualizedContainerService.HintSize="352,59" />
      <sap2010:ViewStateData Id="ExecuteXPath_14" sap:VirtualizedContainerService.HintSize="352,87" />
      <sap2010:ViewStateData Id="Assign_149" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_150" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_79" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_65" sap:VirtualizedContainerService.HintSize="336,415">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_31" sap:VirtualizedContainerService.HintSize="352,590">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_35" sap:VirtualizedContainerService.HintSize="352,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_80" sap:VirtualizedContainerService.HintSize="352,91" />
      <sap2010:ViewStateData Id="Assign_151" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Sequence_66" sap:VirtualizedContainerService.HintSize="374,1459">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_152" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_15" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_37" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_17" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_17" sap:VirtualizedContainerService.HintSize="418,1686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_15" sap:VirtualizedContainerService.HintSize="502,1847">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_81" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Break_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_38" sap:VirtualizedContainerService.HintSize="464,207" />
      <sap2010:ViewStateData Id="InvokeMethod_18" sap:VirtualizedContainerService.HintSize="464,133" />
      <sap2010:ViewStateData Id="Assign_153" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="LogMessage_82" sap:VirtualizedContainerService.HintSize="464,91" />
      <sap2010:ViewStateData Id="Delay_8" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_154" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_155" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Assign_156" sap:VirtualizedContainerService.HintSize="464,64" />
      <sap2010:ViewStateData Id="HttpClient_16" sap:VirtualizedContainerService.HintSize="480,22" />
      <sap2010:ViewStateData Id="LogMessage_83" sap:VirtualizedContainerService.HintSize="480,91" />
      <sap2010:ViewStateData Id="DeserializeXml_17" sap:VirtualizedContainerService.HintSize="480,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_15" sap:VirtualizedContainerService.HintSize="480,89" />
      <sap2010:ViewStateData Id="Assign_157" sap:VirtualizedContainerService.HintSize="480,60" />
      <sap2010:ViewStateData Id="InvokeMethod_19" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="If_39" sap:VirtualizedContainerService.HintSize="464,280" />
      <sap2010:ViewStateData Id="ForEach`1_32" sap:VirtualizedContainerService.HintSize="480,414" />
      <sap2010:ViewStateData Id="LogMessage_84" sap:VirtualizedContainerService.HintSize="480,91" />
      <sap2010:ViewStateData Id="WriteTextFile_36" sap:VirtualizedContainerService.HintSize="480,87" />
      <sap2010:ViewStateData Id="LogMessage_85" sap:VirtualizedContainerService.HintSize="480,91" />
      <sap2010:ViewStateData Id="Assign_158" sap:VirtualizedContainerService.HintSize="480,60" />
      <sap2010:ViewStateData Id="Sequence_67" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_159" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_16" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_40" sap:VirtualizedContainerService.HintSize="467,207" />
      <sap2010:ViewStateData Id="Catch`1_18" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_18" sap:VirtualizedContainerService.HintSize="418,287">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_16" sap:VirtualizedContainerService.HintSize="464,448">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_68" sap:VirtualizedContainerService.HintSize="486,1720">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_33" sap:VirtualizedContainerService.HintSize="502,1853" />
      <sap2010:ViewStateData Id="Assign_160" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeMethod_20" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="LogMessage_86" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Delay_9" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_161" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_162" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_163" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="HttpClient_17" sap:VirtualizedContainerService.HintSize="480,22" />
      <sap2010:ViewStateData Id="LogMessage_87" sap:VirtualizedContainerService.HintSize="480,91" />
      <sap2010:ViewStateData Id="DeserializeXml_18" sap:VirtualizedContainerService.HintSize="480,60" />
      <sap2010:ViewStateData Id="ExecuteXPath_16" sap:VirtualizedContainerService.HintSize="480,89" />
      <sap2010:ViewStateData Id="Assign_164" sap:VirtualizedContainerService.HintSize="480,60" />
      <sap2010:ViewStateData Id="InvokeMethod_21" sap:VirtualizedContainerService.HintSize="218,132" />
      <sap2010:ViewStateData Id="If_41" sap:VirtualizedContainerService.HintSize="464,280" />
      <sap2010:ViewStateData Id="ForEach`1_34" sap:VirtualizedContainerService.HintSize="480,414" />
      <sap2010:ViewStateData Id="LogMessage_88" sap:VirtualizedContainerService.HintSize="480,91" />
      <sap2010:ViewStateData Id="WriteTextFile_37" sap:VirtualizedContainerService.HintSize="480,87" />
      <sap2010:ViewStateData Id="LogMessage_89" sap:VirtualizedContainerService.HintSize="480,91" />
      <sap2010:ViewStateData Id="Assign_165" sap:VirtualizedContainerService.HintSize="480,60" />
      <sap2010:ViewStateData Id="Sequence_69" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_166" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Rethrow_17" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_42" sap:VirtualizedContainerService.HintSize="467,208" />
      <sap2010:ViewStateData Id="Catch`1_19" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_19" sap:VirtualizedContainerService.HintSize="418,287">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DoWhile_17" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_70" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_35" sap:VirtualizedContainerService.HintSize="502,193" />
      <sap2010:ViewStateData Id="Sequence_71" sap:VirtualizedContainerService.HintSize="524,4201">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_41">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">588.79,317.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1145,1686">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5</av:PointCollection>
            <x:Double x:Key="Height">1650</x:Double>
            <x:Double x:Key="Width">1131</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CheckSam_1" sap:VirtualizedContainerService.HintSize="1185,1766" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>