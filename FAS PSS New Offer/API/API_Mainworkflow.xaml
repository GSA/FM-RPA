<Activity mc:Ignorable="sap sap2010 sads" x:Class="MainFlowchart" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="MainFlowchart_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Web.Mail</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Web</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="MainFlowchart" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="samUserName" />
      <Variable x:TypeArguments="x:String" Name="samPassword" />
      <Variable x:TypeArguments="x:String" Name="buttonChoice" />
      <Variable x:TypeArguments="ss:SecureString" Name="secureWord" />
      <Variable x:TypeArguments="x:String" Default="A Certification Error" Name="CERTERROR" />
      <Variable x:TypeArguments="x:String" Default="Exclusion" Name="EXCLUSIONERROR" />
      <Variable x:TypeArguments="x:String" Default="Error reading/writing file(s)" Name="FILEERROR" />
      <Variable x:TypeArguments="sd:DataTable" Name="errorTable" />
      <Variable x:TypeArguments="x:String" Default="\\E04BMV-CIFS02.ent.ds.gsa.gov\R02_FSS_Shares$\Files\Shares\TrumanRPA\test" Name="baseDirectory" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="totalFilesChecked" />
      <Variable x:TypeArguments="x:Boolean" Name="outputDirExists" />
      <Variable x:TypeArguments="x:Boolean" Name="loginError" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)()]" Name="configDictionary" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:00:02" Name="mediumDelaySpan" />
      <Variable x:TypeArguments="x:String" Name="returnEmail" />
      <Variable x:TypeArguments="x:String" Name="emailName" />
      <Variable x:TypeArguments="sd:DataTable" Name="searchTable" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="contractContacts" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="iffContacts" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="negInfo" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="sinList" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(of String, Object)()]" Name="samDictionary" />
      <Variable x:TypeArguments="x:String" Name="outputFolder" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID35" sap2010:WorkflowViewState.IdRef="FlowStep_2">
        <ui:MessageBox Caption="{x:Null}" Buttons="YesNo" ChosenButton="[buttonChoice]" DisplayName="indication to start the process" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;Begin processing of ORDs?&quot;]" TopMost="True" />
        <FlowStep.Next>
          <FlowDecision x:Name="__ReferenceID36" Condition="[buttonChoice = &quot;Yes&quot;]" DisplayName="Continue?" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
            <FlowDecision.True>
              <FlowStep x:Name="__ReferenceID40" sap2010:WorkflowViewState.IdRef="FlowStep_95">
                <Sequence sap2010:Annotation.AnnotationText="This is a temporary solution until this process is moved fully over to either the Re-Framerk or some variation of the Re-Framework.&#xA;&#xA;This will prepare teh process for use with Orchstrator&#xA;" DisplayName="Set up config data" sap2010:WorkflowViewState.IdRef="Sequence_768">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Default="config.xlsx" Name="configFile" />
                    <Variable x:TypeArguments="s:String[]" Default="[{&quot;Settings&quot;,&quot;Constants&quot;,&quot;Assets&quot;}]" Name="configSheets" />
                  </Sequence.Variables>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="InitAllSettings.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[configFile]</InArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[configSheets]</InArgument>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[configDictionary]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1454">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[baseDirectory]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[configDictionary("shareDrive").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1455">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[CERTERROR]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[configDictionary("certificationError_message").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1456">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[EXCLUSIONERROR]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[configDictionary("exclusionError_message").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1457">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[FILEERROR]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[configDictionary("fileError_message").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1460">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:TimeSpan">[mediumDelaySpan]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.Parse(configDictionary("MediumTimeSpan").ToString)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1461">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[returnEmail]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[configDictionary("fromEmailAddress").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1462">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[emailName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[configDictionary("emailName").ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID38" sap2010:WorkflowViewState.IdRef="FlowStep_36">
                    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Table of anny issues found while reading the files, searching SAM, etc." DataTable="[errorTable]" DisplayName="Build Error Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Company&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;DUNS&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Person&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ErrorType&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName /&gt;&#xA;&lt;/NewDataSet&gt;" />
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID41" sap2010:WorkflowViewState.IdRef="FlowStep_71">
                        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="create the excel sheet and add the heaaders to it.&#xA;&#xA;TODO:&#xA;Dtermine this is being created in the correct loaction and the data is being filled in correctly." DisplayName="create excel headers" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" Visible="False" WorkbookPath="[baseDirectory + &quot;offer-letter-records.xlsx&quot;]">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Store all info in Excel" sap2010:WorkflowViewState.IdRef="Sequence_518">
                                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_190" Text="// This section is a work in progress. It needs to be vetted by the customer for completion." />
                                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_517">
                                  <Sequence DisplayName="write Headers" sap2010:WorkflowViewState.IdRef="Sequence_516">
                                    <ui:ExcelWriteCell Cell="A1" DisplayName="Store Solicitation number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_197" SheetName="Sheet1" Text="Solicitation Number" />
                                    <ui:ExcelWriteCell Cell="B1" DisplayName="Store refrech number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_198" SheetName="Sheet1" Text="Solicitation Refresh" />
                                    <ui:ExcelWriteCell Cell="C1" DisplayName="Store refrech number" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_199" SheetName="Sheet1" Text="Negotiators" />
                                    <ui:ExcelWriteCell Cell="D1" DisplayName="Store DUNS" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_200" SheetName="Sheet1" Text="DUNS" />
                                    <ui:ExcelWriteCell Cell="E1" DisplayName="Store Completion Date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_201" SheetName="Sheet1" Text="Completion Date" />
                                    <ui:ExcelWriteCell Cell="F1" DisplayName="Store Completion Time" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_202" SheetName="Sheet1" Text="Completion Time" />
                                    <ui:ExcelWriteCell Cell="G1" DisplayName="Store Company Name" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_203" SheetName="Sheet1" Text="Company Name" />
                                    <ui:ExcelWriteCell Cell="H1" DisplayName="Store Company Street" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_204" SheetName="Sheet1" Text="Compnay Address" />
                                    <ui:ExcelWriteCell Cell="I1" DisplayName="Store Comapny Suite" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_205" SheetName="Sheet1" Text="Company Suite" />
                                    <ui:ExcelWriteCell Cell="J1" DisplayName="Store Company City" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_206" SheetName="Sheet1" Text="Company City" />
                                    <ui:ExcelWriteCell Cell="K1" DisplayName="Store Company State" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_207" SheetName="Sheet1" Text="Company State" />
                                    <ui:ExcelWriteCell Cell="L1" DisplayName="Store Company zip" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_208" SheetName="Sheet1" Text="Company Zip" />
                                    <ui:ExcelWriteCell Cell="M1" DisplayName="Store Company phone" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_209" SheetName="Sheet1" Text="Company Phone" />
                                    <ui:ExcelWriteCell Cell="N1" DisplayName="Store Company Fax" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_210" SheetName="Sheet1" Text="Compnay Fax" />
                                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_191" Text="// @TODO: This is a dupe, what should be here or just remove it?" />
                                    <ui:ExcelWriteCell Cell="O1" DisplayName="Store DUNS (again?)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_211" SheetName="Sheet1" Text="DUNS" />
                                    <ui:ExcelWriteCell Cell="P1" DisplayName="Store TIN" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_212" SheetName="Sheet1" Text="TIN" />
                                    <ui:ExcelWriteCell Cell="Q1" DisplayName="Store Parent Company" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_213" SheetName="Sheet1" Text="Parent Company" />
                                    <ui:ExcelWriteCell Cell="R1" DisplayName="Store NAISC" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_214" SheetName="Sheet1" Text="NAICS" />
                                    <ui:ExcelWriteCell Cell="S1" DisplayName="Store Business &quot;size&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_215" SheetName="Sheet1" Text="Business Size" />
                                    <ui:ExcelWriteCell Cell="T1" DisplayName="Store business &quot;type&quot;" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_216" SheetName="Sheet1" Text="Business Type" />
                                    <ui:ExcelWriteCell Cell="U1" DisplayName="Store Contract Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_217" SheetName="Sheet1" Text="Estimated Contract Value" />
                                    <ui:ExcelWriteCell Cell="V1" DisplayName="Store Options Value" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_218" SheetName="Sheet1" Text="Options Value" />
                                    <ui:ExcelWriteCell Cell="W1" DisplayName="Store Administrator(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_219" SheetName="Sheet1" Text="Contract Admins" />
                                    <ui:ExcelWriteCell Cell="X1" DisplayName="Store IFF admin" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_220" SheetName="Sheet1" Text="IFF Admins" />
                                    <ui:ExcelWriteCell Cell="Y1" DisplayName="Store SAM exp. date" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_221" SheetName="Sheet1" Text="SAM Expiration Date" />
                                    <ui:ExcelWriteCell Cell="Z1" DisplayName="Store scope" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_222" SheetName="Sheet1" Text="Contract Scope" />
                                    <ui:ExcelWriteCell Cell="AA1" DisplayName="Store SIN(s)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_223" SheetName="Sheet1" Text="SIN" />
                                    <ui:ExcelWriteCell Cell="AB1" DisplayName="Store SIN description" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_224" SheetName="Sheet1" Text="SIN Description" />
                                  </Sequence>
                                </Sequence>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                        </ui:ExcelApplicationScope>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID45" sap2010:WorkflowViewState.IdRef="FlowStep_96">
                            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[searchTable]" DisplayName="Read Search Criteria" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Search" WorkbookPath="[configDictionary(&quot;ProcessList&quot;).ToString()]" />
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID46" sap2010:WorkflowViewState.IdRef="FlowStep_97">
                                <ui:ForEachRow DataTable="[searchTable]" DisplayName="loop through search items" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                  <ui:ForEachRow.Body>
                                    <ActivityAction x:TypeArguments="sd:DataRow">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                      </ActivityAction.Argument>
                                      <Flowchart DisplayName="Get XML" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                                        <Flowchart.Variables>
                                          <Variable x:TypeArguments="x:String" Name="xmlResult" />
                                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Default="[new Dictionary(Of String, Object)]" Name="preNegInfo" />
                                          <Variable x:TypeArguments="x:String" Name="folderDate" />
                                        </Flowchart.Variables>
                                        <Flowchart.StartNode>
                                          <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_107">
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1466">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[folderDate]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[NOW.ToString("ddMMyyyy")]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_110">
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1467">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[outputFolder]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[configDictionary("outputLocation").ToString()+folderDate]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <FlowStep.Next>
                                                  <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_106">
                                                    <ui:PathExists DisplayName="output Path exists" Exists="[outputDirExists]" sap2010:WorkflowViewState.IdRef="PathExists_9" Path="[outputFolder]" PathType="Folder" />
                                                    <FlowStep.Next>
                                                      <FlowDecision x:Name="__ReferenceID7" Condition="[outputDirExists]" DisplayName="output dir there?" sap2010:WorkflowViewState.IdRef="FlowDecision_13">
                                                        <FlowDecision.True>
                                                          <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_108">
                                                            <ui:PathExists DisplayName="output Path exists" Exists="[outputDirExists]" sap2010:WorkflowViewState.IdRef="PathExists_10" Path="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()]" PathType="Folder" />
                                                            <FlowStep.Next>
                                                              <FlowDecision x:Name="__ReferenceID11" Condition="[outputDirExists]" DisplayName="output dir there?" sap2010:WorkflowViewState.IdRef="FlowDecision_14">
                                                                <FlowDecision.True>
                                                                  <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_99">
                                                                    <TryCatch DisplayName="Try API call" sap2010:WorkflowViewState.IdRef="TryCatch_115">
                                                                      <TryCatch.Try>
                                                                        <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" AcceptFormat="XML" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request" EndPoint="[&quot;https://eoffermaster.fas.gsa.gov:27403/offerapi/offerservice/offers/&quot;+row(&quot;DUNS&quot;).ToString()]" sap2010:WorkflowViewState.IdRef="HttpClient_34" Method="GET" Password="Rpa@GsaRegion2!" Result="[xmlResult]" TimeoutMS="6000" Username="rpauser">
                                                                          <ui:HttpClient.Attachments>
                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                          </ui:HttpClient.Attachments>
                                                                          <ui:HttpClient.Cookies>
                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                          </ui:HttpClient.Cookies>
                                                                          <ui:HttpClient.Headers>
                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                          </ui:HttpClient.Headers>
                                                                          <ui:HttpClient.Parameters>
                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                          </ui:HttpClient.Parameters>
                                                                          <ui:HttpClient.UrlSegments>
                                                                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                          </ui:HttpClient.UrlSegments>
                                                                        </ui:HttpClient>
                                                                      </TryCatch.Try>
                                                                      <TryCatch.Catches>
                                                                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_117">
                                                                          <ActivityAction x:TypeArguments="s:Exception">
                                                                            <ActivityAction.Argument>
                                                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                            </ActivityAction.Argument>
                                                                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="BAD NEWS ...  API FAIL" TopMost="True" />
                                                                          </ActivityAction>
                                                                        </Catch>
                                                                      </TryCatch.Catches>
                                                                    </TryCatch>
                                                                    <FlowStep.Next>
                                                                      <FlowDecision x:Name="__ReferenceID2" Condition="[NOT (xmlResult.Equals(&quot;&lt;List/&gt;&quot;))]" DisplayName="data returned?" sap2010:WorkflowViewState.IdRef="FlowDecision_12">
                                                                        <FlowDecision.True>
                                                                          <FlowStep x:Name="__ReferenceID25" sap2010:WorkflowViewState.IdRef="FlowStep_126">
                                                                            <ui:WriteTextFile DisplayName="Save XML result" FileName="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-rawData.xml&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[xmlResult]" />
                                                                            <FlowStep.Next>
                                                                              <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_102">
                                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Parse data" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="readApiXmlFile.xaml">
                                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                                    <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_preNegInfo">[preNegInfo]</InOutArgument>
                                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_xmlOutput">[xmlResult]</InArgument>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_Contract">[contractContacts]</OutArgument>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_IFFcontacts">[iffContacts]</OutArgument>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_Sins">[sinList]</OutArgument>
                                                                                    <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="out_negotiatorInfo">[negInfo]</OutArgument>
                                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                                </ui:InvokeWorkflowFile>
                                                                                <FlowStep.Next>
                                                                                  <FlowStep x:Name="__ReferenceID12" sap2010:WorkflowViewState.IdRef="FlowStep_113">
                                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Check with SAM.gov" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="CheckSam.xaml">
                                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                                        <InArgument x:TypeArguments="x:String" x:Key="in_location">[outputFolder+"\"+row("DUNS").ToString()+"\"]</InArgument>
                                                                                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_iff">[iffContacts]</InArgument>
                                                                                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_contract">[contractContacts]</InArgument>
                                                                                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_negInfo">[negInfo]</InArgument>
                                                                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_data">[preNegInfo]</InOutArgument>
                                                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[configDictionary]</InArgument>
                                                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_pdfSam">[samDictionary]</InArgument>
                                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                                    </ui:InvokeWorkflowFile>
                                                                                    <FlowStep.Next>
                                                                                      <FlowStep x:Name="__ReferenceID26" sap2010:WorkflowViewState.IdRef="FlowStep_130">
                                                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="SAM API call" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="SamApiCall.xaml">
                                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_samApiKey">[configDictionary("samApiKey").ToString()]</InArgument>
                                                                                            <InArgument x:TypeArguments="x:String" x:Key="in_duns">[row("DUNS").ToString()]</InArgument>
                                                                                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="io_data">[preNegInfo]</InOutArgument>
                                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                                        </ui:InvokeWorkflowFile>
                                                                                        <FlowStep.Next>
                                                                                          <FlowStep x:Name="__ReferenceID27" sap2010:WorkflowViewState.IdRef="FlowStep_131">
                                                                                            <Sequence DisplayName="add company name to PDF look up list" sap2010:WorkflowViewState.IdRef="Sequence_789">
                                                                                              <Sequence.Variables>
                                                                                                <Variable x:TypeArguments="scg:List(x:String)" Name="searchItems" />
                                                                                              </Sequence.Variables>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1488">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[searchItems]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="scg:List(x:String)">[tryCast(samDictionary(row("DUNS").ToString()),List(of String))]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                              <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                                                                                                <InvokeMethod.TargetObject>
                                                                                                  <InArgument x:TypeArguments="scg:List(x:String)">[searchItems]</InArgument>
                                                                                                </InvokeMethod.TargetObject>
                                                                                                <InArgument x:TypeArguments="x:String">[preNegInfo("companyName").ToString]</InArgument>
                                                                                              </InvokeMethod>
                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1489">
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Object">[samDictionary(row("DUNS").ToString())]</OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Object">[searchItems]</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </Sequence>
                                                                                            <FlowStep.Next>
                                                                                              <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_115">
                                                                                                <ui:PathExists DisplayName="pre-neg template exists" Exists="[outputDirExists]" sap2010:WorkflowViewState.IdRef="PathExists_11" Path="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Pre-Neg.doc&quot;]" PathType="File" />
                                                                                                <FlowStep.Next>
                                                                                                  <FlowDecision x:Name="__ReferenceID13" Condition="[outputDirExists]" DisplayName="output file there?" sap2010:WorkflowViewState.IdRef="FlowDecision_15">
                                                                                                    <FlowDecision.True>
                                                                                                      <FlowStep x:Name="__ReferenceID18" sap2010:WorkflowViewState.IdRef="FlowStep_120">
                                                                                                        <ui:LogMessage DisplayName="Pre-Neg already exists, skip" sap2010:WorkflowViewState.IdRef="LogMessage_83" Level="Warn" Message="[&quot;Pre-Neg template &quot;+outputFolder+&quot;/&quot;+row(&quot;DUNS&quot;).ToString()+&quot; alrady exists, skipping this documnet and proceeding to the next.&quot;]" />
                                                                                                      </FlowStep>
                                                                                                    </FlowDecision.True>
                                                                                                    <FlowDecision.False>
                                                                                                      <FlowStep x:Name="__ReferenceID15" sap2010:WorkflowViewState.IdRef="FlowStep_116">
                                                                                                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_79" Level="Trace" Message="[&quot;copy Pre-Neg template to &quot;+outputFolder+&quot;/&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Pre-Neg.docx&quot;]" />
                                                                                                        <FlowStep.Next>
                                                                                                          <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_117">
                                                                                                            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Pre-Neg.docx&quot;]" DisplayName="Copy Pre-Neg template file" sap2010:WorkflowViewState.IdRef="CopyFile_8" Overwrite="False" Path="[baseDirectory+&quot;template\Pre-Negotiation-Memorandum.docx&quot;]" />
                                                                                                            <FlowStep.Next>
                                                                                                              <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_118">
                                                                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Write Pre-Neg" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="updatePreNegTemplate.xaml">
                                                                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_data">[preNegInfo]</InArgument>
                                                                                                                    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_config">[configDictionary]</InArgument>
                                                                                                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_errorTable" />
                                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_SAMExpirationDate">UNKNOWN</InArgument>
                                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="in_preNegFile">[outputFolder+"\"+row("DUNS").ToString()+"\"+row("DUNS").ToString()+"-Pre-Neg.docx"]</InArgument>
                                                                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                                                                </ui:InvokeWorkflowFile>
                                                                                                                <FlowStep.Next>
                                                                                                                  <FlowStep x:Name="__ReferenceID22" sap2010:WorkflowViewState.IdRef="FlowStep_124">
                                                                                                                    <ui:PathExists DisplayName="price-neg template exists" Exists="[outputDirExists]" sap2010:WorkflowViewState.IdRef="PathExists_13" Path="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Price-Neg.doc&quot;]" PathType="File" />
                                                                                                                    <FlowStep.Next>
                                                                                                                      <FlowDecision x:Name="__ReferenceID21" Condition="[outputDirExists]" DisplayName="output file there?" sap2010:WorkflowViewState.IdRef="FlowDecision_16">
                                                                                                                        <FlowDecision.True>
                                                                                                                          <FlowStep x:Name="__ReferenceID23" sap2010:WorkflowViewState.IdRef="FlowStep_123">
                                                                                                                            <ui:LogMessage DisplayName="Price-Neg already exists, skip" sap2010:WorkflowViewState.IdRef="LogMessage_85" Level="Warn" Message="[&quot;Pre-Neg template &quot;+outputFolder+&quot;/&quot;+row(&quot;DUNS&quot;).ToString()+&quot; alrady exists, skipping this documnet and proceeding to the next.&quot;]" />
                                                                                                                          </FlowStep>
                                                                                                                        </FlowDecision.True>
                                                                                                                        <FlowDecision.False>
                                                                                                                          <FlowStep x:Name="__ReferenceID20" sap2010:WorkflowViewState.IdRef="FlowStep_122">
                                                                                                                            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_84" Level="Trace" Message="[&quot;copy Price-Neg template to &quot;+outputFolder+&quot;/&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Price-Neg.docx&quot;]" />
                                                                                                                            <FlowStep.Next>
                                                                                                                              <FlowStep x:Name="__ReferenceID19" sap2010:WorkflowViewState.IdRef="FlowStep_121">
                                                                                                                                <ui:CopyFile ContinueOnError="{x:Null}" Destination="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Price-Neg.docx&quot;]" DisplayName="Copy file" sap2010:WorkflowViewState.IdRef="CopyFile_10" Overwrite="False" Path="[baseDirectory+&quot;template\PriceNegTemplate.docx&quot;]" />
                                                                                                                                <FlowStep.Next>
                                                                                                                                  <FlowStep x:Name="__ReferenceID24" sap2010:WorkflowViewState.IdRef="FlowStep_125">
                                                                                                                                    <p:WordApplicationScope DisplayName="Write Price-Neg" FilePath="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()+&quot;-Price-Neg.docx&quot;]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2">
                                                                                                                                      <p:WordApplicationScope.Body>
                                                                                                                                        <ActivityAction x:TypeArguments="ui:WordDocument">
                                                                                                                                          <ActivityAction.Argument>
                                                                                                                                            <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                                                                                                                                          </ActivityAction.Argument>
                                                                                                                                          <Sequence DisplayName="replace text in Price-Neg" sap2010:WorkflowViewState.IdRef="Sequence_785">
                                                                                                                                            <Sequence.Variables>
                                                                                                                                              <Variable x:TypeArguments="x:String" Name="scopeOfContract">
                                                                                                                                                <Variable.Default>
                                                                                                                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                                                                                                                </Variable.Default>
                                                                                                                                              </Variable>
                                                                                                                                              <Variable x:TypeArguments="x:Int32" Name="estCost" />
                                                                                                                                              <Variable x:TypeArguments="x:Int32" Name="decimalLocation" />
                                                                                                                                              <Variable x:TypeArguments="x:String" Name="allCodes" />
                                                                                                                                            </Sequence.Variables>
                                                                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Solicit Num" sap2010:WorkflowViewState.IdRef="WordReplaceText_11" Replace="[preNegInfo(&quot;solicitNumber&quot;).ToString]" Search="%[solicitation_number]" />
                                                                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Refresh Num" sap2010:WorkflowViewState.IdRef="WordReplaceText_12" Replace="[preNegInfo(&quot;refreshNumber&quot;).ToString]" Search="%[refresh_number]" />
                                                                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Offer Date" sap2010:WorkflowViewState.IdRef="WordReplaceText_13" Replace="[preNegInfo(&quot;offerDate&quot;).ToString()]" Search="%[offer_date]" />
                                                                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Company Name" sap2010:WorkflowViewState.IdRef="WordReplaceText_14" Replace="[preNegInfo(&quot;companyName&quot;).ToString()]" Search="%[company_name]" />
                                                                                                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1485">
                                                                                                                                              <Assign.To>
                                                                                                                                                <OutArgument x:TypeArguments="x:String">[allCodes]</OutArgument>
                                                                                                                                              </Assign.To>
                                                                                                                                              <Assign.Value>
                                                                                                                                                <InArgument x:TypeArguments="x:String">[preNegInfo("naicsCodes").ToString()]</InArgument>
                                                                                                                                              </Assign.Value>
                                                                                                                                            </Assign>
                                                                                                                                            <If Condition="[allCodes.Length &gt;= 255]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_339">
                                                                                                                                              <If.Then>
                                                                                                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[naics_code]</InArgument>
                                                                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[allCodes]</InArgument>
                                                                                                                                                    <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[outputFolder+"\"+row("DUNS").ToString()+"\"+row("DUNS").ToString()+"-Price-Neg.docx"]</InArgument>
                                                                                                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                                                                                                </ui:InvokeWorkflowFile>
                                                                                                                                              </If.Then>
                                                                                                                                              <If.Else>
                                                                                                                                                <p:WordReplaceText Found="{x:Null}" DisplayName="Replace NAICS" sap2010:WorkflowViewState.IdRef="WordReplaceText_15" Replace="[allCodes]" Search="%[naics_code]" />
                                                                                                                                              </If.Else>
                                                                                                                                            </If>
                                                                                                                                            <Sequence DisplayName="replace negotiator" sap2010:WorkflowViewState.IdRef="Sequence_781">
                                                                                                                                              <Sequence.Variables>
                                                                                                                                                <Variable x:TypeArguments="x:String" Name="person" />
                                                                                                                                              </Sequence.Variables>
                                                                                                                                              <ui:ForEach x:TypeArguments="x:Object" DisplayName="prep Negotiators for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[negInfo]">
                                                                                                                                                <ui:ForEach.Body>
                                                                                                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                                                                                                    <ActivityAction.Argument>
                                                                                                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                                                                    </ActivityAction.Argument>
                                                                                                                                                    <Sequence DisplayName="negaotiator replace" sap2010:WorkflowViewState.IdRef="Sequence_780">
                                                                                                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1478">
                                                                                                                                                        <Assign.To>
                                                                                                                                                          <OutArgument x:TypeArguments="x:String">[person]</OutArgument>
                                                                                                                                                        </Assign.To>
                                                                                                                                                        <Assign.Value>
                                                                                                                                                          <InArgument x:TypeArguments="x:String">[person + Environment.NewLine + item.ToString+Environment.NewLine]</InArgument>
                                                                                                                                                        </Assign.Value>
                                                                                                                                                      </Assign>
                                                                                                                                                    </Sequence>
                                                                                                                                                  </ActivityAction>
                                                                                                                                                </ui:ForEach.Body>
                                                                                                                                              </ui:ForEach>
                                                                                                                                              <If Condition="[person.ToString.Length &gt;= 255]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_336">
                                                                                                                                                <If.Then>
                                                                                                                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">[negotiator_administrators], [negotiator_title], authorized to Negotiate and Sign on behalf of contractor.</InArgument>
                                                                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[person]</InArgument>
                                                                                                                                                      <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[outputFolder+"\"+row("DUNS").ToString()+"\"+row("DUNS").ToString()+"-Price-Neg.docx"]</InArgument>
                                                                                                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                                                                                                  </ui:InvokeWorkflowFile>
                                                                                                                                                </If.Then>
                                                                                                                                                <If.Else>
                                                                                                                                                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_16" Replace="[person]" Search="[negotiator_administrators], [negotiator_title], authorized to Negotiate and Sign on behalf of contractor." />
                                                                                                                                                </If.Else>
                                                                                                                                              </If>
                                                                                                                                            </Sequence>
                                                                                                                                            <ui:CommentOut sap2010:Annotation.AnnotationText="The original date for completion was sent in a mixed format via the XML file. &#xA;&#xA;For now, replacing with the offer date until verification of the correct date to use." DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                                                                                                              <ui:CommentOut.Body>
                                                                                                                                                <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_786">
                                                                                                                                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_1479">
                                                                                                                                                    <Assign.To>
                                                                                                                                                      <OutArgument x:TypeArguments="x:String">[completionDate]</OutArgument>
                                                                                                                                                    </Assign.To>
                                                                                                                                                    <Assign.Value>
                                                                                                                                                      <InArgument x:TypeArguments="x:String">[completionMonth+"/"+completionDay + "/" + completionYear]</InArgument>
                                                                                                                                                    </Assign.Value>
                                                                                                                                                  </Assign>
                                                                                                                                                  <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_86" Level="Info" Message="[&quot;found date: &quot;+completionDate]" />
                                                                                                                                                  <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_17" Replace="[Date.Parse(completionDate).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[completion_date]" />
                                                                                                                                                </Sequence>
                                                                                                                                              </ui:CommentOut.Body>
                                                                                                                                            </ui:CommentOut>
                                                                                                                                            <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_21" Replace="[Date.Parse(preNegInfo(&quot;offerDate&quot;).ToString()).ToString(&quot;MMMM dd, yyyy&quot;)]" Search="%[completion_date]" />
                                                                                                                                            <Sequence DisplayName="replace SIN info" sap2010:WorkflowViewState.IdRef="Sequence_784">
                                                                                                                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_1483">
                                                                                                                                                <Assign.To>
                                                                                                                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[sinList]</OutArgument>
                                                                                                                                                </Assign.To>
                                                                                                                                                <Assign.Value>
                                                                                                                                                  <InArgument x:TypeArguments="scg:List(x:String)">[tryCast(preNegInfo("sinInfo"),List (of String))]</InArgument>
                                                                                                                                                </Assign.Value>
                                                                                                                                              </Assign>
                                                                                                                                              <ui:ForEach x:TypeArguments="x:Object" DisplayName="prep negostiator for replace" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[sinList]">
                                                                                                                                                <ui:ForEach.Body>
                                                                                                                                                  <ActivityAction x:TypeArguments="x:Object">
                                                                                                                                                    <ActivityAction.Argument>
                                                                                                                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                                                                                                                    </ActivityAction.Argument>
                                                                                                                                                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_783">
                                                                                                                                                      <If Condition="[item.ToString.Length &gt;= 250]" DisplayName="check negotiator string length" sap2010:WorkflowViewState.IdRef="If_337">
                                                                                                                                                        <If.Then>
                                                                                                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="WordReplaceLargeText.xaml">
                                                                                                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                                                                                                              <InArgument x:TypeArguments="x:String" x:Key="PatternToReplace">%[Sin_info]</InArgument>
                                                                                                                                                              <InArgument x:TypeArguments="x:String" x:Key="ReplacementText">[item.ToString+Environment.NewLine +"[SIN_info]"]</InArgument>
                                                                                                                                                              <InArgument x:TypeArguments="x:String" x:Key="WordDocumentPath">[outputFolder+"\"+row("DUNS").ToString()+"\"+row("DUNS").ToString()+"-Price-Neg.docx"]</InArgument>
                                                                                                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                                                                                                          </ui:InvokeWorkflowFile>
                                                                                                                                                        </If.Then>
                                                                                                                                                        <If.Else>
                                                                                                                                                          <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_19" Replace="[item.toString+Environment.NewLine +&quot;[SIN_info]&quot;]" Search="%[Sin_info]" />
                                                                                                                                                        </If.Else>
                                                                                                                                                      </If>
                                                                                                                                                    </Sequence>
                                                                                                                                                  </ActivityAction>
                                                                                                                                                </ui:ForEach.Body>
                                                                                                                                              </ui:ForEach>
                                                                                                                                              <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_225" Text="// remove the last replacement characters" />
                                                                                                                                              <p:WordReplaceText Found="{x:Null}" DisplayName="Replace Text" sap2010:WorkflowViewState.IdRef="WordReplaceText_20" Search="%[Sin_info]">
                                                                                                                                                <p:WordReplaceText.Replace>
                                                                                                                                                  <InArgument x:TypeArguments="x:String">
                                                                                                                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                                                                                                                  </InArgument>
                                                                                                                                                </p:WordReplaceText.Replace>
                                                                                                                                              </p:WordReplaceText>
                                                                                                                                            </Sequence>
                                                                                                                                          </Sequence>
                                                                                                                                        </ActivityAction>
                                                                                                                                      </p:WordApplicationScope.Body>
                                                                                                                                    </p:WordApplicationScope>
                                                                                                                                  </FlowStep>
                                                                                                                                </FlowStep.Next>
                                                                                                                              </FlowStep>
                                                                                                                            </FlowStep.Next>
                                                                                                                          </FlowStep>
                                                                                                                        </FlowDecision.False>
                                                                                                                      </FlowDecision>
                                                                                                                    </FlowStep.Next>
                                                                                                                  </FlowStep>
                                                                                                                </FlowStep.Next>
                                                                                                              </FlowStep>
                                                                                                            </FlowStep.Next>
                                                                                                          </FlowStep>
                                                                                                        </FlowStep.Next>
                                                                                                      </FlowStep>
                                                                                                    </FlowDecision.False>
                                                                                                  </FlowDecision>
                                                                                                </FlowStep.Next>
                                                                                              </FlowStep>
                                                                                            </FlowStep.Next>
                                                                                          </FlowStep>
                                                                                        </FlowStep.Next>
                                                                                      </FlowStep>
                                                                                    </FlowStep.Next>
                                                                                  </FlowStep>
                                                                                </FlowStep.Next>
                                                                              </FlowStep>
                                                                            </FlowStep.Next>
                                                                          </FlowStep>
                                                                        </FlowDecision.True>
                                                                        <FlowDecision.False>
                                                                          <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_103">
                                                                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_78" Level="Error" Message="[&quot;No data returned from API for &quot;+row(&quot;DUNS&quot;).ToString()]" />
                                                                          </FlowStep>
                                                                        </FlowDecision.False>
                                                                      </FlowDecision>
                                                                    </FlowStep.Next>
                                                                  </FlowStep>
                                                                </FlowDecision.True>
                                                                <FlowDecision.False>
                                                                  <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_111">
                                                                    <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[outputFolder+&quot;\&quot;+row(&quot;DUNS&quot;).ToString()]" />
                                                                    <FlowStep.Next>
                                                                      <x:Reference>__ReferenceID0</x:Reference>
                                                                    </FlowStep.Next>
                                                                  </FlowStep>
                                                                </FlowDecision.False>
                                                              </FlowDecision>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowDecision.True>
                                                        <FlowDecision.False>
                                                          <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_109">
                                                            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[outputFolder]" />
                                                            <FlowStep.Next>
                                                              <x:Reference>__ReferenceID1</x:Reference>
                                                            </FlowStep.Next>
                                                          </FlowStep>
                                                        </FlowDecision.False>
                                                      </FlowDecision>
                                                    </FlowStep.Next>
                                                  </FlowStep>
                                                </FlowStep.Next>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </Flowchart.StartNode>
                                        <x:Reference>__ReferenceID0</x:Reference>
                                        <x:Reference>__ReferenceID2</x:Reference>
                                        <x:Reference>__ReferenceID3</x:Reference>
                                        <x:Reference>__ReferenceID4</x:Reference>
                                        <x:Reference>__ReferenceID5</x:Reference>
                                        <x:Reference>__ReferenceID6</x:Reference>
                                        <x:Reference>__ReferenceID7</x:Reference>
                                        <x:Reference>__ReferenceID1</x:Reference>
                                        <x:Reference>__ReferenceID8</x:Reference>
                                        <x:Reference>__ReferenceID9</x:Reference>
                                        <x:Reference>__ReferenceID10</x:Reference>
                                        <x:Reference>__ReferenceID11</x:Reference>
                                        <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_112">
                                          <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_221" Text="Need to determine and add check to see if this has alread" />
                                        </FlowStep>
                                        <x:Reference>__ReferenceID12</x:Reference>
                                        <x:Reference>__ReferenceID13</x:Reference>
                                        <x:Reference>__ReferenceID14</x:Reference>
                                        <x:Reference>__ReferenceID15</x:Reference>
                                        <x:Reference>__ReferenceID16</x:Reference>
                                        <x:Reference>__ReferenceID17</x:Reference>
                                        <x:Reference>__ReferenceID18</x:Reference>
                                        <x:Reference>__ReferenceID19</x:Reference>
                                        <x:Reference>__ReferenceID20</x:Reference>
                                        <x:Reference>__ReferenceID21</x:Reference>
                                        <x:Reference>__ReferenceID22</x:Reference>
                                        <x:Reference>__ReferenceID23</x:Reference>
                                        <x:Reference>__ReferenceID24</x:Reference>
                                        <x:Reference>__ReferenceID25</x:Reference>
                                        <x:Reference>__ReferenceID26</x:Reference>
                                        <x:Reference>__ReferenceID27</x:Reference>
                                      </Flowchart>
                                    </ActivityAction>
                                  </ui:ForEachRow.Body>
                                </ui:ForEachRow>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID47" sap2010:WorkflowViewState.IdRef="FlowStep_128">
                                    <ui:ForEach x:TypeArguments="x:String" DisplayName="loop through and get PDF" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[samDictionary.Keys]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="tempDuns" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Get PDFs from SAM" sap2010:WorkflowViewState.IdRef="Sequence_787">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Default="[new List(of String)()]" Name="searchItems" />
                                            </Sequence.Variables>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1486">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="scg:IEnumerable(x:String)">[searchItems]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="scg:IEnumerable(x:String)">[tryCast(samDictionary(tempDuns),List(of String)).Distinct()]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Download PDF From SAM.Gov.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_searchTerms">[searchItems.ToList()]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_saveFileLocation">[outputFolder+"\"+tempDuns+"\"]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID39" sap2010:WorkflowViewState.IdRef="FlowStep_46">
                                        <Flowchart DisplayName="E-mail" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                                          <Flowchart.Variables>
                                            <Variable x:TypeArguments="x:String" Name="summary">
                                              <Variable.Default>
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </Variable.Default>
                                            </Variable>
                                            <Variable x:TypeArguments="snm:MailMessage" Name="mail" />
                                            <Variable x:TypeArguments="x:String" Name="tempBody">
                                              <Variable.Default>
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </Variable.Default>
                                            </Variable>
                                          </Flowchart.Variables>
                                          <Flowchart.StartNode>
                                            <FlowStep x:Name="__ReferenceID33" sap2010:WorkflowViewState.IdRef="FlowStep_52">
                                              <Assign DisplayName="initialize mail message" sap2010:WorkflowViewState.IdRef="Assign_770">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="snm:MailMessage">[mail]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="snm:MailMessage">[new System.Net.Mail.MailMessage()]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <FlowStep.Next>
                                                <FlowStep x:Name="__ReferenceID32" sap2010:WorkflowViewState.IdRef="FlowStep_51">
                                                  <Assign DisplayName="create email body" sap2010:WorkflowViewState.IdRef="Assign_768">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;p&gt;Hello Supervisor,&lt;br&gt;&lt;br&gt;"+
totalFilesChecked.ToString + " Pre-Negotiation Memoranda were generated.&lt;br&gt;&lt;/p&gt;"]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <FlowStep.Next>
                                                    <FlowDecision x:Name="__ReferenceID29" Condition="[errorTable.Rows.Count &gt; 1]" DisplayName="Any Errors?" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                                                      <FlowDecision.True>
                                                        <FlowStep x:Name="__ReferenceID34" sap2010:WorkflowViewState.IdRef="FlowStep_80">
                                                          <Sequence DisplayName="updating - Send Issues Email" sap2010:WorkflowViewState.IdRef="Sequence_541">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:Int32" Name="count" />
                                                              <Variable x:TypeArguments="sd:DataRow" Name="row" />
                                                              <Variable x:TypeArguments="x:String" Name="tempError" />
                                                              <Variable x:TypeArguments="x:String" Name="tempCompany" />
                                                              <Variable x:TypeArguments="x:String" Name="tempCause" />
                                                              <Variable x:TypeArguments="x:String" Name="tempDUNS" />
                                                              <Variable x:TypeArguments="x:String" Name="newDUNS" />
                                                            </Sequence.Variables>
                                                            <Assign DisplayName="create email body" sap2010:WorkflowViewState.IdRef="Assign_1296">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempBody +
"&lt;p&gt; The following items may need further action.&lt;br&gt;&lt;br&gt;&lt;/p&gt;"]</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_1124">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <While DisplayName="While more errors" sap2010:WorkflowViewState.IdRef="While_5">
                                                              <While.Variables>
                                                                <Variable x:TypeArguments="x:String" Name="finalError" />
                                                              </While.Variables>
                                                              <While.Condition>[count &lt; errorTable.Rows.Count]</While.Condition>
                                                              <Sequence DisplayName="Error Builder" sap2010:WorkflowViewState.IdRef="Sequence_556">
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1310">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="sd:DataRow">[errorTable.Rows(count)]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1190">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[tempError]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[row("ErrorType").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1192">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[tempCompany]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[row("Company").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1193">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[tempDUNS]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[row("DUNS").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1194">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:String">[tempCause]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:String">[row("Person").ToString]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                                <If Condition="[(count + 1) &lt; errorTable.Rows.Count]" DisplayName="Check for a DUNS number in the error" sap2010:WorkflowViewState.IdRef="If_285">
                                                                  <If.Then>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_553">
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1196">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="sd:DataRow">[row]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="sd:DataRow">[errorTable.Rows(count + 1)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1197">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[newDUNS]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[row("DUNS").ToString]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_557">
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1201">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[newDUNS]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">["0"]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                                <If Condition="[String.IsNullOrEmpty(finalError)]" DisplayName="Was there already an errror?" sap2010:WorkflowViewState.IdRef="If_294">
                                                                  <If.Then>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1237">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[finalError]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[tempError]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_1238">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[finalError]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[finalError + "  AND "+tempError]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </If.Else>
                                                                </If>
                                                                <If Condition="[newDUNS.Trim.Equals(tempDUNS.Trim)]" sap2010:WorkflowViewState.IdRef="If_286">
                                                                  <If.Else>
                                                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_559">
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1212">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempBody +
"&lt;p&gt;"+finalError+" found in "+ tempCompany + 
", DUNS: "+tempDUNS+", Cause: "+tempCause+
"&lt;br&gt;&lt;/p&gt;"]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1205">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[finalError]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_1233">
                                                                  <Assign.To>
                                                                    <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                                                                  </Assign.To>
                                                                  <Assign.Value>
                                                                    <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                                                                  </Assign.Value>
                                                                </Assign>
                                                              </Sequence>
                                                            </While>
                                                          </Sequence>
                                                          <FlowStep.Next>
                                                            <FlowStep x:Name="__ReferenceID28" sap2010:WorkflowViewState.IdRef="FlowStep_54">
                                                              <Assign DisplayName="add Privicy &quot;footer&quot;" sap2010:WorkflowViewState.IdRef="Assign_797">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[tempBody]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[tempBody + System.Environment.NewLine +System.Environment.NewLine + System.Environment.NewLine +
"&lt;p style="+Chr(34) +"color:#B2B2B2"+Chr(34) +"&gt;This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to which they are addressed.&lt;br&gt;&lt;br&gt;"+
"If you are not the intended recipient, you are notified that disclosing, copying, forwarding or otherwise distributing or taking any action in reliance on the contents of this information is strictly prohibited.�If you suspect a potential IT security incident or observe inappropriate use of GSA systems, report it immediately to &lt;a href="+Chr(34) +"mailto:ITServiceDesk@gsa.gov?subject=Potential%20IT%20security%20incident"+Chr(34) +"&gt;ITServiceDesk@gsa.gov&lt;/a&gt; or 866-450-5250.&lt;/p&gt;"]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <FlowStep.Next>
                                                                <FlowStep x:Name="__ReferenceID31" sap2010:WorkflowViewState.IdRef="FlowStep_47">
                                                                  <Sequence DisplayName="Send E-Mail" sap2010:WorkflowViewState.IdRef="Sequence_461">
                                                                    <Assign DisplayName="assign email body to mail" sap2010:WorkflowViewState.IdRef="Assign_765">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[mail.Body]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[tempBody]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Assign DisplayName="set email subject" sap2010:WorkflowViewState.IdRef="Assign_766">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[mail.Subject]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">Process New Offers</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" Email="{x:Null}" Password="{x:Null}" sap2010:Annotation.AnnotationText="Since GSA uses gmail, the gmail account being used will need to be set up to allow for the bot to send an email message via this activity.&#xA;&#xA;If this is not done, then an error will be thrown.&#xA;&#xA;If this can not be done, then this will need to be changed to send the email via mail.google.com  This will require either the bot to log into the account, or that the gmail account to be used be logged into the web browser already." Body="[summary]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="[returnEmail]" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" MailMessage="[mail]" Name="[emailName]" Port="25" SecureConnection="None" Server="smtp.gsa.gov" Subject="Process New Offers" TimeoutMS="90000" To="[configDictionary(&quot;successEmailAddress&quot;).ToString]">
                                                                      <ui:SendMail.Files>
                                                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                                                      </ui:SendMail.Files>
                                                                    </ui:SendMail>
                                                                    <InvokeMethod DisplayName="actually send the email" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Dispose">
                                                                      <InvokeMethod.TargetObject>
                                                                        <InArgument x:TypeArguments="snm:MailMessage">[mail]</InArgument>
                                                                      </InvokeMethod.TargetObject>
                                                                    </InvokeMethod>
                                                                  </Sequence>
                                                                </FlowStep>
                                                              </FlowStep.Next>
                                                            </FlowStep>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowDecision.True>
                                                      <FlowDecision.False>
                                                        <FlowStep x:Name="__ReferenceID30" sap2010:WorkflowViewState.IdRef="FlowStep_48">
                                                          <Sequence DisplayName="Build All Good Email" sap2010:WorkflowViewState.IdRef="Sequence_460">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:Int32" Name="count" />
                                                            </Sequence.Variables>
                                                            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_195" Text="TBD if there is anything more needed in the email no errors were detected" />
                                                          </Sequence>
                                                          <FlowStep.Next>
                                                            <x:Reference>__ReferenceID28</x:Reference>
                                                          </FlowStep.Next>
                                                        </FlowStep>
                                                      </FlowDecision.False>
                                                    </FlowDecision>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </Flowchart.StartNode>
                                          <x:Reference>__ReferenceID29</x:Reference>
                                          <x:Reference>__ReferenceID30</x:Reference>
                                          <x:Reference>__ReferenceID31</x:Reference>
                                          <x:Reference>__ReferenceID32</x:Reference>
                                          <x:Reference>__ReferenceID33</x:Reference>
                                          <x:Reference>__ReferenceID28</x:Reference>
                                          <x:Reference>__ReferenceID34</x:Reference>
                                        </Flowchart>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowDecision.True>
            <FlowDecision.False>
              <FlowStep x:Name="__ReferenceID37" sap2010:WorkflowViewState.IdRef="FlowStep_20">
                <ui:Comment DisplayName="Stop" sap2010:WorkflowViewState.IdRef="Comment_79" Text="// User declined to start the process" />
              </FlowStep>
            </FlowDecision.False>
          </FlowDecision>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID35</x:Reference>
    <x:Reference>__ReferenceID36</x:Reference>
    <x:Reference>__ReferenceID37</x:Reference>
    <x:Reference>__ReferenceID38</x:Reference>
    <x:Reference>__ReferenceID39</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_53">
      <Sequence DisplayName="SAM login - password" sap2010:WorkflowViewState.IdRef="Sequence_465">
        <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_181" Text="The login and password are beingobtained from the user at this time. Until we can store this information in a secure location (i.e. Orchestrator) while running in a VDI environment, this is the only way to make sure the password is encrypted." />
        <ui:InputDialog Options="{x:Null}" DisplayName="User Name Input dialog" sap2010:WorkflowViewState.IdRef="InputDialog_10" IsPassword="False" Label="User Name" Title="User Name">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[samUserName]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <ui:InputDialog Options="{x:Null}" DisplayName=" Password Input dialog" sap2010:WorkflowViewState.IdRef="InputDialog_9" IsPassword="True" Label="Password" Title="Password">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:String">[samPassword]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <Sequence DisplayName="encrypt Password" sap2010:WorkflowViewState.IdRef="Sequence_466">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1464">
            <Assign.To>
              <OutArgument x:TypeArguments="ss:SecureString">[secureWord]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="ss:SecureString">[New Net.NetworkCredential(String.Empty, samPassword).SecurePassword]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="clear variable" sap2010:WorkflowViewState.IdRef="Assign_772">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[samPassword]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[NOTHING]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID42" sap2010:WorkflowViewState.IdRef="FlowStep_89">
          <Sequence DisplayName="SOAP-HTTP Login check" sap2010:WorkflowViewState.IdRef="Sequence_723">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="soapEnvelope" />
              <Variable x:TypeArguments="x:String" Name="soapResult" />
              <Variable x:TypeArguments="sxl:XDocument" Name="xmlResultFromSoap" />
              <Variable x:TypeArguments="x:Object" Name="pathResult" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1418">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_1399">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[soapEnvelope]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">["&lt;soapenv:Envelope xmlns:soapenv="+chr(34)+"http://schemas.xmlsoap.org/soap/envelope/"+chr(34)+" xmlns:sam="+chr(34)+"http://www.samDictionary.gov"+chr(34)+"&gt;"+ System.Environment.NewLine +
"   &lt;soapenv:Header/&gt;"+System.Environment.NewLine +
"   &lt;soapenv:Body&gt;"+System.Environment.NewLine +
"      &lt;sam:getEntities&gt;"+System.Environment.NewLine+
"         &lt;authenticationKey&gt;"+System.Environment.NewLine+
"            &lt;userID&gt;"+samUserName+"&lt;/userID&gt;"+System.Environment.NewLine+
"            &lt;password&gt;"+New NetworkCredential(String.Empty, secureWord).Password+"&lt;/password&gt;"+System.Environment.NewLine+
"         &lt;/authenticationKey&gt;"+System.Environment.NewLine+
"         &lt;entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;/entitySearchCriteria&gt;"+System.Environment.NewLine+
"         &lt;requestedData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"           &lt;coreData&gt;Y&lt;/coreData&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;assertions&gt;Y&lt;/assertions&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;repsAndCerts&gt;Y&lt;/repsAndCerts&gt;"+System.Environment.NewLine+
"            &lt;!--Optional:--&gt;"+System.Environment.NewLine+
"            &lt;pointsOfContact&gt;Y&lt;/pointsOfContact&gt;"+System.Environment.NewLine+
"         &lt;/requestedData&gt;"+System.Environment.NewLine+
"      &lt;/sam:getEntities&gt;"+System.Environment.NewLine+
"   &lt;/soapenv:Body&gt;"+System.Environment.NewLine +
"&lt;/soapenv:Envelope&gt;"+System.Environment.NewLine]</InArgument>
              </Assign.Value>
            </Assign>
            <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_111">
              <TryCatch.Try>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_725">
                  <ui:CommentOut DisplayName="Comment out" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_788">
                        <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" DisplayName="HTTP Request" EndPoint="https://gw.sam.gov/SAMWS/1.0/Entity" sap2010:WorkflowViewState.IdRef="HttpClient_31" Method="POST" Result="[soapResult]" TimeoutMS="6000">
                          <ui:HttpClient.Attachments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Attachments>
                          <ui:HttpClient.Cookies>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Cookies>
                          <ui:HttpClient.Headers>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Headers>
                          <ui:HttpClient.Parameters>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.Parameters>
                          <ui:HttpClient.UrlSegments>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                          </ui:HttpClient.UrlSegments>
                        </ui:HttpClient>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <ui:HttpClient ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" Body="[soapEnvelope]" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request" EndPoint="https://api.sam.gov/prod/ws/fboendpoint/" sap2010:WorkflowViewState.IdRef="HttpClient_35" Method="GET" Result="[soapResult]" TimeoutMS="6000">
                    <ui:HttpClient.Attachments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Attachments>
                    <ui:HttpClient.Cookies>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Cookies>
                    <ui:HttpClient.Headers>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Headers>
                    <ui:HttpClient.Parameters>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.Parameters>
                    <ui:HttpClient.UrlSegments>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </ui:HttpClient.UrlSegments>
                  </ui:HttpClient>
                  <ui:DeserializeXml DisplayName="Deserialize xml" sap2010:WorkflowViewState.IdRef="DeserializeXml_37" XMLDocument="[xmlResultFromSoap]" XMLString="[soapResult]" />
                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[xmlResultFromSoap.ToString()]" />
                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Check for Errors" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_31" Result="[pathResult]" XPathExpression="//Error" />
                  <If Condition="[Ctype(pathResult, IEnumerable(of Object)).Count &gt; 0]" sap2010:WorkflowViewState.IdRef="If_330">
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1419">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                  <ui:ExecuteXPath XMLString="{x:Null}" DisplayName="Check transaction Message" ExistingXML="[xmlResultFromSoap]" sap2010:WorkflowViewState.IdRef="ExecuteXPath_32" Result="[pathResult]" XPathExpression="//transactionMessage" />
                  <If Condition="[Ctype(pathResult, IEnumerable(of Object)).First.ToString.Contains(&quot;Error&quot;)]" sap2010:WorkflowViewState.IdRef="If_331">
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1421">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_113">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_726">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1420">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[loginError]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_37" Level="Fatal" Message="[&quot;Execution stopping due to SAM login issue. : &quot;+exception.Message]" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
          <FlowStep.Next>
            <FlowDecision x:Name="__ReferenceID43" Condition="[loginError]" DisplayName="login error?" sap2010:WorkflowViewState.IdRef="FlowDecision_9">
              <FlowDecision.True>
                <FlowStep x:Name="__ReferenceID44" sap2010:WorkflowViewState.IdRef="FlowStep_91">
                  <Sequence DisplayName="SAM error, stop" sap2010:WorkflowViewState.IdRef="Sequence_727">
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message box" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[&quot;Authentication Error when trying to login to SAM.gov&quot;]" TopMost="True" />
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_38" Level="Fatal" Message="[&quot;Execution stopping due to SAM login issue.&quot;]" />
                  </Sequence>
                </FlowStep>
              </FlowDecision.True>
              <FlowDecision.False>
                <x:Reference>__ReferenceID40</x:Reference>
              </FlowDecision.False>
            </FlowDecision>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID41</x:Reference>
    <x:Reference>__ReferenceID42</x:Reference>
    <x:Reference>__ReferenceID43</x:Reference>
    <x:Reference>__ReferenceID44</x:Reference>
    <x:Reference>__ReferenceID40</x:Reference>
    <x:Reference>__ReferenceID45</x:Reference>
    <x:Reference>__ReferenceID46</x:Reference>
    <x:Reference>__ReferenceID47</x:Reference>
    <FlowStep sap2010:WorkflowViewState.IdRef="FlowStep_129">
      <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_226" Text="SAM moved to API instaad of SOAP.&#xA;&#xA;No login and name needed." />
    </FlowStep>
    <sads:DebugSymbol.Symbol>d1FKOlxGSUxFU1xTaGFyZXNcVHJ1bWFuUlBBXFRydW1hbi1BUElcRkFTIFBTUyBOZXcgT2ZmZXItVjAuNFxBUElfTWFpbndvcmtmbG93LnhhbWy0A1UDxAkPAgEBWzRbSwIBCVw0XD8CAQhdNF1TAgEHXzRfgAECAQZgM2A2AgEFY05jdQIBBGQ2ZEACAQNsTmx1AgECcQlx9gEDAbMEczxzXgMBsQTsBxHsB4wBAwGwBHYRugEcAwGDBL0BFb0B9wwDAYAEwAEZ7AE0AwGIA+8BHe8BlAIDAYID8gEhpAUxAwGeAacFJcIFMgMBjwHFBSnbBzUCAQpxuwFx5AEDAbYEcUhxWAMBtAR4QnhPAwGFBHlEeYcBAwGEBHsTgQErAwGoBIIBE4kBHAMBowSKARORARwDAZ4EkgETmQEcAwGZBJoBE6EBHAMBlASiAROpARwDAZAEqgETsQEcAwGLBLIBE7kBHAMBhgS9AZ4BvQGsAQMBgQTAAY0DwAHGAwMB/gPGAR/pASoDAYkD7wFY7wFnAwGGA+8BwwHvAcsBAwGFA+8B2QHvAZECAwGDA/IBOvIBSQMBgAP4ASehBTMDAZ8BpwWoAacFvgEDAZwBrQUrvwU2AwGQAckFMckFYAIBDM8FMc8FYAIBC9UFL9wFOAMBiwHfBTPnBTwDAYYB6QVm6QWGAQMBhQHDBzvIB0YDAYMBkwc/nAdIAgF/nwdDugdOAgFj7AU7kAdGAgENf2x/fgMBrgR7wAF71gEDAa0Eflh+ZgMBqwR9VH1gAwGpBIcBPocBZwMBpgSEAT+EAU4DAaQEjwE+jwF3AwGhBIwBP4wBSgMBnwSXAT6XAXMDAZwElAE/lAFPAwGaBJ8BPp8BbgMBlwScAT+cAUoDAZUEpwFApwF9AwGTBKQBQaQBUgMBkQSvAT6vAW0DAY4ErAE/rAFMAwGMBLcBPrcBZgMBiQS0AT+0AUoDAYcExwEhxwHBAQMB/QPIASHoASwDAYoD+wFy+wGXAQMBoAGAAi2HAjYDAfwCigIxkQI6AwH2ApQCNZQC2QEDAfEClgJnlgJ6AwHvAvQEPfQE1wEDAewCmQI9mQKRAgMB6AKbAnCbAoMBAwHmAugERegEjgIDAeQCngJFvAJQAwHYAr4Cd74CrAEDAdYC3wRN3wSOAgMB1ALBAk3BAtUCAwHQAsQCUc0CaQMBwgLQAlXaAm0DAbMC3QJZ4wJxAwGsAuYCXYADaAMBngKDA2GDA9ECAwGaAoUDlAGFA6cBAwGYAo0DaY0D2gIDAZYCkANtkAPgAwMBkgKTA3GbA4kBAwGKAp4DdZ4D6QIDAYYCoAOoAaADuwEDAYQCqAN9qAPyAgMBggKrA4EBqwPcAwMB/gGuA4UBvgSeAQMBpQGjA32jA60DAwGjAYgDaYgDlwMDAaEBrwVtrwWGAQMBkQGxBS24BTYDAZgBuQUtvgVFAwGSAdoFYdoFhAEDAY4B1wVi1wVoAwGMAeEFX+EFaQMBhwHHBz3HB8oBAwGEAZUHa5UHdQMBgAGgB0WnB04CAXqoB0WvB04CAXawB0W0B1MCAWe1B0W5B1QCAWT2BT3+BUYCAV7/BT2GBkYCAVqHBj2PB0UCAQ7JASPnAS4DAYsDhQJYhQJyAwH/AoICWYICZQMB/QKPAlyPApYBAwH5AowCXYwCawMB9wKUAmyUAn8DAfQClAK0AZQCxAEDAfIC9ATEAfQE1AEDAe0CmQJ0mQKHAQMB6gKZAr0BmQL8AQMB6QLoBMwB6ASLAgMB5QKgAkmwAlkDAdsCuAJNuAKMAgMB2QLfBLwB3wSLAgMB1QLBAsUCwQLSAgMB0gLBAoYBwQKNAgMB0QLKApgBygKhAQMBzgLIApwByAKuAQMBzALLAqIBywKrAQMBygLJAp8ByQKsAQMByALEAvQBxAKJAgMBxwLHApEBxwKcAQMBxQLGArABxgK8AQMBwwLVAp0B1QKmAQMBwALTApkB0wKmAQMBvgLSApQB0gLBAQMBvQLWAq0B1gK5AQMBuwLYAqwB2AK7AQMBuQLQAoAC0AKPAgMBuALUAp4B1AKwAQMBtgLXAqwB1wK+AQMBtALgApQB4AKsAQMBsgLhArEB4QK9AQMBsALfApkB3wLDAQMBrgLdAv4B3QKPAgMBrQLqAl/xAmgDAagC8gJf9wJuAwGjAvgCX/8CaAMBnwKDA50BgwOwAQMBnAKDA+YBgwO+AgMBmwKNA9gBjQPXAgMBlwKQA6EBkAOpAgMBlQKQA5cDkAPdAwMBkwKYA7kBmAPAAQMBkQKZA7IBmQOGAgMBkAKVA8YBlQPSAQMBjgKTA5cCkwOyAgMBjQKWA8gBlgPaAQMBiwKeA7MBngPGAQMBiAKeA/wBngPWAgMBhwKoA+wBqAPvAgMBgwKrA7UBqwO/AgMBgQKrA50DqwPZAwMB/wGuA8QBrgPOAgMB/QG0A4sBuwSWAQMBpgGjA/4BowOqAwMBpAGIA+gBiAOUAwMBogG2BWm2BaYBAwGbAbMFarMFdwMBmQG8BXS8BZMBAwGVAbsFebsFjwEDAZQBuQXaAbkF+gEDAZMBpQdwpQd6AgF9ogdxogd8AgF7rQdwrQeCAQIBeaoHcaoHfwIBd7AHngewB9wHAgF0sAeTB7AHmgcCAXOwB/YEsAeBBQIBcbAH9AawB4gHAgFwsAe9BbAHzAUCAW6wB7kGsAe9BgIBbbAH3QawB+sGAgFssAeYBrAHoAYCAWqwB6YGsAezBgIBaLcHd7cHfQIBZfgFafgFcwIBX4QGZ4QGaAIBXYEGaIEGbwIBW4wGP44HSgIBEIsGUIsGcgIBD8oBJcoBzwEDAfkDywElywHLAQMB9QPMASXMAcIBAwHxA80BJc0BsQEDAe0DzgElzgHHAQMB6QPPASXPAccBAwHlA9ABJdABwQEDAeED0QEl0QHGAQMB3QPSASXSAcMBAwHZA9MBJdMBwQEDAdUD1AEl1AHDAQMB0QPVASXVAb8BAwHNA9YBJdYBwwEDAckD1wEl1wG/AQMBxQPYASXYAakBAwHEA9kBJdkBugEDAcAD2gEl2gGvAQMBvAPbASXbAcUBAwG4A9wBJdwBswEDAbQD3QEl3QHPAQMBsAPeASXeAc8BAwGsA98BJd8BzwEDAagD4AEl4AHDAQMBpAPhASXhAcgBAwGgA+IBJeIBvAEDAZwD4wEl4wHJAQMBmAPkASXkAbwBAwGUA+UBJeUBswEDAZAD5gEl5gHIAQMBjAOgArADoAK7AwMB4wKgAs0FoALTBQMB4gKgAt0FoALmBQMB4QKgArUFoALCBQMB3wKgAuADoALVBAMB3gKgApwFoAKtBQMB3QKgAooDoAKVAwMB3AK4AuIBuAL6AQMB2gLvApQB7wLUAQMBqwLsApUB7AKiAQMBqQL0ApQB9AKhAQMBpgL2AogB9gKsAQMBpAL9AooB/QKXAQMBoQL6AosB+gKyAQMBoAK4A5MBuAPCAQMBpwG/A40BvwPlAgMB+QHAA40BwAPgAgMB9QHBA40BwQPZAgMB8QHCA40BwgPfAgMB7QHDA40BygOWAQMB6AHLA40B2AOSAQMB2wHZA40B/gOYAQMBxQH/A40BjgSdAQMBxAGPBI0BjwSIAwMBwAGQBI0BugSYAQMBqAGNBkGUBkoCAVaVBkGcBkoCAVKdBkGkBkoCAU6lBkGsBkoCAUqtBkG0BkoCAUa1BkHWBkYCATbXBkHsBkYCASjtBkGFB0YCARaGB0GNB0oCARHKAT3KAUEDAfwDygG3AcoBzAEDAfsDygGpAcoBsQEDAfoDywE9ywFBAwH4A8sBsgHLAcgBAwH3A8sBpAHLAawBAwH2A8wBPcwBQQMB9APMAbIBzAG/AQMB8wPMAaQBzAGsAQMB8gPNAT3NAUEDAfADzQGoAc0BrgEDAe8DzQGaAc0BogEDAe4DzgE9zgFBAwHsA84BswHOAcQBAwHrA84BpQHOAa0BAwHqA88BPc8BQQMB6APPAbMBzwHEAQMB5wPPAaUBzwGtAQMB5gPQAT3QAUEDAeQD0AGwAdABvgEDAeMD0AGiAdABqgEDAeID0QE90QFBAwHgA9EBsgHRAcMBAwHfA9EBpAHRAawBAwHeA9IBPdIBQQMB3APSAbEB0gHAAQMB2wPSAaMB0gGrAQMB2gPTAT3TAUEDAdgD0wGwAdMBvgEDAdcD0wGiAdMBqgEDAdYD1AE91AFBAwHUA9QBsQHUAcABAwHTA9QBowHUAasBAwHSA9UBPdUBQQMB0APVAa8B1QG8AQMBzwPVAaEB1QGpAQMBzgPWAT3WAUEDAcwD1gGxAdYBwAEDAcsD1gGjAdYBqwEDAcoD1wE91wFBAwHIA9cBrwHXAbwBAwHHA9cBoQHXAakBAwHGA9kBPdkBQQMBwwPZAbEB2QG3AQMBwgPZAaMB2QGrAQMBwQPaAT3aAUEDAb8D2gGnAdoBrAEDAb4D2gGZAdoBoQEDAb0D2wE92wFBAwG7A9sBsgHbAcIBAwG6A9sBpAHbAawBAwG5A9wBPdwBQQMBtwPcAakB3AGwAQMBtgPcAZsB3AGjAQMBtQPdAT3dAUEDAbMD3QG9Ad0BzAEDAbID3QGvAd0BtwEDAbED3gE93gFBAwGvA94BvQHeAcwBAwGuA94BrwHeAbcBAwGtA98BPd8BQQMBqwPfAbIB3wHMAQMBqgPfAaQB3wGsAQMBqQPgAT3gAUEDAacD4AGxAeABwAEDAaYD4AGjAeABqwEDAaUD4QE94QFBAwGjA+EBtAHhAcUBAwGiA+EBpgHhAa4BAwGhA+IBPeIBQQMBnwPiAa0B4gG5AQMBngPiAZ8B4gGnAQMBnQPjAT3jAUEDAZsD4wGxAeMBxgEDAZoD4wGjAeMBqwEDAZkD5AE95AFBAwGXA+QBqQHkAbkBAwGWA+QBmwHkAaMBAwGVA+UBPeUBQgMBkwPlAasB5QGwAQMBkgPlAZ0B5QGlAQMBkQPmAT3mAUIDAY8D5gG0AeYBxQEDAY4D5gGmAeYBrgEDAY0DvwPKAr8D4gIDAfwBvwOQAr8DwgIDAfoBwAPKAsAD3QIDAfgBwAOQAsADwgIDAfYBwQPHAsED1gIDAfQBwQOPAsEDvwIDAfIBwgPLAsID3AIDAfABwgORAsIDwwIDAe4ByAO4AcgD3QEDAesBxQO5AcUDwwEDAekBywObAcsDuAEDAdwBzQORAdMDqQEDAeIB1gORAdYDtAIDAd4B3QOPAe8DnAEDAdMB8AOPAf0DlAEDAcYBjwTxAo8EhQMDAcMBjwSJAo8E6QIDAcEBkQSPAZgEmAEDAbwBmQSPAbEEnAEDAa0BsgSPAbIE/AEDAawBswSPAbkEowEDAakBkgZukgaGAQIBWY8Gb48GdAIBV5oGbJoGhwECAVWXBm2XBngCAVOiBmyiBoUBAgFRnwZtnwZ6AgFPqgZsqgaCAQIBTacGbacGdwIBS7IGbLIGhAECAUmvBm2vBngCAUe1Bk+1BnkCATe3BkXIBlACAT3LBkXUBlACATjXBk/XBnMCASnZBkXgBk4CATHjBkXqBk4CASvtBk/tBnUCARfvBkWDB1ACARqLB2uLB3YCARSIB2yIB3MCARLQA9QB0APeAQMB5gHPA9UBzwPiAQMB5QHRA9UB0QOrAgMB5AHNA74CzQPZAgMB4wHWA6IC1gOxAgMB4QHWA44C1gOaAgMB3wHdA5YC3QOhAgMB2QHjA5UB7AOgAQMB1AHwA50B8APBAQMBxwHyA5MB+AOrAQMBzQH7A5MB+wOQAwMByQGWBMQBlgT1AQMBvwGTBMUBkwTOAQMBvQGZBJYCmQShAgMBugGfBJUBrgSgAQMBrgGzBIoCswSXAgMBqwG2BJUBtgTEAQMBqgG4Bke/BlACAULABkfHBlACAT7MBkfTBlACATneBnDeBnsCATTbBnHbBn0CATLlBnHlBn0CASzwBkf6BlACAR/7BkeCB1ACARvkA5cB6wOgAQMB1QH1A9YB9QPeAQMB0QH0A9cB9APBAgMB0AH2A9cB9gOtAgMBzwHyA8AC8gPbAgMBzgH7A6EC+wONAwMBzAH7A48C+wOZAgMBygGgBJcBrQScAQMBrwG9BnS9BpABAgFFugZ1ugZ6AgFDxQZyxQaIAQIBQcIGc8IGfAIBP9EGctEGdwIBPM4Gc84GfAIBOvIGc/IGfQIBIIAHcoAHgAECAR79BnP9Bn8CARzpA8IB6QOEAgMB2AHmA8MB5gPLAQMB1gGgBKUBoATHAQMBsAGiBJsBqASzAQMBtQGrBJsBqwTsAgMBsgGlBN4BpQSPAgMBuQGkBN8BpATqAQMBuAGmBN8BpgS1AgMBtwGiBMgCogTjAgMBtgGrBNwCqwTpAgMBtAGrBJcCqwTUAgMBswE=</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="MessageBox_2" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_15" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1454" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1455" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1456" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1457" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1460" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1461" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1462" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_768" sap:VirtualizedContainerService.HintSize="200,198">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_2" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_190" sap:VirtualizedContainerService.HintSize="358,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_197" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_198" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_199" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_200" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_201" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_202" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_203" sap:VirtualizedContainerService.HintSize="314,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_204" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_205" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_206" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_207" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_208" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_209" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_210" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Comment_191" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="ExcelWriteCell_211" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_212" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_213" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_214" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_215" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_216" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_217" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_218" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_219" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_220" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_221" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_222" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_223" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelWriteCell_224" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_516" sap:VirtualizedContainerService.HintSize="336,3754">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_517" sap:VirtualizedContainerService.HintSize="358,3878">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_518" sap:VirtualizedContainerService.HintSize="380,4116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_8" sap:VirtualizedContainerService.HintSize="200,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadRange_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1466" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1467" sap:VirtualizedContainerService.HintSize="242,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_9" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_10" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_34" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="MessageBox_7" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Catch`1_117" sap:VirtualizedContainerService.HintSize="404,128">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_115" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_17" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_18" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_26" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1488" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="InvokeMethod_7" sap:VirtualizedContainerService.HintSize="242,132" />
      <sap2010:ViewStateData Id="Assign_1489" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_789" sap:VirtualizedContainerService.HintSize="264,456">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_11" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_83" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_120">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">213,1484.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_79" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="CopyFile_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_19" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="PathExists_13" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_85" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_123">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">223,1804.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_84" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="CopyFile_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WordReplaceText_11" sap:VirtualizedContainerService.HintSize="713,59" />
      <sap2010:ViewStateData Id="WordReplaceText_12" sap:VirtualizedContainerService.HintSize="713,59" />
      <sap2010:ViewStateData Id="WordReplaceText_13" sap:VirtualizedContainerService.HintSize="713,59" />
      <sap2010:ViewStateData Id="WordReplaceText_14" sap:VirtualizedContainerService.HintSize="713,59" />
      <sap2010:ViewStateData Id="Assign_1485" sap:VirtualizedContainerService.HintSize="713,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_24" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_15" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_339" sap:VirtualizedContainerService.HintSize="713,234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1478" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_780" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="653,317">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_22" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_16" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_336" sap:VirtualizedContainerService.HintSize="653,234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_781" sap:VirtualizedContainerService.HintSize="713,715">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1479" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_86" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="WordReplaceText_17" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_786" sap:VirtualizedContainerService.HintSize="336,414">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="713,168">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordReplaceText_21" sap:VirtualizedContainerService.HintSize="713,59" />
      <sap2010:ViewStateData Id="Assign_1483" sap:VirtualizedContainerService.HintSize="691,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_23" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="WordReplaceText_19" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_337" sap:VirtualizedContainerService.HintSize="653,234">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_783" sap:VirtualizedContainerService.HintSize="675,358">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="691,491">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_225" sap:VirtualizedContainerService.HintSize="691,55" />
      <sap2010:ViewStateData Id="WordReplaceText_20" sap:VirtualizedContainerService.HintSize="691,59" />
      <sap2010:ViewStateData Id="Sequence_784" sap:VirtualizedContainerService.HintSize="713,909">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_785" sap:VirtualizedContainerService.HintSize="735,2865">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_2" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_125">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">729,1977.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_121">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">729,1905.5</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">829,1927.5 829,1977.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_122">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">729,1804.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">829,1855.5 829,1905.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_16" sap:VirtualizedContainerService.HintSize="96,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">543,1786.5</av:Point>
            <av:Size x:Key="ShapeSize">96,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">543,1830 423,1830</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">639,1830 729,1830</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_124">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">500,1663</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">600,1714 600,1744 591,1744 591,1786.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_118">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,1663</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">760,1688.5 700,1688.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,1591</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,1613 860,1663</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_116">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,1490</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,1541 860,1591</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_15" sap:VirtualizedContainerService.HintSize="96,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">543,1466.5</av:Point>
            <av:Size x:Key="ShapeSize">96,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">543,1510 413,1510</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">639,1510 669,1510 669,1515.5 760,1515.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_115">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">500,1364.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">600,1415.5 600,1445.5 591,1445.5 591,1466.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_131">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">710,1244.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">810,1295.02 810,1325.02 600,1325.02 600,1364.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_130">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">460,1244.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">660,1269.52 710,1269.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_113">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,1365.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">320,1390.52 350,1390.52 350,1269.52 460,1269.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,1264.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,1315.02 220,1365.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_126">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">120,1124.02</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">220,1175.02 220,1264.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_78" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_103">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">450,1134.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_12" sap:VirtualizedContainerService.HintSize="82,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">339,978.5</av:Point>
            <av:Size x:Key="ShapeSize">82,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">339,1022 220,1022 220,1124.02</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">421,1022 550,1022 550,1134.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_99">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">280,877.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">380,928.5 380,978.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_4" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_111">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">730,749</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">830,771 830,903 480,903</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_14" sap:VirtualizedContainerService.HintSize="94,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">533,716.5</av:Point>
            <av:Size x:Key="ShapeSize">94,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">533,760 380,760 380,877.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">627,760 730,760</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">470,594.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">570,645.5 570,675.5 580,675.5 580,716.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateDirectory_3" sap:VirtualizedContainerService.HintSize="200,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_109">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">817,477.52</av:Point>
            <av:Size x:Key="ShapeSize">200,22</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">917,499.52 917,620 670,620</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_13" sap:VirtualizedContainerService.HintSize="94,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">613,445.02</av:Point>
            <av:Size x:Key="ShapeSize">94,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">613,488.52 440,488.52 440,620 470,620</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">707,488.52 817,488.52</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_106">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">569.895,337.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">669.895,388.5 669.895,418.5 660,418.5 660,445.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_110">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">548.895,227.5</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">669.895,287.5 669.895,337.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_107">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">548.895,117.5</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">669.895,177.5 669.895,227.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_221" sap:VirtualizedContainerService.HintSize="314,74">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_112">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">3,752.235</av:Point>
            <av:Size x:Key="ShapeSize">314,74</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_4" sap:VirtualizedContainerService.HintSize="1425,2114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">640,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">670,77.5 670,107.5 669.895,107.5 669.895,117.5</av:PointCollection>
            <x:Double x:Key="Height">2078.5</x:Double>
            <x:Double x:Key="Width">1410.895</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="287,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1486" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_25" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_787" sap:VirtualizedContainerService.HintSize="336,311">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="Assign_770" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_768" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_1296" sap:VirtualizedContainerService.HintSize="601,64" />
      <sap2010:ViewStateData Id="Assign_1124" sap:VirtualizedContainerService.HintSize="601,60" />
      <sap2010:ViewStateData Id="Assign_1310" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1190" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1192" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1193" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1194" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Assign_1196" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1197" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_553" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1201" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_557" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_285" sap:VirtualizedContainerService.HintSize="553,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1237" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1238" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_294" sap:VirtualizedContainerService.HintSize="553,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1212" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_1205" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_559" sap:VirtualizedContainerService.HintSize="264,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_286" sap:VirtualizedContainerService.HintSize="553,436">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1233" sap:VirtualizedContainerService.HintSize="553,60" />
      <sap2010:ViewStateData Id="Sequence_556" sap:VirtualizedContainerService.HintSize="575,1880">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_5" sap:VirtualizedContainerService.HintSize="601,2038">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_541" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_797" sap:VirtualizedContainerService.HintSize="242,64" />
      <sap2010:ViewStateData Id="Assign_765" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_766" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendMail_4" sap:VirtualizedContainerService.HintSize="314,322">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeMethod_6" sap:VirtualizedContainerService.HintSize="314,132" />
      <sap2010:ViewStateData Id="Sequence_461" sap:VirtualizedContainerService.HintSize="336,818">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_47">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">230,804.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">209,670</av:Point>
            <av:Size x:Key="ShapeSize">242,64</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,734 330,804.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_80">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">40,464.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">140,515.5 140,545.5 330,545.5 330,670</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_195" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Sequence_460" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_48">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">430,464.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">530,515.5 530,545.5 330,545.5 330,670</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_5" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">295,376.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">295,420 140,420 140,464.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">365,420 530,420 530,464.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">209,268</av:Point>
            <av:Size x:Key="ShapeSize">242,64</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,332 330,376.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">209,150</av:Point>
            <av:Size x:Key="ShapeSize">242,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">330,210 330,268</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">300,12.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">850</x:Double>
            <x:Double x:Key="Height">1145.5</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">330,87.5 330,150</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_46">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,1169.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_128">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,1069.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,1120.5 860,1169.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_97">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,978.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,1029.5 860,1069.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_96">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,877.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,928.5 860,978.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_71">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,624.5</av:Point>
            <av:Size x:Key="ShapeSize">200,183</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,807.5 860,877.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_36">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">760,386</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">860,494 860,624.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_95">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">530,341</av:Point>
            <av:Size x:Key="ShapeSize">200,198</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">730,440 760,440</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_79" sap:VirtualizedContainerService.HintSize="314,55">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">683,232.5</av:Point>
            <av:Size x:Key="ShapeSize">314,55</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">393,260 363,260 363,186.5 290.5,186.5 290.5,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">515,216.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">515,260 485,260 485,440 530,440</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">585,260 683,260</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">450,114.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">550,165.5 550,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_181" sap:VirtualizedContainerService.HintSize="314,150" />
      <sap2010:ViewStateData Id="InputDialog_10" sap:VirtualizedContainerService.HintSize="314,92" />
      <sap2010:ViewStateData Id="InputDialog_9" sap:VirtualizedContainerService.HintSize="314,92" />
      <sap2010:ViewStateData Id="Assign_1464" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_772" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_466" sap:VirtualizedContainerService.HintSize="314,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_465" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1418" sap:VirtualizedContainerService.HintSize="504,60" />
      <sap2010:ViewStateData Id="Assign_1399" sap:VirtualizedContainerService.HintSize="504,64" />
      <sap2010:ViewStateData Id="HttpClient_31" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_788" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_2" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_35" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="DeserializeXml_37" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="464,61" />
      <sap2010:ViewStateData Id="ExecuteXPath_31" sap:VirtualizedContainerService.HintSize="464,89" />
      <sap2010:ViewStateData Id="Assign_1419" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_330" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteXPath_32" sap:VirtualizedContainerService.HintSize="464,89" />
      <sap2010:ViewStateData Id="Assign_1421" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_331" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_725" sap:VirtualizedContainerService.HintSize="486,1192">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_1420" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_37" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_726" sap:VirtualizedContainerService.HintSize="336,315">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_113" sap:VirtualizedContainerService.HintSize="490,384">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_111" sap:VirtualizedContainerService.HintSize="504,1886">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_723" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MessageBox_5" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_38" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_727" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_91">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">20,444.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_9" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">335,426.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">335,470 220,470</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">405,470 435,470 435,440 530,440</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">240,314.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">340,365.5 340,395.5 370,395.5 370,426.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_53">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">240,234.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">340,285.5 340,314.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_226" sap:VirtualizedContainerService.HintSize="314,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">3,92.235</av:Point>
            <av:Size x:Key="ShapeSize">314,94</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="1744,1678">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">520,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">1730</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">550,77.4 550,114.5</av:PointCollection>
            <x:Double x:Key="Height">1642</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MainFlowchart_1" sap:VirtualizedContainerService.HintSize="1784,1758">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
            <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>